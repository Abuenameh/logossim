{"version":3,"sources":["../../core/Simulation/simulation.worker.js","ui-components/Tour/images/bifurcation.gif","ui-components/Tour/images/context-menu.gif","ui-components/Tour/images/simulation.gif","ui-components/Tour/images/wire.gif","../../core/Diagram/states/common.js","../../core/Simulation/utils.js","../../core/Link/LinkModel.js","../../core/Port/PortModel.js","../../core/Simulation/AudioEngine.js","../../core/Simulation/serialize.js","../../core/Simulation/SimulationEngine.js","../../core/BaseModel.js","../../core/ComponentContext.jsx","../../core/Component.jsx","../../core/Diagram/DiagramContext.jsx","../../core/Diagram/DroppableLayer.jsx","../../core/Diagram/Diagram.jsx","../../core/Link/LinkWidget.jsx","../../core/Link/LinkFactory.jsx","../../core/Port/PortFactory.js","../../core/Diagram/actions/ClipboardAction.js","../../core/Diagram/actions/DeleteAction.js","../../core/Diagram/actions/DuplicateAction.js","../../core/Diagram/actions/UndoRedoAction.js","../../core/Diagram/actions/ZoomAction.js","../../core/Diagram/Command/commandHandlers.js","../../core/Diagram/Command/Command.js","../../core/Diagram/Command/CommandManager.js","../../core/Diagram/states/handleLinkDrag.js","../../core/Port/Port.jsx","../../core/Diagram/states/BifurcateLinkState.js","../../core/Diagram/states/DragCanvasState.js","../../core/Diagram/states/DragNewLinkState.js","../../core/Diagram/states/MoveItemsState.js","../../core/Diagram/states/SelectionBoxState.js","../../core/Diagram/states/SelectingState.js","../../core/Diagram/states/States.js","../../core/Diagram/DiagramEngine.js","../../components/portExtendUtils.js","../../components/And/AndWidget.jsx","../../components/And/AndIcon.jsx","../../components/And/AndRegister.js","../../components/And/AndModel.js","../../components/Buffer/BufferWidget.jsx","../../components/Buffer/BufferIcon.jsx","../../components/Buffer/BufferRegister.js","../../components/Buffer/BufferModel.js","../../components/Button/ButtonWidget.jsx","../../components/Button/ButtonIcon.jsx","../../components/Button/ButtonRegister.js","../../components/Button/ButtonModel.js","../../components/Buzzer/BuzzerWidget.jsx","../../components/Buzzer/BuzzerIcon.jsx","../../components/Buzzer/BuzzerRegister.js","../../components/Buzzer/BuzzerModel.js","../../components/Clock/ClockWidget.jsx","../../components/Clock/ClockIcon.jsx","../../components/Clock/ClockRegister.js","../../components/Clock/ClockModel.js","../../components/ControlledBuffer/ControlledBufferWidget.jsx","../../components/ControlledBuffer/ControlledBufferIcon.jsx","../../components/ControlledBuffer/ControlledBufferRegister.js","../../components/ControlledBuffer/ControlledBufferModel.js","../../components/ControlledInverter/ControlledInverterWidget.jsx","../../components/ControlledInverter/ControlledInverterIcon.jsx","../../components/ControlledInverter/ControlledInverterRegister.js","../../components/ControlledInverter/ControlledInverterModel.js","../../components/Counter/CounterWidget.jsx","../../components/Counter/CounterIcon.jsx","../../components/Counter/CounterRegister.js","../../components/Counter/CounterModel.js","../../components/Demux/DemuxWidget.jsx","../../components/Demux/DemuxIcon.jsx","../../components/Demux/DemuxRegister.js","../../components/Demux/DemuxModel.js","../../components/Ground/GroundWidget.jsx","../../components/Ground/GroundIcon.jsx","../../components/Ground/GroundRegister.js","../../components/Ground/GroundModel.js","../../components/Input/InputWidget.jsx","../../components/Input/InputIcon.jsx","../../components/Input/InputRegister.js","../../components/Input/InputModel.js","../../components/Joiner/JoinerWidget.jsx","../../components/Joiner/JoinerIcon.jsx","../../components/Joiner/JoinerRegister.js","../../components/Joiner/JoinerModel.js","../../components/Led/LedWidget.jsx","../../components/Led/LedIcon.jsx","../../components/Led/LedRegister.js","../../components/Led/LedModel.js","../../components/Mux/MuxWidget.jsx","../../components/Mux/MuxIcon.jsx","../../components/Mux/MuxRegister.js","../../components/Mux/MuxModel.js","../../components/Nand/NandWidget.jsx","../../components/Nand/NandIcon.jsx","../../components/Nand/NandRegister.js","../../components/Nand/NandModel.js","../../components/Nor/NorWidget.jsx","../../components/Nor/NorIcon.jsx","../../components/Nor/NorRegister.js","../../components/Nor/NorModel.js","../../components/Not/NotWidget.jsx","../../components/Not/NotIcon.jsx","../../components/Not/NotRegister.js","../../components/Not/NotModel.js","../../components/Or/OrWidget.jsx","../../components/Or/OrIcon.jsx","../../components/Or/OrRegister.js","../../components/Or/OrModel.js","../../components/Output/OutputWidget.jsx","../../components/Output/OutputIcon.jsx","../../components/Output/OutputRegister.js","../../components/Output/OutputModel.js","../../components/Power/PowerWidget.jsx","../../components/Power/PowerIcon.jsx","../../components/Power/PowerRegister.js","../../components/Power/PowerModel.js","../../components/Ram/RamIcon.jsx","../../components/Ram/RamWidget.jsx","../../components/Ram/RamRegister.js","../../components/Ram/RamModel.js","../../components/Rom/RomIcon.jsx","../../components/Rom/RomWidget.jsx","../../components/Rom/RomRegister.js","../../components/Rom/RomModel.js","../../components/Splitter/SplitterWidget.jsx","../../components/Splitter/SplitterIcon.jsx","../../components/Splitter/SplitterRegister.js","../../components/Splitter/SplitterModel.js","../../components/Ssd/SsdWidget.jsx","../../components/Ssd/SsdIcon.jsx","../../components/Ssd/SsdRegister.js","../../components/Ssd/SsdModel.js","../../components/Switch/SwitchWidget.jsx","../../components/Switch/SwitchIcon.jsx","../../components/Switch/SwitchRegister.js","../../components/Switch/SwitchModel.js","../../components/Xnor/XnorWidget.jsx","../../components/Xnor/XnorIcon.jsx","../../components/Xnor/XnorRegister.js","../../components/Xnor/XnorModel.js","../../components/Xor/XorWidget.jsx","../../components/Xor/XorIcon.jsx","../../components/Xor/XorRegister.js","../../components/Xor/XorModel.js","../../components/index.js","ui-components/Buttons/ComponentSelectButton.jsx","ui-components/Icons/ArrowLeft.jsx","ui-components/Icons/Chevron.jsx","ui-components/Icons/Chevrons.jsx","ui-components/Icons/Close.jsx","ui-components/Icons/Copy.jsx","ui-components/Icons/Cut.jsx","ui-components/Icons/Delete.jsx","ui-components/Icons/Duplicate.jsx","ui-components/Icons/Edit.jsx","ui-components/Icons/Paste.jsx","ui-components/Icons/Pause.jsx","ui-components/Icons/Play.jsx","ui-components/Icons/Redo.jsx","ui-components/Icons/Settings.jsx","ui-components/Icons/Stop.jsx","ui-components/Icons/Undo.jsx","ui-components/Icons/ZoomIn.jsx","ui-components/Icons/ZoomOut.jsx","ui-components/Icons/RotateLeft.jsx","ui-components/Icons/RotateRight.jsx","ui-components/Buttons/SimulationControlButtons.jsx","ui-components/Modal/Modal.jsx","ui-components/Modal/ModalContentLayout.jsx","ui-components/ComponentSelect/ComponentConfigurationInput.jsx","ui-components/ComponentSelect/DraggableComponent.jsx","ui-components/ComponentSelect/ComponentConfiguration.jsx","ui-components/ComponentSelect/ComponentEdit.jsx","ui-components/ComponentSelect/ComponentGroup.jsx","ui-components/ComponentSelect/ComponentSearch.jsx","ui-components/ComponentSelect/ComponentSelect.jsx","ui-components/Key/Key.jsx","ui-components/ContextMenus/ContextMenuIconContainer.jsx","ui-components/ContextMenus/ContextMenuShortcutContainer.jsx","ui-components/ContextMenus/ComponentContextMenu.jsx","ui-components/ContextMenus/DiagramContextMenu.jsx","ui-components/ContextMenus/ContextMenus.jsx","ui-components/Help/HelpAbout.jsx","ui-components/Help/HelpKeyboardShortcuts.jsx","ui-components/LoadingExample/LoadingExample.jsx","ui-components/Snackbar/Snackbar.jsx","ui-components/Titlebar/Titlebar.jsx","ui-components/Tour/tourCircuit.js","ui-components/Tour/Tour.jsx","App.jsx","serviceWorker.js","../../core/common/prototype.js","index.js"],"names":["module","exports","Worker","snap","position","gridSize","Point","Math","round","x","y","samePosition","p1","p2","sameX","points","map","p","every","i","arr","sameY","sameAxis","closestPointToLink","P","link","distance","A","B","hypot","closestPointOnSegment","Q","segment","v","u","t","closest","point","distanceToA","distanceToB","hasMiddlePoint","getFirstPosition","getLastPosition","firstSegment","getMiddlePosition","lastSegment","isPointOverSegment","max","min","isPointOverLink","getSecondPosition","isPointOverFirstLinkSegment","isPointOverSecondLinkSegment","getLandingLink","engine","getLastPoint","getPosition","Object","values","getModel","getLinkLayers","getLinks","find","target","getID","getIncompatibleWidthsErrorMessage","source","getBits","MAX_VALUE","1","2","4","8","16","isValueValid","value","Array","isArray","isValueError","some","LinkModel","options","type","bifurcations","bifurcationSource","bifurcationTarget","bits","this","getParent","getOptions","label","LabelModel","newLabel","DefaultLabelModel","setLabel","getBifurcationSource","getBifurcationTarget","bifurcation","push","filter","b","result","forEach","getAllBifurcations","flat","Infinity","selected","setSelected","getSourcePort","getTargetPort","remove","removeBifurcation","event","registerModel","data","requestAnimationFrame","PointModel","then","addBifurcation","setBifurcationSource","setBifurcationTarget","repaintCanvas","pointModel","index","setPosition","getGridSize","getPoints","length","getFirstPoint","getSecondPoint","getMiddlePoint","getSecondLastPoint","first","middle","last","includes","Error","isSelected","asNumber","getComputedStyle","document","body","getPropertyValue","RDLinkModel","validateDefaultValue","portName","PortModel","maximumLinks","input","defaultFloatingValue","defaultErrorValue","orientation","complemented","offset","componented","getName","fill","bit","getDefaultFloatingValue","getDefaultErrorValue","keys","getMaximumLinks","port","isNewLinkAllowed","setBits","links","getMainLink","getColor","RDPortModel","AudioEngine","context","AudioContext","destination","audios","id","frequency","waveform","gainNode","createGain","gain","oscillator","createOscillator","connect","start","getGainNode","e","disconnect","getOscillator","payload","command","create","play","pause","setFrequency","setWaveform","getAudio","audio","stop","serializeComponents","components","component","getType","configurations","ports","name","isInput","properties","instance","key","reduce","obj","getPortInfo","componentId","getLinkId","serialize","diagram","models","Class","Model","methods","getOwnPropertyNames","prototype","methodName","toString","getActiveLinkLayer","getModels","getBifurcations","isBifurcation","getActiveNodeLayer","worker","SimulationWorker","SimulationEngine","onSimulationMessage","appendDiff","audioEngine","handlePayload","cleanUp","addEventListener","state","clearDiff","postMessage","undefined","a","Promise","resolve","waitForEnd","removeEventListener","diff","getPort","nameOrInstance","BaseModel","canRotate","initialize","floating","error","setAsInput","setDefaultFloatingValue","setDefaultErrorValue","setOrientation","setComplemented","setOffset","setLength","setAsOutput","configuration","addInputPort","isOutput","addOutputPort","fromEntries","entries","getPorts","args","clone","getX","getY","from","emitted","emit","NodeModel","ComponentContext","React","createContext","Component","description","group","model","widget","icon","Widget","Icon","storeRef","Provider","initialConfig","AbstractReactFactory","DiagramContext","DroppableLayer","styled","div","attrs","disabled","props","onDragOver","preventDefault","onDrop","JSON","parse","dataTransfer","getData","handleComponentDrop","FullscreenCanvas","CanvasWidget","Diagram","test","isLocked","getEngine","LinkWidget","refPaths","updateRenderedPaths","clearRenderedPaths","setRenderedPaths","ref","current","to","tuple","path","factory","createRef","cloneElement","generateLinkSegment","loose","color","r","getPointRadius","stroke","strokeWidth","cx","cy","bifurcationOrigin","lastSourcePoint","renderPoint","bifurcationTargetPosition","data-default-link-test","testName","generatePathPoints","renderSegment","generateLinePath","renderBifurcationSourcePoint","renderBifurcationTargetPoint","renderLooseLinkPoint","Path","LinkFactory","diagramEngine","getLineWidth","d","DefaultLinkFactory","PortFactory","AbstractModelFactory","ClipboardAction","areShortcutsAllowed","InputType","KEY_DOWN","fire","matchesInput","code","handleCut","handleCopy","handlePaste","ctrlKey","getSelectedComponents","getSelectedEntities","entity","copies","fireEvent","nodes","node","getAllLinks","localStorage","setItem","stringify","clipboard","getItem","clearSelection","serialized","modelInstance","getChildModelFactoryBank","getFactory","generateModel","deserialize","addNode","Action","DeleteAction","handleAction","entities","nodesLinks","DuplicateAction","clones","UndoRedoAction","shiftKey","handleUndo","handleRedo","commands","undo","redo","ZOOM_LEVELS","ZoomAction","MOUSE_WHEEL","stopPropagation","getLayers","layer","allowRepaint","nextZoomLevelIndex","zoomDirection","sign","deltaY","currentZoomLevelIndex","indexOf","getZoomLevel","oldZoomFactor","setZoomLevel","zoomFactor","boundingRect","getCanvas","getBoundingClientRect","clientWidth","width","clientHeight","height","widthDiff","heightDiff","clientX","left","clientY","top","xFactor","getOffsetX","yFactor","getOffsetY","commandHandlers","editComponentConfiguration","adjustLink","nodeList","sourcePort","n","setSourcePort","addLink","targetPort","setTargetPort","componentsAdded","add","execute","componentEdited","after","before","linkAdded","linkChanged","handleLinkChanged","getLink","setPoints","oldTarget","entitiesRemoved","sort","l1","l2","entitiesMoved","handleEntitiesMoved","getNode","Command","CommandManager","clear","stack","nextLinkPosition","initialRelative","sourcePosition","zoomLevelPercentage","engineOffsetX","engineOffsetY","getRelativePoint","initialXRelative","initialYRelative","linkNextX","virtualDisplacementX","linkNextY","virtualDisplacementY","handleLinkDrag","next","hasStartedMoving","removePoint","moveDirection","addPoint","generatePoint","WrappedComponent","BifurcateLinkState","showSnackbar","sourceEdited","sourceBefore","getLinkPoints","registerAction","MOUSE_DOWN","getMouseElement","snapPointToSourceLink","getRelativeMousePoint","eject","getLinkFactories","MOUSE_UP","isNearbySourcePosition","reportPosition","adjustBifurcationOverlayingSource","landing","mergeWithBifurcation","sourcePoints","closestCorner","getClosestCornerToPosition","closestPath","getClosestPathToPosition","snappedPosition","axis","sourcePoint","getPathPoints","pathPosition","getPathDirections","abs","secondLast","getSecondLastPosition","bifurcationToMerge","newMiddle","newLast","isStraight","adjustBifurcationPoints","newSource","call","AbstractDisplacementState","DragCanvasState","prev","initialCanvasX","initialCanvasY","nativeEvent","which","targetTouches","displacementX","displacementY","DragNewLinkState","createLinkModel","getPrototypeOf","isNearbySourcePort","canLinkToPort","reverse","getFactoryForLink","tolerance","sourcePortSize","sourcePortPosition","MoveItemsState","getNodesPositions","getLinksPoints","adjustLinkPoints","linkDirections","adjustLinkBifurcations","lastDisplacement","element","getActionEventBus","getModelForEvent","getLinkDirections","nodesBefore","linksBefore","previous","initialPositions","entry","getBifurcatedLinks","getLinksFromNode","acc","getLinkDirection","currentDisplacement","moveEntity","adjustNodeLinks","item","initial","getGridPosition","adjustFirstAndLastPoints","closestToFirst","closestToLast","SelectionBoxState","SelectionLayerModel","addLayer","rel","right","bottom","setBox","getBoxDimensions","relative","initialX","initialY","rect","Rectangle","getSelectionEntities","getBoundingBox","allowSelection","bounds","containsPoint","getTopLeft","getBottomRight","SelectingState","transitionWithEvent","State","States","childStates","dragCanvas","dragNewLink","bifurcateLink","dragItems","TOUCH_START","DiagramEngine","initializeEngine","createEngine","registerDefaultDeleteItemsAction","registerDefaultZoomCanvasAction","registerListener","getStateMachine","pushState","getPortFactories","registerFactory","registerComponents","initializeModel","DiagramModel","setGridSize","setLocked","eventDidFire","function","adjustGridOffset","adjustGridZoom","realignGrid","setModel","getNodeFactories","load","circuit","deserializeModel","locked","repaint","offsetX","offsetY","zoom","style","setProperty","c","getSnappedRelativeMousePoint","window","innerWidth","innerHeight","getSnappedWindowCenter","handleComponentEdit","configurationsBefore","portsBefore","hasNewPort","newPort","hasRemovedPort","oldPort","portBefore","getSelectedNodes","fireAction","duplicateSelected","cutSelected","copySelected","pasteSelected","deleteSelected","zoomIn","zoomOut","synchronizeLink","setValue","synchronizeComponent","output","clearAllValues","clearLinkValues","clearPortValues","getNodes","Wire","Circle","marginSide","Port","className","getOrientation","getLength","getOffset","widths","heights","x2s","y2s","data-name","data-nodeid","title","display","x1","y1","x2","y2","getLineColor","PortWidget","withProps","useContext","distributePorts","numPorts","isNumberOfPortsEven","closestEven","startAt","floor","splice","PortExtensionBar","size","place","PortExtension","portPositions","lastPortPosition","Wrapper","PositionedPort","edge","side","Shape","viewBox","transform","transformOrigin","AndWidget","inputPorts","getInputPorts","inputEdges","inputSides","AndIcon","default","validate","INPUT_PORTS_NUMBER","Number","dataBits","DATA_BITS","ORIENTATION","executeBit","step","out","asArray","transpose","stepFloating","stepError","BufferWidget","BufferIcon","in","Button","button","ButtonWidget","buttonRef","useRef","handleReleaseAway","contains","onRelease","useEffect","onMouseDown","onClick","onMouseUp","ButtonIcon","as","onSimulationStart","Body","isActive","Hole","children","data-testid","BuzzerWidget","BuzzerIcon","frequencyHz","FREQUENCY_HZ","WAVEFORM","createAudio","getInput","onSimulationPause","getValue","Decoration","periodMs","animateTransition","transition","ClockWidget","ClockIcon","emitInterval","highCount","lowCount","setInterval","lastOutput","getNextOutput","HIGH_DURATION","LOW_DURATION","clearInterval","onSimulationStop","getOutput","ControlledBufferWidget","ControlledBufferIcon","control","dWidth","dHeight","translation","ControlledInverterWidget","ControlledInverterIcon","PositionedChevron","strokeLinecap","CounterWidget","CounterIcon","START_AT","countOnRising","COUNT_ON","wrapAt","WRAP_AT","stepValue","STEP_VALUE","isRisingEdge","meta","risingEdge","fallingEdge","outputNumber","DemuxWidget","outputPorts","getOutputPorts","DemuxIcon","OUTPUT_NUMBER","log2","_","selection","strokeLinejoin","GroundWidget","GroundIcon","SHAPE_SIZES","PIN_BACKGROUND","0","PIN_BORDER","PinContainer","Pin","InputWidget","positions","getBitAt","InputIcon","threeState","THREE_STATE","nextValue","bitHeight","JoinerWidget","JoinerIcon","LedWidget","LedIcon","activeWhen","ACTIVE_WHEN","colors","on","ON_COLOR","off","OFF_COLOR","inputNumber","MuxWidget","MuxIcon","INPUT_NUMBER","vbWidth","vbHeight","NandWidget","dWidths","dHeights","NandIcon","PortExtensionConnector","portWidth","portColor","NorWidget","NorIcon","NotWidget","NotIcon","OrWidget","OrIcon","format","span","ErrorMessage","FloatingMessage","OutputWidget","OUTPUT_FORMAT","mapBits","number","padStart","showAsNumber","OutputIcon","fillOpacity","PowerWidget","PowerIcon","RamIcon","Memory","Cell","ActiveAddress","AddressValueContainer","Address","Value","RamWidget","memory","getMemory","selectedAddress","getAddress","range","address","getMemoryDisplayRange","slice","formattedAddress","dataWidth","DATA_WIDTH","addressWidth","ADDRESS_WIDTH","CONTENT","parseBinary","clearMemory","select","currentAddress","clock","getWireValue","RomIcon","RomWidget","SplitterWidget","SplitterIcon","SEGMENTS","horizontal","segments","opacity","f","g","dp","getPositionForSegment","getSideForSegment","SsdIcon","vertical","Switch","SwitchValue","SwitchWidget","SwitchIcon","mask","XnorWidget","XnorIcon","behavior","MULTIPLE_INPUT_BEHAVIOR","executeOne","executeEven","bind","XorWidget","XorIcon","executeOdd","Input","Output","Clock","Led","Ssd","Buzzer","And","Nand","Or","Nor","Xor","Xnor","Buffer","Not","ControlledBuffer","ControlledInverter","Splitter","Joiner","Power","Ground","Mux","Demux","Ram","Rom","Counter","groupedComponents","Container","ComponentSelectButton","handleClick","data-for","data-tip","data-place","ArrowLeft","Chevron","Chevrons","Close","Copy","rx","ry","Cut","Delete","Duplicate","Edit","Paste","Pause","Play","Redo","Settings","Stop","Undo","ZoomIn","ZoomOut","RotateLeft","RotateRight","SimulationControlButtons","handleClickStart","handleClickPause","handleClickStop","Overlay","Window","Modal","Header","Title","h1","Subtitle","h2","Content","IconButton","form","field","componentType","innerRef","htmlFor","option","accept","onChange","files","handleError","fr","FileReader","onerror","onload","file","setFieldValue","exception","readAsText","ComponentConfigurationInput","errors","diagramEngineStub","getPortCoords","getWidth","getHeight","getTooltip","ErrorWidget","DraggableComponent","handleClose","draggable","onDragStart","setDragImage","currentTarget","setData","Tooltip","hide","DragArea","FormScroll","Form","BaseForm","Footer","Hint","SubmitButton","getInitialValues","ComponentConfiguration","editMode","handleBack","handleSubmit","firstInputRef","focus","rebuild","initialValues","onSubmit","isValid","autoComplete","getFormSubmitLabel","ComponentEdit","isOpen","callback","useCallback","closeOnEsc","edit","HorizontalSeparator","hr","ComponentsGrid","ComponentButton","ComponentTitle","ComponentIcon","ComponentGroup","handleComponentSelect","useState","setOpen","SearchBar","Scroll","ComponentSearch","groups","filteredGroups","setFilteredGroups","searchText","setSearchText","autoFocus","placeholder","like","RegExp","newFilteredGroups","match","handleSearchChange","onKeyDown","handleKeyDown","ComponentSelect","selectedComponent","setSelectedComponent","Key","ContextMenuIconContainer","ContextMenuShortcutContainer","ComponentContextMenu","rotateLeft","rotateRight","configureComponent","DiagramContextMenu","ContextMenus","Version","Divider","HelpAbout","paddingTop","marginTop","overflowY","flexDirection","alignItems","src","process","alt","version","margin","textAlign","href","namespace","repo","TableContainer","Table","table","TableColumn","td","HelpKeyboardShortcuts","LoadingExample","BACKGROUND_COLOR","warning","info","success","open","Message","progress","keyframes","ProgressBar","paused","timeout","TRANSITION_DURATION","Snackbar","message","split","string","isHidden","NameContainer","isFocused","NameInput","ButtonsContainer","FileInput","HelpButton","HelpButtonMenu","HelpButtonMenuItem","HideButton","Titlebar","circuitName","isCircuitNameFocused","handleChangeCircuitName","handleFocusCircuitName","handleBlurCircuitName","handleClickSave","handleFileLoad","handleClickKeyboardShortcuts","handleClickRedoTour","handleClickAbout","helpButtonRef","helpMenuRef","nameInputRef","fileInputRef","isHelpMenuOpen","setHelpMenuOpen","setHidden","handleToggleHelpMenu","handleClickAway","onFocus","onBlur","blur","maxLength","click","hidden","DIMENSIONS","createdAt","updatedAt","layers","isSvg","transformed","labels","parentNode","and","not","pulse","Pulse","Beacon","forwardRef","imageStyle","alignSelf","borderRadius","boxShadow","marginBottom","Tour","recenterTourCircuit","currentStep","run","recenterCircuit","action","setTourRunning","loadCircuit","clearCircuit","EVENTS","STEP_AFTER","ACTIONS","NEXT","PREV","setState","TOUR_END","CLOSE","steps","content","placement","showProgress","disableOverlayClose","locale","skip","spotlightPadding","contextMenu","wire","simulation","lineHeight","showSkipButton","stepIndex","continuous","scrollToFirstStep","styles","tooltip","tooltipContent","fontSize","buttonBack","buttonNext","background","buttonSkip","border","back","close","beaconComponent","App","isComponentSelectOpen","isComponentEditOpen","isHelpKeyboardOpen","isHelpAboutOpen","isTourRunning","shortcutHandler","isStopped","showAddComponent","selectedNodes","showEditComponent","isRunning","handleClickLoad","isCircuitEmpty","loadFile","circuitCreatedAt","loadExample","isLoadingExample","fetch","response","json","loadHandler","lastSaved","isTourAvailable","confirm","removeItem","shouldWarnUnload","currentCircuit","lastSavedCircuit","unloadHandler","generateFile","returnValue","Date","autoSave","synchronizeSimulation","getDiff","componentDiff","renderSimulation","handleCircuitNameChange","handleCircuitNameFocus","handleCircuitNameBlur","blob","Blob","filename","replace","FileSaver","saveAs","getElementById","forceUpdate","hideAddComponent","componentEdit","hideEditComponent","rotateComponentBy","increment","rotateComponentLeft","rotateComponentRight","showHelpTour","showHelpKeyboard","hideHelpKeyboard","showHelpAbout","hideHelpAbout","snackbar","clearTimeout","timeoutID","hideSnackbar","res","setTimeout","handleLoadTourCircuit","circuitBeforeTour","tourCircuit","handleCenterTourCircuitOffset","handleUnloadTourCircuit","example","URLSearchParams","location","search","get","autoSaveInterval","getState","globalEventOff","Boolean","hostname","curr","concat","String","char","arrayLength","fillWith","sanitize","chunk","parseInt","original","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc2774d6.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"SimulationWorker.878fd11fb50547bc230f.js\");\n};","module.exports = __webpack_public_path__ + \"static/media/bifurcation.e3ec32b9.gif\";","module.exports = __webpack_public_path__ + \"static/media/context-menu.94343183.gif\";","module.exports = __webpack_public_path__ + \"static/media/simulation.2d0f910c.gif\";","module.exports = __webpack_public_path__ + \"static/media/wire.e7e521da.gif\";","import { Point } from '@projectstorm/geometry';\n\n/**\n * Returns a position, but snapped to the grid.\n */\nexport const snap = (position, gridSize = 15) => {\n  if (position instanceof Point) {\n    return new Point(\n      Math.round(position.x / gridSize) * gridSize,\n      Math.round(position.y / gridSize) * gridSize,\n    );\n  }\n\n  return Math.round(position / gridSize) * gridSize;\n};\n\n/**\n * Checks if two points are on the same position.\n */\nexport const samePosition = (p1, p2) =>\n  p1 &&\n  p2 &&\n  Math.round(p1.x) === Math.round(p2.x) &&\n  Math.round(p1.y) === Math.round(p2.y);\n\n/**\n * Checks if all given points share the same X position.\n */\nexport const sameX = (...points) =>\n  points.map(p => Math.round(p.x)).every((p, i, arr) => p === arr[0]);\n\n/**\n * Checks if all given points share the same Y position.\n */\nexport const sameY = (...points) =>\n  points.map(p => Math.round(p.y)).every((p, i, arr) => p === arr[0]);\n\n/**\n * Checks if all given points share positions on any axis.\n */\nexport const sameAxis = (...points) =>\n  sameX(...points) || sameY(...points);\n\n/**\n * Checks if two points are nearby each other, given a tolerance.\n */\nexport const nearby = (p1, p2, tolerance) =>\n  Math.abs(p1.x - p2.x) <= tolerance &&\n  Math.abs(p1.y - p2.y) <= tolerance;\n\n/**\n * Finds the closest position to a link from a given point.\n */\nexport const closestPointToLink = (P, link) => {\n  const distance = (A, B) => Math.hypot(A.x - B.x, A.y - B.y);\n\n  const closestPointOnSegment = (Q, segment) => {\n    const { A, B } = segment;\n\n    const v = new Point(B.x - A.x, B.y - A.y);\n    const u = new Point(A.x - Q.x, A.y - Q.y);\n\n    const vu = v.x * u.x + v.y * u.y;\n    const vv = v.x ** 2 + v.y ** 2;\n\n    const t = -vu / vv;\n\n    // Closest point lies between A and B\n    if (t >= 0 && t <= 1) {\n      const closest = new Point(\n        (1 - t) * A.x + t * B.x,\n        (1 - t) * A.y + t * B.y,\n      );\n      return {\n        point: closest,\n        distance: distance(Q, closest),\n      };\n    }\n\n    // Closest point is either A or B\n    const distanceToA = distance(Q, A);\n    const distanceToB = distance(Q, B);\n\n    return distanceToA <= distanceToB\n      ? { point: A, distance: distanceToA }\n      : { point: B, distance: distanceToB };\n  };\n\n  if (!link.hasMiddlePoint()) {\n    return closestPointOnSegment(P, {\n      A: link.getFirstPosition(),\n      B: link.getLastPosition(),\n    }).point;\n  }\n\n  const firstSegment = closestPointOnSegment(P, {\n    A: link.getFirstPosition(),\n    B: link.getMiddlePosition(),\n  });\n\n  const lastSegment = closestPointOnSegment(P, {\n    A: link.getMiddlePosition(),\n    B: link.getLastPosition(),\n  });\n\n  if (firstSegment.distance <= lastSegment.distance) {\n    return firstSegment.point;\n  }\n  return lastSegment.point;\n};\n\n/**\n * Determines is a point is over a given segment.\n */\nconst isPointOverSegment = (point, segment) => {\n  const { A, B } = segment;\n\n  if (sameX(A, point, B)) {\n    const max = Math.max(A.y, B.y);\n    const min = Math.min(A.y, B.y);\n\n    return min <= point.y && point.y <= max;\n  }\n\n  if (sameY(A, point, B)) {\n    const max = Math.max(A.x, B.x);\n    const min = Math.min(A.x, B.x);\n\n    return min <= point.x && point.x <= max;\n  }\n\n  return false;\n};\n\n/**\n * Determines if a point is over a given link's first segment.\n */\nexport const isPointOverFirstLinkSegment = (point, link) =>\n  isPointOverSegment(point, {\n    A: link.getFirstPosition(),\n    B: link.getSecondPosition(),\n  });\n\n/**\n * Determines if a point is over a given link's second segment.\n */\nexport const isPointOverSecondLinkSegment = (point, link) => {\n  if (!link.hasMiddlePoint()) return false;\n\n  return isPointOverSegment(point, {\n    A: link.getSecondPosition(),\n    B: link.getLastPosition(),\n  });\n};\n\n/**\n * Determines if a point is over a given link.\n */\nexport const isPointOverLink = (point, link) =>\n  isPointOverFirstLinkSegment(point, link) ||\n  isPointOverSecondLinkSegment(point, link);\n\n/**\n * Searches for any link that the given link might be landing on.\n */\nexport const getLandingLink = (link, engine) => {\n  const point = link.getLastPoint().getPosition();\n\n  return Object.values(\n    engine\n      .getModel()\n      .getLinkLayers()[0]\n      .getLinks(),\n  ).find(target => {\n    if (target.getID() === link.getID()) return false;\n    return isPointOverLink(point, target);\n  });\n};\n\n/**\n * Generates the error message displayed to the user for incompatible\n * display widths.\n */\nexport const getIncompatibleWidthsErrorMessage = (\n  source,\n  target,\n) => `Incompatible bit widths!\n\\nSource: ${source.getBits()} bit${source.getBits() > 1 ? 's' : ''}\n\\nTarget: ${target.getBits()} bit${target.getBits() > 1 ? 's' : ''}`;\n","/* eslint-disable no-restricted-globals */\nexport const MIN_VALUE = 0;\nexport const MAX_VALUE = {\n  1: 0b1,\n  2: 0b11,\n  4: 0b1111,\n  8: 0b1111_1111,\n  16: 0b1111_1111_1111_1111,\n};\n\nexport const adjustValueToBits = (value, dataBits = 1) => {\n  if (typeof value !== 'number') return value;\n\n  const allBitsSet = 0b1111_1111_1111_1111_1111_1111_1111_1111;\n  const mask = allBitsSet >>> (32 - dataBits);\n\n  return value & mask;\n};\n\nexport const isValueEqual = (value1, value2) => {\n  return value1\n    .map((v1, index) => v1 === value2[index])\n    .every(Boolean);\n};\n\nexport const isValueValid = value =>\n  value === null ||\n  (Array.isArray(value) && value.every(v => typeof v === 'number'));\n\nexport const isInputValid = input =>\n  input.every(item => isValueValid(item.value, item.bits));\n\nexport const isValueError = value =>\n  value === 'e' ||\n  (Array.isArray(value) && value.some(v => v === 'e'));\n\nexport const isInputError = input =>\n  input.some(item => isValueError(item.value));\n\nexport const isValueFloating = value =>\n  value === 'x' ||\n  (Array.isArray(value) && value.some(v => v === 'x'));\n\nexport const isInputFloating = input =>\n  input.some(item => isValueFloating(item.value));\n\nexport const getCleanDiff = () => ({\n  components: {},\n  links: {},\n});\n\nexport const getComponent = id => {\n  if (!self.circuit) return null;\n\n  return (\n    self.circuit.components.find(component => component.id === id) ||\n    null\n  );\n};\n\n/**\n * Find all meshes that are affected by an emitted change.\n */\nexport const getAffectedMeshes = emitted =>\n  self.circuit.meshes.filter(mesh =>\n    mesh.inputs.some(\n      meshInput =>\n        emitted.from.id === meshInput.componentId &&\n        Object.keys(emitted.value).includes(meshInput.name),\n    ),\n  );\n\n/**\n * Finds all components that are connected on a given mesh's Input.\n */\nexport const getMeshInputComponents = mesh =>\n  [\n    ...new Set(mesh.inputs.map(meshInput => meshInput.componentId)),\n  ].map(componentId => getComponent(componentId));\n\n/**\n * Finds all components that are connected on a given mesh's output.\n */\nexport const getMeshOutputComponents = mesh =>\n  [\n    ...new Set(\n      mesh.outputs.map(meshOutput => meshOutput.componentId),\n    ),\n  ].map(componentId => getComponent(componentId));\n\n/**\n * Determines the mesh input value.\n */\nexport const getMeshInputValue = mesh => {\n  const allInputValues = mesh.inputs\n    .map(portInfo => {\n      const component = getComponent(portInfo.componentId);\n\n      /**\n       * From the mesh's perspective, a component's output port is an\n       * input.\n       */\n      const port = component.getOutputPort(portInfo.name);\n\n      return port ? port.value : null;\n    })\n    .filter(value => value !== null);\n\n  return [...Array(allInputValues[0].length).keys()]\n    .map(index => allInputValues.map(v => v[index]))\n    .map(arr => {\n      const firstDefinedValue = arr.find(\n        value => typeof value === 'number',\n      );\n\n      const areBitsCompatible = arr.every(\n        item => item === firstDefinedValue || item === 'x',\n      );\n\n      if (!areBitsCompatible) return 'e';\n      if (typeof firstDefinedValue === 'number')\n        return firstDefinedValue;\n      return 'x';\n    });\n};\n\n/**\n * Initialize all links and ports with the floating value.\n */\nexport const initializeDiffAndValues = () => {\n  self.circuit.components.forEach(component => {\n    component.setInputValues(\n      Object.fromEntries(\n        component.ports.input.map(port => [\n          port.id,\n          new Array(port.bits || 1).fill('x'),\n        ]),\n      ),\n    );\n    component.setOutputValues(\n      Object.fromEntries(\n        component.ports.output.map(port => [\n          port.id,\n          new Array(port.bits || 1).fill('x'),\n        ]),\n      ),\n    );\n  });\n\n  const diffLinks = self.circuit.meshes\n    .map(mesh => mesh.links)\n    .flat()\n    .reduce((obj, link) => {\n      const { bits } = self.circuit.meshes.find(mesh =>\n        mesh.links.includes(link),\n      );\n\n      return { ...obj, [link]: Array(bits).fill('x') };\n    }, {});\n\n  const diffComponents = Object.fromEntries(\n    self.circuit.components.map(component => [\n      component.id,\n      {\n        output: Object.fromEntries(\n          [\n            ...component.ports.input,\n            ...component.ports.output,\n          ].map(port => [\n            port.name,\n            new Array(port.bits || 1).fill('x'),\n          ]),\n        ),\n        properties: component.getProperties(),\n      },\n    ]),\n  );\n\n  postMessage({\n    type: 'diff',\n    payload: { links: diffLinks, components: diffComponents },\n  });\n};\n\nexport const appendComponentDiff = (component, output) => {\n  if (!self.diff.components[component.id]) {\n    self.diff.components[component.id] = {\n      output: {},\n      properties: {},\n    };\n  }\n  self.diff.components[component.id] = {\n    ...self.diff.components[component.id],\n    output: self.diff.components[component.id].output\n      ? {\n          ...self.diff.components[component.id].output,\n          ...(output || {}),\n        }\n      : output || {},\n    properties: component.getProperties(),\n  };\n};\n","import { Point } from '@projectstorm/geometry';\nimport {\n  PointModel,\n  LabelModel,\n  LinkModel as RDLinkModel,\n} from '@projectstorm/react-diagrams';\nimport { DefaultLabelModel } from '@projectstorm/react-diagrams-defaults';\n\nimport { snap, sameAxis } from '../Diagram/states/common';\nimport {\n  isValueError,\n  isValueValid,\n  MAX_VALUE,\n} from '../Simulation/utils';\n\nexport default class LinkModel extends RDLinkModel {\n  constructor(options) {\n    super({\n      type: 'link',\n      ...options,\n    });\n\n    this.bifurcations = [];\n    this.bifurcationSource = null;\n    this.bifurcationTarget = null;\n\n    this.value = null;\n    this.bits = null;\n  }\n\n  getGridSize() {\n    return this.getParent()\n      .getParent()\n      .getOptions().gridSize;\n  }\n\n  addLabel(label) {\n    if (label instanceof LabelModel) {\n      return super.addLabel(label);\n    }\n\n    const newLabel = new DefaultLabelModel();\n    newLabel.setLabel(label);\n    return super.addLabel(newLabel);\n  }\n\n  setBifurcationSource(link) {\n    this.bifurcationSource = link;\n  }\n\n  getBifurcationSource() {\n    return this.bifurcationSource;\n  }\n\n  setBifurcationTarget(link) {\n    this.bifurcationTarget = link;\n  }\n\n  getBifurcationTarget() {\n    return this.bifurcationTarget;\n  }\n\n  isBifurcation() {\n    return !!(\n      this.getBifurcationSource() || this.getBifurcationTarget()\n    );\n  }\n\n  addBifurcation(link) {\n    if (\n      this.bifurcations.find(\n        bifurcation => bifurcation.getID() === link.getID(),\n      )\n    ) {\n      return;\n    }\n\n    this.bifurcations.push(link);\n  }\n\n  removeBifurcation(link) {\n    this.bifurcations = this.bifurcations.filter(\n      b => b.getID() !== link.getID(),\n    );\n  }\n\n  getBifurcations() {\n    return this.bifurcations;\n  }\n\n  getAllBifurcations() {\n    const result = [...this.bifurcations];\n    this.bifurcations.forEach(bifurcation =>\n      result.push(bifurcation.getAllBifurcations()),\n    );\n    return result.flat(Infinity);\n  }\n\n  getSelectionEntities() {\n    return [...super.getSelectionEntities(), ...this.bifurcations];\n  }\n\n  setSelected(selected) {\n    super.setSelected(selected);\n    this.bifurcations.forEach(b => b.setSelected(selected));\n\n    if (this.getSourcePort()) {\n      this.getSourcePort().setSelected(selected);\n    }\n    if (this.getTargetPort()) {\n      this.getTargetPort().setSelected(selected);\n    }\n  }\n\n  remove() {\n    this.bifurcations.forEach(bifurcation => bifurcation.remove());\n\n    if (this.bifurcationSource) {\n      this.bifurcationSource.removeBifurcation(this);\n    }\n\n    if (this.bifurcationTarget) {\n      this.bifurcationTarget.removeBifurcation(this);\n    }\n\n    super.remove();\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      bifurcations: this.bifurcations.map(b => b.getID()),\n      bifurcationSource: this.bifurcationSource\n        ? this.bifurcationSource.getID()\n        : null,\n      bifurcationTarget: this.bifurcationTarget\n        ? this.bifurcationTarget.getID()\n        : null,\n      value: this.value,\n      bits: this.bits,\n    };\n  }\n\n  deserialize(event) {\n    super.deserialize(event);\n\n    const {\n      getModel,\n      registerModel,\n      data: {\n        bifurcationSource,\n        bifurcationTarget,\n        bifurcations,\n        bits,\n      },\n    } = event;\n\n    registerModel(this);\n\n    requestAnimationFrame(() => {\n      this.bits = bits;\n\n      this.points = event.data.points.map(\n        point =>\n          new PointModel({\n            link: this,\n            position: new Point(point.x, point.y),\n          }),\n      );\n\n      bifurcations.forEach(b =>\n        getModel(b).then(bifurcation =>\n          this.addBifurcation(bifurcation),\n        ),\n      );\n\n      if (bifurcationSource) {\n        getModel(bifurcationSource).then(source =>\n          this.setBifurcationSource(source),\n        );\n      }\n\n      if (bifurcationTarget) {\n        getModel(bifurcationTarget).then(target =>\n          this.setBifurcationTarget(target),\n        );\n      }\n\n      event.engine.repaintCanvas();\n    });\n  }\n\n  addPoint(pointModel, index = 1) {\n    super.addPoint(pointModel, index);\n\n    return pointModel;\n  }\n\n  generatePoint(x, y) {\n    const point = super.generatePoint(x, y);\n    point.setPosition(\n      snap(x, this.getGridSize()),\n      snap(y, this.getGridSize()),\n    );\n\n    return point;\n  }\n\n  getMiddlePoint() {\n    if (!this.hasMiddlePoint()) return null;\n\n    return this.getPoints()[1];\n  }\n\n  getSecondPoint() {\n    return this.getPoints()[1];\n  }\n\n  getSecondLastPoint() {\n    const points = this.getPoints();\n    return points[points.length - 2];\n  }\n\n  getFirstPosition() {\n    return snap(\n      this.getFirstPoint().getPosition(),\n      this.getGridSize(),\n    );\n  }\n\n  getSecondPosition() {\n    return snap(\n      this.getSecondPoint().getPosition(),\n      this.getGridSize(),\n    );\n  }\n\n  getMiddlePosition() {\n    if (!this.hasMiddlePoint()) return null;\n\n    return snap(\n      this.getMiddlePoint().getPosition(),\n      this.getGridSize(),\n    );\n  }\n\n  getSecondLastPosition() {\n    return snap(\n      this.getSecondLastPoint().getPosition(),\n      this.getGridSize(),\n    );\n  }\n\n  getLastPosition() {\n    return snap(\n      this.getLastPoint().getPosition(),\n      this.getGridSize(),\n    );\n  }\n\n  hasMiddlePoint() {\n    return this.getPoints().length === 3;\n  }\n\n  isStraight() {\n    if (!this.hasMiddlePoint()) return true;\n\n    const first = this.getFirstPosition();\n    const middle = this.getMiddlePosition();\n    const last = this.getLastPosition();\n\n    if (sameAxis(first, middle, last)) return true;\n\n    return false;\n  }\n\n  getBits() {\n    return this.bits;\n  }\n\n  setBits(bits) {\n    if (![1, 2, 4, 8, 16].includes(bits))\n      throw new Error(\n        '[logossim] Number of bits should be one of: 1, 2, 4, 8 or 16',\n      );\n\n    this.bits = bits;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  getColor() {\n    if (this.isSelected()) return 'var(--link-selected)';\n\n    if (!isValueValid(this.value, this.bits)) {\n      if (isValueError(this.value)) return 'var(--value-error)';\n      return 'var(--value-floating)';\n    }\n    if (this.value === null)\n      return `var(--link-${this.bits || 1}-bit-color)`;\n\n    return `var(--value-${Math.round(\n      (this.value.asNumber() / MAX_VALUE[this.bits]) * 10,\n    )})`;\n  }\n\n  getLineWidth() {\n    return `var(--link-${this.bits || 1}-bit-width)`;\n  }\n\n  getPointRadius() {\n    return getComputedStyle(document.body).getPropertyValue(\n      `--link-${this.bits || 1}-bit-join-radius`,\n    );\n  }\n}\n","import { PortModel as RDPortModel } from '@projectstorm/react-diagrams';\n\nimport LinkModel from '../Link/LinkModel';\n\nconst validateDefaultValue = (value, type, portName) => {\n  if (value === 0) return;\n  if (value === 1) return;\n  if (value === 'x') return;\n  if (value === 'e') return;\n\n  throw new Error(\n    `[logossim] Invalid default ${type} value provided for port \\`${portName}\\`. Should be either 0, 1, 'x' or 'e'.`,\n  );\n};\n\nexport default class PortModel extends RDPortModel {\n  constructor(options = {}) {\n    super({\n      type: 'Port',\n      maximumLinks: 1,\n      ...options,\n    });\n\n    this.value = null;\n    this.input = null;\n    this.bits = null;\n    this.defaultFloatingValue = null;\n    this.defaultErrorValue = null;\n    this.orientation = 0;\n    this.complemented = false;\n    this.offset = 0;\n    this.length = 25;\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      input: this.input,\n      value: this.value,\n      bits: this.bits,\n      defaultFloatingValue: this.defaultFloatingValue,\n      defaultErrorValue: this.defaultErrorValue,\n      orientation: this.orientation,\n      complemented: this.complemented,\n      offset: this.offset,\n      length: this.length,\n    };\n  }\n\n  deserialize(event, engine) {\n    super.deserialize(event, engine);\n    this.value = event.data.value;\n    this.input = event.data.input;\n    this.bits = event.data.bits;\n    this.defaultFloatingValue = event.data.defaultFloatingValue;\n    this.defaultErrorValue = event.data.defaultErrorValue;\n    this.orientation = event.data.orientation;\n    this.complemented = event.data.componented;\n    this.offset = event.data.offset;\n    this.length = event.data.length;\n  }\n\n  setOrientation(orientation) {\n    this.orientation = orientation;\n  }\n\n  getOrientation() {\n    return this.orientation;\n  }\n\n  setComplemented(complemented) {\n    this.complemented = complemented;\n  }\n\n  getComplemented() {\n    return this.complemented;\n  }\n\n  setOffset(offset) {\n    this.offset = offset;\n  }\n\n  getOffset() {\n    return this.offset;\n  }\n\n  setLength(length) {\n    this.length = length;\n  }\n\n  getLength() {\n    return this.length;\n  }\n\n  setAsInput() {\n    this.input = true;\n  }\n\n  setAsOutput() {\n    this.input = false;\n  }\n\n  isInput() {\n    return this.input === true;\n  }\n\n  isOutput() {\n    return this.input === false;\n  }\n\n  getBits() {\n    return this.bits;\n  }\n\n  setBits(bits) {\n    if (![1, 2, 4, 8, 16].includes(bits))\n      throw new Error(\n        '[logossim] Number of bits should be one of: 1, 2, 4, 8 or 16',\n      );\n\n    this.bits = bits;\n  }\n\n  setDefaultFloatingValue(defaultFloatingValue) {\n    validateDefaultValue(\n      defaultFloatingValue,\n      'floating',\n      this.getName(),\n    );\n\n    this.defaultFloatingValue = defaultFloatingValue;\n  }\n\n  getDefaultFloatingValue() {\n    return this.defaultFloatingValue;\n  }\n\n  setDefaultErrorValue(defaultErrorValue) {\n    validateDefaultValue(defaultErrorValue, 'error', this.getName());\n\n    this.defaultErrorValue = defaultErrorValue;\n  }\n\n  getDefaultErrorValue() {\n    return this.defaultErrorValue;\n  }\n\n  getValue() {\n    if (this.value === null) return Array(this.bits).fill(0);\n\n    return this.value.map(bit => {\n      if (bit === 'x') return this.getDefaultFloatingValue();\n      if (bit === 'e') return this.getDefaultErrorValue();\n      return bit;\n    });\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  isNewLinkAllowed() {\n    return (\n      Object.keys(this.getLinks()).length < this.getMaximumLinks()\n    );\n  }\n\n  canLinkToPort(port) {\n    return port.isNewLinkAllowed() && this.getID() !== port.getID();\n  }\n\n  createLinkModel() {\n    if (this.isNewLinkAllowed()) {\n      const link = new LinkModel();\n      link.setBits(this.bits);\n      return link;\n    }\n    return null;\n  }\n\n  getMainLink() {\n    const links = Object.values(this.getLinks());\n    return links.length > 0 ? links[0] : null;\n  }\n\n  getColor() {\n    const link = this.getMainLink();\n    if (link) return link.getColor();\n\n    return 'var(--port-unconnected)';\n  }\n\n  getLineWidth() {\n    return getComputedStyle(document.body).getPropertyValue(\n      `--link-1-bit-width`,\n    );\n  }\n\n  getLineColor() {\n    return getComputedStyle(document.body).getPropertyValue(\n      `--link-${this.bits || 1}-bit-color`,\n    );\n  }\n\n  getPointRadius() {\n    return getComputedStyle(document.body).getPropertyValue(\n      `--link-${this.bits || 1}-bit-join-radius`,\n    );\n  }\n}\n","export default class AudioEngine {\n  constructor() {\n    this.context = new AudioContext();\n    this.destination = this.context.destination;\n    this.audios = {};\n  }\n\n  create({ id, frequency = 1000, waveform = 'sine' }) {\n    const gainNode = this.context.createGain();\n    gainNode.gain.value = 0.5;\n\n    const oscillator = this.context.createOscillator();\n    oscillator.type = waveform;\n    oscillator.frequency.value = frequency;\n    oscillator.connect(gainNode);\n    oscillator.start();\n\n    this.audios[id] = { gainNode, oscillator };\n  }\n\n  play({ id }) {\n    try {\n      this.getGainNode(id).connect(this.destination);\n    } catch (e) {\n      // Suppress\n    }\n  }\n\n  pause({ id }) {\n    try {\n      this.getGainNode(id).disconnect(this.destination);\n    } catch (e) {\n      // Suppress\n    }\n  }\n\n  setFrequency({ id, frequency }) {\n    this.getOscillator(id).frequency.value = frequency;\n  }\n\n  setWaveform({ id, waveform }) {\n    this.getOscillator(id).type = waveform;\n  }\n\n  handlePayload(payload) {\n    switch (payload.command) {\n      case 'create':\n        this.create(payload);\n        break;\n      case 'play':\n        this.play(payload);\n        break;\n      case 'pause':\n        this.pause(payload);\n        break;\n      case 'setFrequency':\n        this.setFrequency(payload);\n        break;\n      case 'setWaveform':\n        this.setWaveform(payload);\n        break;\n      default:\n        break;\n    }\n  }\n\n  getOscillator(id) {\n    return this.getAudio(id).oscillator;\n  }\n\n  getGainNode(id) {\n    return this.getAudio(id).gainNode;\n  }\n\n  getAudio(id) {\n    const audio = this.audios[id];\n\n    if (!audio)\n      throw new Error(\n        `[logossim] Audio with id ${id} was not found.`,\n      );\n\n    return audio;\n  }\n\n  cleanUp() {\n    Object.values(this.audios).forEach(audio =>\n      audio.oscillator.stop(),\n    );\n    this.audios = [];\n  }\n}\n","/**\n * In order to execute the simulation workload on a Web Worker, we\n * need to serialize some component properties and methods to send\n * them to the worker.\n */\n\n/* ---------------------------------------------------------------- */\n\n/**\n * Receives a component instance and returns the name of all custom\n * properties.\n */\nconst getComponentPropertyNames = instance =>\n  Object.keys(instance).filter(\n    key =>\n      ![\n        'listeners',\n        'options',\n        'position',\n        'ports',\n        'width',\n        'height',\n        'configurations',\n        'parent',\n      ].includes(key),\n  );\n\n/**\n * Receives a component class and returns the name of all custom\n * methods.\n */\nconst getModelMethodNames = Class =>\n  Object.getOwnPropertyNames(Class.prototype).filter(\n    methodName => !['constructor'].includes(methodName),\n  );\n\nconst serializeModels = components =>\n  components.map(component => {\n    const { type, Model } = component;\n\n    return {\n      type,\n      methods: getModelMethodNames(Model).reduce(\n        (obj, name) => ({\n          ...obj,\n          [name]: Model.prototype[name].toString(),\n        }),\n        {},\n      ),\n    };\n  });\n\nconst serializePorts = ports =>\n  Object.values(ports).map(port => ({\n    id: port.getID(),\n    name: port.getName(),\n    input: port.isInput(),\n    bits: port.getBits(),\n    defaultFloatingValue: port.getDefaultFloatingValue(),\n    defaultErrorValue: port.getDefaultErrorValue(),\n  }));\n\n/**\n * Prepares a list of component instances to transfer, including\n * configuration and instance properties.\n */\nconst serializeComponents = components =>\n  components.map(component => ({\n    id: component.getID(),\n    type: component.getType(),\n    configurations: component.configurations,\n    ports: serializePorts(component.ports),\n    properties: getComponentPropertyNames(component).reduce(\n      (obj, key) => ({ ...obj, [key]: component[key] }),\n      {},\n    ),\n  }));\n\nconst getPortInfo = port =>\n  port\n    ? {\n        componentId: port.getParent().getID(),\n        name: port.getName(),\n        input: port.isInput(),\n      }\n    : null;\n\nconst getLinkId = link => (link ? link.getID() : null);\n\nconst serializeLinks = links =>\n  links.map(link => ({\n    id: link.getID(),\n    source: getPortInfo(link.getSourcePort()),\n    target: getPortInfo(link.getTargetPort()),\n    bifurcations: link\n      .getBifurcations()\n      .map(bifurcation => bifurcation.getID()),\n    bifurcation: {\n      source: getLinkId(link.getBifurcationSource()),\n      target: getLinkId(link.getBifurcationTarget()),\n    },\n    isBifurcation: link.isBifurcation(),\n    bits: link.getBits(),\n  }));\n\n/**\n * Prepares the whole diagram to be transferred.\n */\nconst serialize = (diagram, models) => ({\n  models: serializeModels(models),\n  links: serializeLinks(\n    Object.values(diagram.getActiveLinkLayer().getModels()),\n  ),\n  components: serializeComponents(\n    Object.values(diagram.getActiveNodeLayer().getModels()),\n  ),\n});\n\nexport default serialize;\n","import AudioEngine from './AudioEngine';\nimport serialize from './serialize';\nimport SimulationWorker from './simulation.worker';\nimport { getCleanDiff } from './utils';\n\nconst worker = new SimulationWorker();\n\n/**\n * SimulationEngine encapsulates SimulationWorker to act as an\n * interface to the application. It handles messaging with the worker,\n * keeping track of the `diff` being generated so the application can\n * use it to update itself.\n */\nexport default class SimulationEngine {\n  constructor(components) {\n    this.components = components;\n\n    this.worker = worker;\n    this.worker.addEventListener('message', this.onSimulationMessage);\n\n    this.audioEngine = new AudioEngine();\n\n    this.state = 'stopped';\n    this.clearDiff();\n  }\n\n  onSimulationMessage = ({ data: { type, payload } }) => {\n    if (type === 'diff') {\n      this.appendDiff(payload);\n    }\n\n    if (type === 'audio') {\n      this.audioEngine.handlePayload(payload);\n    }\n\n    if (type === 'clear') {\n      this.audioEngine.cleanUp();\n    }\n  };\n\n  start(diagram) {\n    this.worker.postMessage({\n      command: 'start',\n      diagram:\n        this.state === 'stopped'\n          ? serialize(diagram, this.components)\n          : undefined,\n    });\n    this.state = 'started';\n  }\n\n  pause() {\n    this.worker.postMessage({ command: 'pause' });\n    this.state = 'paused';\n  }\n\n  async stop() {\n    return new Promise(resolve => {\n      const waitForEnd = ({ data: { type } }) => {\n        if (type === 'clear') {\n          this.worker.removeEventListener('message', waitForEnd);\n          this.state = 'stopped';\n          resolve();\n        }\n      };\n      this.worker.addEventListener('message', waitForEnd);\n\n      this.worker.postMessage({ command: 'stop' });\n    });\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  isRunning() {\n    return this.state === 'started';\n  }\n\n  isPaused() {\n    return this.state === 'paused';\n  }\n\n  isStopped() {\n    return this.state === 'stopped';\n  }\n\n  getDiff() {\n    return this.diff;\n  }\n\n  clearDiff() {\n    this.diff = getCleanDiff();\n  }\n\n  appendDiff(diff) {\n    this.diff = {\n      components: { ...this.diff.components, ...diff.components },\n      links: { ...this.diff.links, ...diff.links },\n    };\n  }\n}\n\n/**\n * Emit is exported as a separate function so it can be used on\n * `BaseModel`.\n */\nexport const emit = (from, value) =>\n  worker.postMessage({\n    command: 'emit',\n    emitted: { from, value },\n  });\n","import { Point } from '@projectstorm/geometry';\nimport { NodeModel } from '@projectstorm/react-diagrams';\n\nimport PortModel from './Port/PortModel';\nimport { emit } from './Simulation/SimulationEngine';\n\nconst getPort = nameOrInstance => {\n  if (nameOrInstance instanceof PortModel) return nameOrInstance;\n  return new PortModel({ name: nameOrInstance });\n};\n\nexport default class BaseModel extends NodeModel {\n  constructor(configurations = {}, type = 'generic') {\n    super({ type });\n\n    this.canRotate = false;\n\n    this.initialize(configurations);\n\n    this.configurations = configurations;\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      configurations: this.configurations,\n    };\n  }\n\n  addInputPort(nameOrInstance, { bits, floating, error, orientation, complemented, offset, length } = {}) {\n    const port = getPort(nameOrInstance);\n    port.setAsInput();\n    if (typeof nameOrInstance === 'string') {\n      port.setBits(bits || 1);\n      port.setDefaultFloatingValue(floating ?? 'x');\n      port.setDefaultErrorValue(error ?? 'e');\n      port.setOrientation(orientation ?? 0);\n      port.setComplemented(complemented ?? false);\n      port.setOffset(offset ?? 0);\n      port.setLength(length ?? 25);\n    }\n    super.addPort(port);\n  }\n\n  addOutputPort(nameOrInstance, { bits, orientation, complemented, offset, length } = {}) {\n    const port = getPort(nameOrInstance);\n    port.setAsOutput();\n    if (typeof nameOrInstance === 'string') {\n      port.setBits(bits || 1);\n      port.setDefaultFloatingValue('x');\n      port.setDefaultErrorValue('e');\n      port.setOrientation(orientation ?? 0);\n      port.setComplemented(complemented ?? false);\n      port.setOffset(offset ?? 0);\n      port.setLength(length ?? 25);\n    }\n    super.addPort(port);\n  }\n\n  addPort(nameOrInstance, configuration) {\n    const port = getPort(nameOrInstance);\n\n    if (port.isInput()) {\n      this.addInputPort(port, configuration);\n      return;\n    }\n\n    if (port.isOutput()) {\n      this.addOutputPort(port, configuration);\n      return;\n    }\n\n    throw new Error(\n      '[logossim] Use either `addInputPort` or `addOutputPort`',\n    );\n  }\n\n  removePort(name) {\n    const port = getPort(name);\n    super.removePort(port);\n  }\n\n  getInputPorts() {\n    return Object.fromEntries(\n      Object.entries(this.getPorts()).filter(([, port]) =>\n        port.isInput(),\n      ),\n    );\n  }\n\n  getOutputPorts() {\n    return Object.fromEntries(\n      Object.entries(this.getPorts()).filter(\n        ([, port]) => !port.isInput(),\n      ),\n    );\n  }\n\n  getAllLinks() {\n    return Object.values(this.getPorts())\n      .map(port => port.getMainLink())\n      .filter(link => !!link)\n      .reduce(\n        (arr, link) => [...arr, link, ...link.getAllBifurcations()],\n        [],\n      );\n  }\n\n  clone(...args) {\n    const clone = super.clone(...args);\n    clone.setPosition(new Point(this.getX() + 15, this.getY() + 15));\n    return clone;\n  }\n\n  initialize() {}\n\n  onSimulationStart() {}\n\n  onSimulationPause() {}\n\n  onSimulationStop() {}\n\n  step() {}\n\n  emit(value) {\n    emit(this.getID(), value);\n  }\n\n  createAudio() {}\n}\n","import React from 'react';\n\nconst ComponentContext = React.createContext();\n\nexport default ComponentContext;\n","import React from 'react';\nimport { MenuProvider } from 'react-contexify';\n\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\n\nimport ComponentContext from './ComponentContext';\n\nexport default class Component extends AbstractReactFactory {\n  constructor({\n    type,\n    name,\n    description,\n    group,\n    configurations = [],\n    model,\n    widget,\n    icon,\n  }) {\n    super(type);\n    this.name = name;\n    this.description = description;\n    this.group = group;\n    this.configurations = configurations;\n    this.Model = model;\n    this.Widget = widget;\n    this.Icon = icon;\n  }\n\n  generateReactWidget(event) {\n    const { Widget } = this;\n    const { model } = event;\n\n    return (\n      <MenuProvider id=\"component\" storeRef={false} data={{component: model}}>\n        <ComponentContext.Provider value={model}>\n          <Widget model={model} />\n        </ComponentContext.Provider>\n      </MenuProvider>\n    );\n  }\n\n  generateModel(event) {\n    const { Model } = this;\n    const { configurations, type } = event.initialConfig;\n\n    return new Model(configurations, type);\n  }\n}\n","import React from 'react';\n\nconst DiagramContext = React.createContext();\n\nexport default DiagramContext;\n","import styled from 'styled-components';\n\nconst DroppableLayer = styled.div.attrs(({ disabled, ...props }) => ({\n  ...props,\n  onDragOver: event => event.preventDefault(),\n  onDrop: event => {\n    if (disabled) return;\n\n    const component = JSON.parse(\n      event.dataTransfer.getData('component'),\n    );\n\n    props.handleComponentDrop(event, component);\n  },\n}))`\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport default DroppableLayer;\n","import React from 'react';\nimport { MenuProvider } from 'react-contexify';\n\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\n\nimport styled from 'styled-components';\n\nimport DiagramContext from './DiagramContext';\nimport DroppableLayer from './DroppableLayer';\n\nconst FullscreenCanvas = styled(CanvasWidget)`\n  height: 100%;\n  width: 100%;\n`;\n\nconst Diagram = ({ engine }) => (\n  <MenuProvider id=\"diagram\" storeRef={false} data={{ test: 1 }}>\n    <DroppableLayer\n      handleComponentDrop={(...args) =>\n        engine.handleComponentDrop(...args)\n      }\n      disabled={engine.isLocked()}\n    >\n      <DiagramContext.Provider value={engine}>\n        <FullscreenCanvas engine={engine.getEngine()} />\n      </DiagramContext.Provider>\n    </DroppableLayer>\n  </MenuProvider>\n);\n\nexport default Diagram;\n","import React, { Component } from 'react';\n\nimport { samePosition } from '../Diagram/states/common';\n\nexport default class LinkWidget extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refPaths = [];\n  }\n\n  componentDidUpdate() {\n    this.updateRenderedPaths();\n  }\n\n  componentDidMount() {\n    this.updateRenderedPaths();\n  }\n\n  componentWillUnmount() {\n    this.clearRenderedPaths();\n  }\n\n  updateRenderedPaths() {\n    const { link } = this.props;\n\n    link.setRenderedPaths(\n      this.refPaths.map(ref => {\n        return ref.current;\n      }),\n    );\n  }\n\n  clearRenderedPaths() {\n    const { link } = this.props;\n\n    link.setRenderedPaths([]);\n  }\n\n  generatePathPoints() {\n    const { link } = this.props;\n\n    const points = link.getPoints();\n\n    return points\n      .map((point, i) => ({ from: points[i], to: points[i + 1] }))\n      .filter(tuple => tuple.to);\n  }\n\n  generateLinePath({ from, to }) {\n    return `M${from.getX()},${from.getY()} L${to.getX()},${to.getY()}`;\n  }\n\n  renderSegment(path, key) {\n    const { link, factory, options = {} } = this.props;\n\n    const { selected } = options;\n\n    const ref = React.createRef();\n    this.refPaths.push(ref);\n\n    return React.cloneElement(\n      factory.generateLinkSegment(link, selected, path),\n      { key, ref },\n    );\n  }\n\n  renderPoint(position, loose = false) {\n    const { link } = this.props;\n    const color = link.getColor();\n\n    return (\n      <circle\n        r={loose ? 6 : link.getPointRadius()}\n        fill={loose ? 'var(--background)' : color}\n        stroke={loose ? color : 'none'}\n        strokeWidth={3}\n        cx={position.x}\n        cy={position.y}\n      />\n    );\n  }\n\n  renderBifurcationSourcePoint() {\n    const { link } = this.props;\n\n    const bifurcationSource = link.getBifurcationSource();\n    if (!bifurcationSource) return null;\n\n    const bifurcationOrigin = link.getFirstPoint().getPosition();\n    const lastSourcePoint = bifurcationSource\n      .getLastPoint()\n      .getPosition();\n\n    if (samePosition(bifurcationOrigin, lastSourcePoint)) {\n      return null;\n    }\n\n    return this.renderPoint(bifurcationOrigin);\n  }\n\n  renderBifurcationTargetPoint() {\n    const { link } = this.props;\n\n    const bifurcationTarget = link.getBifurcationTarget();\n    if (!bifurcationTarget) return null;\n\n    const bifurcationTargetPosition = link\n      .getLastPoint()\n      .getPosition();\n    const lastSourcePoint = bifurcationTarget\n      .getLastPoint()\n      .getPosition();\n\n    if (samePosition(bifurcationTargetPosition, lastSourcePoint)) {\n      return null;\n    }\n\n    return this.renderPoint(bifurcationTargetPosition);\n  }\n\n  renderLooseLinkPoint() {\n    const { link } = this.props;\n\n    if (link.getTargetPort()) return null;\n    if (link.getBifurcationTarget()) return null;\n\n    const bifurcations = link.getBifurcations();\n    const lastSourcePoint = link.getLastPoint().getPosition();\n\n    const isContinued = bifurcations.some(\n      bifurcation =>\n        samePosition(\n          bifurcation.getFirstPosition(),\n          lastSourcePoint,\n        ) ||\n        samePosition(bifurcation.getLastPosition(), lastSourcePoint),\n    );\n\n    if (isContinued) return null;\n\n    return this.renderPoint(lastSourcePoint, true);\n  }\n\n  render() {\n    const { link } = this.props;\n\n    this.refPaths = [];\n\n    return (\n      <>\n        <g data-default-link-test={link.getOptions().testName}>\n          {this.generatePathPoints().map((tuple, index) =>\n            this.renderSegment(this.generateLinePath(tuple), index),\n          )}\n        </g>\n        {this.renderBifurcationSourcePoint()}\n        {this.renderBifurcationTargetPoint()}\n        {this.renderLooseLinkPoint()}\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport { DefaultLinkFactory } from '@projectstorm/react-diagrams-defaults';\n\nimport styled from 'styled-components';\n\nimport LinkModel from './LinkModel';\nimport LinkWidget from './LinkWidget';\n\nconst Path = styled.path`\n  pointer-events: all;\n  stroke-linecap: round;\n`;\n\nexport default class LinkFactory extends DefaultLinkFactory {\n  constructor() {\n    super('link');\n  }\n\n  generateModel() {\n    return new LinkModel();\n  }\n\n  generateReactWidget(event) {\n    return (\n      <LinkWidget\n        diagramEngine={this.engine}\n        link={event.model}\n        factory={this}\n      />\n    );\n  }\n\n  generateLinkSegment(model, selected, path) {\n    return (\n      <>\n        <Path\n          stroke={model.getColor()}\n          strokeWidth={model.getLineWidth()}\n          d={path}\n        />\n        {/* This path is to facilitate link selection */}\n        <Path stroke=\"none\" strokeWidth={20} d={path} />\n      </>\n    );\n  }\n}\n","import { AbstractModelFactory } from '@projectstorm/react-canvas-core';\n\nimport PortModel from './PortModel';\n\nexport default class PortFactory extends AbstractModelFactory {\n  constructor() {\n    super('Port');\n  }\n\n  generateModel() {\n    return new PortModel();\n  }\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\nimport BaseModel from '../../BaseModel';\n\n/**\n * Handles clipboard actions.\n */\nexport default class ClipboardAction extends Action {\n  constructor(areShortcutsAllowed) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed()) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n\n          const { code } = event;\n          if (code === 'KeyX') this.handleCut();\n          if (code === 'KeyC') this.handleCopy();\n          if (code === 'KeyV') this.handlePaste();\n        }\n      },\n    });\n  }\n\n  matchesInput = ({ ctrlKey, code }) =>\n    ctrlKey &&\n    (code === 'KeyX' || code === 'KeyC' || code === 'KeyV');\n\n  getSelectedComponents = () =>\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(entity => entity instanceof BaseModel)\n      .filter(entity => !entity.isLocked());\n\n  /** Cut */\n  handleCut = () => {\n    const selected = this.getSelectedComponents();\n    const copies = selected.map(entity => entity.clone().serialize());\n\n    this.engine.fireEvent(\n      {\n        nodes: selected,\n        links: selected.reduce(\n          (arr, node) => [...arr, ...node.getAllLinks()],\n          [],\n        ),\n      },\n      'entitiesRemoved',\n    );\n    selected.forEach(node => node.remove());\n    this.engine.repaintCanvas();\n\n    localStorage.setItem('clipboard', JSON.stringify(copies));\n  };\n\n  /** Copy */\n  handleCopy = () => {\n    const copies = this.getSelectedComponents().map(entity =>\n      entity.clone().serialize(),\n    );\n\n    localStorage.setItem('clipboard', JSON.stringify(copies));\n  };\n\n  /** Paste */\n  handlePaste = () => {\n    const model = this.engine.getModel();\n\n    const clipboard = JSON.parse(localStorage.getItem('clipboard'));\n    if (!clipboard) return;\n\n    model.clearSelection();\n\n    const models = clipboard.map(serialized => {\n      const modelInstance = model\n        .getActiveNodeLayer()\n        .getChildModelFactoryBank(this.engine)\n        .getFactory(serialized.type)\n        .generateModel({ initialConfig: serialized });\n\n      modelInstance.deserialize({\n        engine: this.engine,\n        data: serialized,\n        registerModel: () => {},\n      });\n\n      return modelInstance;\n    });\n\n    models.forEach(modelInstance => {\n      model.addNode(modelInstance);\n      modelInstance.setSelected(true);\n    });\n\n    localStorage.setItem(\n      'clipboard',\n      JSON.stringify(\n        models.map(modelInstance =>\n          modelInstance.clone().serialize(),\n        ),\n      ),\n    );\n\n    this.engine.fireEvent({ nodes: models }, 'componentsAdded');\n\n    this.engine.repaintCanvas();\n  };\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\nimport BaseModel from '../../BaseModel';\nimport LinkModel from '../../Link/LinkModel';\n\n/**\n * Handles delete actions.\n */\nexport default class DeleteAction extends Action {\n  constructor(areShortcutsAllowed) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed()) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n          this.handleAction();\n        }\n      },\n    });\n  }\n\n  matchesInput = event => event.code === 'Delete';\n\n  handleAction = () => {\n    const entities = this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(model => !model.isLocked());\n\n    this.fireEvent(entities);\n\n    entities.forEach(model => model.remove());\n\n    this.engine.repaintCanvas();\n  };\n\n  /**\n   * Event is fired to be on the command manager, so the user can undo\n   * and redo it.\n   */\n  fireEvent = entities => {\n    // All selected nodes\n    const nodes = entities.filter(\n      model => model instanceof BaseModel,\n    );\n\n    // All selected links\n    const links = entities.filter(\n      model => model instanceof LinkModel,\n    );\n\n    // All links from selected nodes\n    const nodesLinks = nodes.reduce(\n      (arr, node) => [...arr, ...node.getAllLinks()],\n      [],\n    );\n\n    this.engine.fireEvent(\n      { nodes, links: [...nodesLinks, ...links] },\n      'entitiesRemoved',\n    );\n  };\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\nimport BaseModel from '../../BaseModel';\n\n/**\n * Handle duplication (clone) actions.\n */\nexport default class DuplicateAction extends Action {\n  constructor(areShortcutsAllowed) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed()) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n          this.handleAction();\n        }\n      },\n    });\n  }\n\n  matchesInput = event => event.ctrlKey && event.code === 'KeyD';\n\n  handleAction = () => {\n    const model = this.engine.getModel();\n\n    const clones = model\n      .getSelectedEntities()\n      .filter(entity => entity instanceof BaseModel)\n      .filter(entity => !entity.isLocked())\n      .map(entity => entity.clone());\n\n    model.clearSelection();\n\n    clones.forEach(clone => {\n      model.addNode(clone);\n      clone.setSelected(true);\n    });\n\n    this.engine.fireEvent({ nodes: clones }, 'componentsAdded');\n\n    this.engine.repaintCanvas();\n  };\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\n/**\n * Handles undo/redo actions.\n */\nexport default class UndoRedoAction extends Action {\n  constructor(areShortcutsAllowed) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed()) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n\n          const { ctrlKey, shiftKey, code } = event;\n          if (ctrlKey && !shiftKey && code === 'KeyZ')\n            this.handleUndo();\n          else this.handleRedo();\n        }\n      },\n    });\n  }\n\n  matchesInput = ({ ctrlKey, shiftKey, code }) =>\n    (ctrlKey && (code === 'KeyZ' || code === 'KeyY')) ||\n    (ctrlKey && shiftKey && code === 'KeyZ');\n\n  /** Undo */\n  handleUndo = () => {\n    this.engine.commands.undo();\n    this.engine.repaintCanvas();\n  };\n\n  /** Redo */\n  handleRedo = () => {\n    this.engine.commands.redo();\n    this.engine.repaintCanvas();\n  };\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\nconst ZOOM_LEVELS = [15, 25, 50, 75, 100, 150, 200, 300];\n\n/**\n * Handles zoom in/out actions.\n */\nexport default class ZoomAction extends Action {\n  constructor() {\n    super({\n      type: InputType.MOUSE_WHEEL,\n      fire: ({ event }) => {\n        event.stopPropagation();\n\n        const model = this.engine.getModel();\n\n        // We can block layer rendering because we are only targeting the transforms\n        model.getLayers().forEach(layer => layer.allowRepaint(false));\n\n        const zoomDirection =\n          Math.sign(event.deltaY) > 0 ? 'in' : 'out';\n\n        const currentZoomLevelIndex = ZOOM_LEVELS.indexOf(\n          ZOOM_LEVELS.includes(model.getZoomLevel())\n            ? model.getZoomLevel()\n            : 100,\n        );\n\n        let nextZoomLevelIndex;\n        if (zoomDirection === 'in') {\n          nextZoomLevelIndex = Math.min(\n            currentZoomLevelIndex + 1,\n            ZOOM_LEVELS.length - 1,\n          );\n        } else {\n          nextZoomLevelIndex = Math.max(currentZoomLevelIndex - 1, 0);\n        }\n\n        const oldZoomFactor = model.getZoomLevel() / 100;\n        model.setZoomLevel(ZOOM_LEVELS[nextZoomLevelIndex]);\n        const zoomFactor = model.getZoomLevel() / 100;\n\n        const boundingRect = this.engine\n          .getCanvas()\n          .getBoundingClientRect();\n        const clientWidth = boundingRect.width;\n        const clientHeight = boundingRect.height;\n\n        // Compute difference between rect before and after scroll\n        const widthDiff =\n          clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n        const heightDiff =\n          clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n\n        // Compute mouse coords relative to canvas\n        const clientX = event.clientX - boundingRect.left;\n        const clientY = event.clientY - boundingRect.top;\n\n        // Compute width and height increment factor\n        const xFactor =\n          (clientX - model.getOffsetX()) /\n          oldZoomFactor /\n          clientWidth;\n        const yFactor =\n          (clientY - model.getOffsetY()) /\n          oldZoomFactor /\n          clientHeight;\n\n        model.setOffset(\n          model.getOffsetX() - widthDiff * xFactor,\n          model.getOffsetY() - heightDiff * yFactor,\n        );\n        this.engine.repaintCanvas();\n\n        // Re-enable rendering\n        model.getLayers().forEach(layer => layer.allowRepaint(true));\n      },\n    });\n  }\n}\n","import { PointModel } from '@projectstorm/react-diagrams';\n\nconst commandHandlers = ({ engine, editComponentConfiguration }) => {\n  const adjustLink = (link, nodes = []) => {\n    const nodeList = [\n      ...Object.values(\n        engine\n          .getModel()\n          .getActiveNodeLayer()\n          .getModels(),\n      ),\n      ...nodes,\n    ];\n\n    /**\n     * Port instance could have changed in consequence of component\n     * configuration edit.\n     */\n    let sourcePort = link.getSourcePort();\n    if (sourcePort) {\n      const node = nodeList.find(\n        n =>\n          n.getID() ===\n          link\n            .getSourcePort()\n            .getParent()\n            .getID(),\n      );\n\n      sourcePort = node.getPort(sourcePort.getName());\n\n      link.setSourcePort(sourcePort);\n      sourcePort.addLink(link);\n    }\n\n    let targetPort = link.getTargetPort();\n    if (targetPort) {\n      const node = nodeList.find(\n        n =>\n          n.getID() ===\n          link\n            .getTargetPort()\n            .getParent()\n            .getID(),\n      );\n\n      targetPort = node.getPort(targetPort.getName());\n\n      link.setTargetPort(targetPort);\n      targetPort.addLink(link);\n    }\n\n    if (link.getBifurcationSource())\n      link.getBifurcationSource().addBifurcation(link);\n\n    if (link.getBifurcationTarget())\n      link.getBifurcationTarget().addBifurcation(link);\n\n    return link;\n  };\n\n  return {\n    /**\n     * Componend added handler. Occurs when a component is added or\n     * pasted.\n     */\n    componentsAdded: ({ nodes }) => {\n      engine.commands.add({\n        execute: () => {\n          nodes.forEach(node => engine.getModel().addNode(node));\n        },\n        undo: () => {\n          nodes.forEach(node => node.remove());\n        },\n      });\n    },\n\n    /**\n     * Component configuration edit handler.\n     */\n    componentEdited: ({ node, configurations, links }) => {\n      engine.commands.add({\n        execute: () => {\n          editComponentConfiguration(node, configurations.after);\n        },\n        undo: () => {\n          editComponentConfiguration(node, configurations.before);\n\n          links.before.forEach(link =>\n            engine.getModel().addLink(adjustLink(link)),\n          );\n        },\n      });\n    },\n\n    /**\n     * Link added handler. Occurs on new links or bifurcations.\n     */\n    linkAdded: ({ link }) => {\n      engine.commands.add({\n        execute: () => {\n          engine.getModel().addLink(adjustLink(link));\n        },\n        undo: () => {\n          link.remove();\n        },\n      });\n    },\n\n    /**\n     * Link changed handler. Occurs when a link is extended.\n     */\n    linkChanged: ({ before, after }) => {\n      const handleLinkChanged = (from, to) => {\n        const link = engine.getModel().getLink(from.id);\n\n        // Update link points\n        link.setPoints(\n          from.points.map(position => {\n            const point = new PointModel({ link });\n            point.setPosition(position);\n            return point;\n          }),\n        );\n\n        // Updates bifurcation target\n        if (from.bifurcationTarget) {\n          const target = engine\n            .getModel()\n            .getLink(from.bifurcationTarget);\n          link.setBifurcationTarget(target);\n          target.addBifurcation(link);\n        } else if (to.bifurcationTarget) {\n          const oldTarget = engine\n            .getModel()\n            .getLink(to.bifurcationTarget);\n          link.setBifurcationTarget(null);\n          oldTarget.removeBifurcation(link);\n        }\n      };\n\n      engine.commands.add({\n        execute: () => {\n          handleLinkChanged(after, before);\n        },\n        undo: () => {\n          handleLinkChanged(before, after);\n        },\n      });\n    },\n\n    /**\n     * Components and links removal handler.\n     */\n    entitiesRemoved: ({ nodes, links }) => {\n      engine.commands.add({\n        execute: () => {\n          // Removes all nodes\n          nodes.forEach(node => node.remove());\n\n          // Removes all links\n          links.forEach(link => link.remove());\n        },\n        undo: () => {\n          /**\n           * Adds all links in the correct order. Bifurcations should be\n           * added before, otherwise links on the diagram are incorretly\n           * rendered.\n           */\n          links\n            .map(link => adjustLink(link, nodes))\n            .sort((l1, l2) => {\n              if (\n                l1.getBifurcationSource() === l2 ||\n                l1.getBifurcationTarget() === l2\n              )\n                return 1;\n\n              if (\n                l2.getBifurcationSource() === l1 ||\n                l2.getBifurcationTarget() === l1\n              )\n                return -1;\n\n              return 0;\n            })\n            .forEach(link => engine.getModel().addLink(link));\n\n          // Adds all nodes\n          nodes.forEach(node => engine.getModel().addNode(node));\n        },\n      });\n    },\n\n    /**\n     * Components and links move handler.\n     */\n    entitiesMoved: ({ nodes, links }) => {\n      const handleEntitiesMoved = state => {\n        // Updates all moved nodes position\n        nodes[state].forEach(({ id, position }) => {\n          const node = engine.getModel().getNode(id);\n          node.setPosition(position.x, position.y);\n        });\n\n        // Updates all moved links points\n        links[state].forEach(({ id, points }) => {\n          const link = engine.getModel().getLink(id);\n          link.setPoints(\n            points.map(position => {\n              const point = new PointModel({ link });\n              point.setPosition(position);\n              return point;\n            }),\n          );\n        });\n      };\n\n      engine.commands.add({\n        execute: () => {\n          handleEntitiesMoved('after');\n        },\n        undo: () => {\n          handleEntitiesMoved('before');\n        },\n      });\n    },\n  };\n};\n\nexport default commandHandlers;\n","export default class Command {\n  constructor(execute, undo) {\n    this.execute = execute;\n    this.undo = undo;\n  }\n\n  execute(engine) {\n    this.execute(engine);\n  }\n\n  undo(engine) {\n    this.undo(engine);\n  }\n}\n","import Command from './Command';\n\n/**\n * This class manages the undo/redo stack.\n */\nexport default class CommandManager {\n  constructor() {\n    this.clear();\n  }\n\n  clear() {\n    this.stack = [];\n    this.index = 0;\n  }\n\n  add({ execute, undo }) {\n    const command = new Command(execute, undo);\n    this.stack.length = this.index;\n    this.stack.push(command);\n    this.index += 1;\n  }\n\n  undo() {\n    if (this.index > 0) {\n      this.index -= 1;\n      const command = this.stack[this.index];\n      command.undo();\n    }\n  }\n\n  redo() {\n    if (this.index < this.stack.length) {\n      const command = this.stack[this.index];\n      command.execute();\n      this.index += 1;\n    }\n  }\n}\n","import { Point } from '@projectstorm/geometry';\n\nimport { snap, samePosition } from './common';\n\nconst getRelativePoint = (point, model) => {\n  const zoomLevelPercentage = model.getZoomLevel() / 100;\n  const engineOffsetX = model.getOffsetX() / zoomLevelPercentage;\n  const engineOffsetY = model.getOffsetY() / zoomLevelPercentage;\n\n  return new Point(point.x - engineOffsetX, point.y - engineOffsetY);\n};\n\nconst nextLinkPosition = (\n  event,\n  model,\n  initialRelative,\n  sourcePosition,\n) => {\n  const point = getRelativePoint(sourcePosition, model);\n\n  const zoomLevelPercentage = model.getZoomLevel() / 100;\n  const initialXRelative = initialRelative.x / zoomLevelPercentage;\n  const initialYRelative = initialRelative.y / zoomLevelPercentage;\n\n  const linkNextX =\n    point.x +\n    (initialXRelative - sourcePosition.x) +\n    event.virtualDisplacementX;\n  const linkNextY =\n    point.y +\n    (initialYRelative - sourcePosition.y) +\n    event.virtualDisplacementY;\n\n  return snap(\n    new Point(linkNextX, linkNextY),\n    model.options.gridSize,\n  );\n};\n\n/**\n * Handles mouse move on link or bifurcation creation, creating and\n * moving link points according to user input.\n *\n * This implementation mimics logisim link creation behavior.\n */\nexport default function handleLinkDrag(event, link) {\n  const first = link.getFirstPosition();\n  const last = link.getLastPosition();\n\n  const next = nextLinkPosition(\n    event,\n    this.engine.getModel(),\n    { x: this.initialXRelative, y: this.initialYRelative },\n    first,\n  );\n\n  if (!this.hasStartedMoving && samePosition(first, last)) {\n    /**\n     * For some reason, inputs are only valid after the first and last\n     * position are equals once. Before that, the last position is\n     * (0, 0).\n     */\n    this.hasStartedMoving = true;\n  }\n\n  if (this.hasStartedMoving) {\n    if (!link.hasMiddlePoint()) {\n      if (last.x !== next.x) {\n        if (!this.moveDirection) {\n          this.moveDirection = 'horizontal';\n        }\n\n        if (this.moveDirection === 'vertical') {\n          link.addPoint(link.generatePoint(last.x, next.y), 1);\n        }\n      } else if (last.y !== next.y) {\n        if (!this.moveDirection) {\n          this.moveDirection = 'vertical';\n        }\n\n        if (this.moveDirection === 'horizontal') {\n          link.addPoint(link.generatePoint(next.x, last.y), 1);\n        }\n      }\n    } else {\n      const middle = link.getMiddlePosition();\n      if (samePosition(middle, last)) {\n        link.removePoint(link.getMiddlePoint());\n      } else if (samePosition(first, middle)) {\n        link.removePoint(link.getMiddlePoint());\n        this.moveDirection =\n          this.moveDirection === 'horizontal'\n            ? 'vertical'\n            : 'horizontal';\n      } else if (this.moveDirection === 'horizontal') {\n        if (last.x !== next.x) {\n          link.getMiddlePoint().setPosition(next.x, first.y);\n        }\n      } else if (this.moveDirection === 'vertical') {\n        if (last.y !== next.y) {\n          link.getMiddlePoint().setPosition(first.x, next.y);\n        }\n      }\n    }\n  }\n\n  /**\n   * Sometimes, user input may be fast enough to skip the creation of\n   * a middle point. If this happens, we add it here.\n   */\n  if (\n    !link.hasMiddlePoint() &&\n    first.x !== next.x &&\n    first.y !== next.y\n  ) {\n    if (samePosition(first, last)) {\n      link.addPoint(link.generatePoint(next.x, first.y), 1);\n    } else if (this.moveDirection === 'horizontal') {\n      link.addPoint(link.generatePoint(next.x, first.y), 1);\n    } else {\n      link.addPoint(link.generatePoint(first.x, next.y), 1);\n    }\n  }\n\n  link.getLastPoint().setPosition(next.x, next.y);\n\n  this.engine.repaintCanvas();\n}\n","import React, { useContext } from 'react';\n\nimport { PortWidget } from '@projectstorm/react-diagrams';\n\nimport styled from 'styled-components';\n\nimport ComponentContext from '../ComponentContext';\nimport DiagramContext from '../Diagram/DiagramContext';\n\nconst Wire = styled.div`\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n`;\n\nconst Circle = styled.div`\n  width: 10px;\n  height: 10px;\n  margin-${props => props.marginSide}: ${props => props.length}px;\n  border: var(--port-width) solid\n    ${props =>\n      props.link\n        ? 'var(--port-connected-border)'\n        : 'var(--port-unconnected-border)'};\n  border-radius: 100%;\n  background: ${props => props.port.getColor()};\n\n  &:hover {\n    background: var(--port-hover);\n  }\n`;\n\nclass Port extends PortWidget {\n  report() {\n    if (this.props.port) super.report();\n  }\n\n  componentDidUpdate() {\n    if (this.props.port) super.componentDidUpdate();\n  }\n\n  render() {\n    const { name, port, model, className = '' } = this.props;\n\n    if (!port) return null;\n\n    const marginSides = ['left', 'top', 'right', 'bottom'];\n    const orientation = port.getOrientation()\n    const width = port.getLineWidth();\n    const length = port.getLength() + port.getOffset();\n    const widths = [length, 10, length, 10];\n    const heights = [10, length, 10, length];\n    const x1s = [0, 5, 0, 5]\n    const x2s = [length, 5, length, 5]\n    const y1s = [5, 0, 5, 0]\n    const y2s = [5, length, 5, length]\n\n    return (\n      <>\n        <Circle\n          className={`port ${className}`}\n          data-name={name}\n          data-nodeid={model.getID()}\n          port={port}\n          link={port.getMainLink()}\n          title={name}\n          marginSide={marginSides[orientation]}\n          length={length}\n        />\n        <Wire\n          className={`port ${className}`}\n          width={widths[orientation]}\n          height={heights[orientation]}\n        >\n          <svg\n            height={heights[orientation]}\n            width={widths[orientation]}\n            style={{display: \"block\"}}\n          >\n            <g>\n              <line\n                x1={x1s[orientation]}\n                y1={y1s[orientation]}\n                x2={x2s[orientation]}\n                y2={y2s[orientation]}\n                stroke={port.getLineColor()}\n                strokeWidth={width}\n              />\n            </g>\n          </svg>\n         </Wire>\n      </>\n    );\n  }\n}\n\n/**\n * React Diagrams PortWidget implementation needs us to forward some\n * props in order to function properly. We have this HOC so that\n * component widgets don't need to pass them every time.\n */\nconst withProps = WrappedComponent => ({ ...props }) => {\n  const diagram = useContext(DiagramContext);\n  const model = useContext(ComponentContext);\n\n  return (\n    <WrappedComponent\n      {...props}\n      port={model.getPort(props.name)}\n      engine={diagram.getEngine()}\n      model={model}\n    />\n  );\n};\n\nexport default withProps(Port);\n","import { Point } from '@projectstorm/geometry';\nimport {\n  AbstractDisplacementState,\n  Action,\n  InputType,\n} from '@projectstorm/react-canvas-core';\nimport {\n  NodeModel,\n  PortModel,\n} from '@projectstorm/react-diagrams-core';\n\nimport {\n  snap,\n  samePosition,\n  getLandingLink,\n  isPointOverLink,\n  sameX,\n  sameAxis,\n  closestPointToLink,\n  getIncompatibleWidthsErrorMessage,\n} from './common';\nimport handleLinkDrag from './handleLinkDrag';\n\n/**\n * This State is responsible for handling bifurcation events.\n *\n * A bifurcation is just like a normal link, but instead of having a\n * source port, it has a source link (its `bifurcationSource`).\n *\n * There are three ways the user can create bifurcations:\n *\n * 1. By dragging an existing link into another existing link\n *    (link-to-link bifurcation)\n * 2. By dragging an existing link to any other point on the canvas,\n *    except on top of nodes\n *\n * If the drag start and end points are near each other, this action\n * will behave as a link selection.\n */\nexport default class BifurcateLinkState extends AbstractDisplacementState {\n  constructor(showSnackbar) {\n    super({ name: 'bifurcate-link' });\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          this.moveDirection = undefined;\n          this.hasStartedMoving = false;\n\n          this.source = this.engine.getMouseElement(event.event);\n          this.sourceBefore = this.getLinkPoints(this.source);\n          this.sourceEdited = false;\n\n          const position = this.snapPointToSourceLink(\n            this.engine.getRelativeMousePoint(event.event),\n            this.source,\n          );\n\n          if (this.source.isLocked()) {\n            this.eject();\n            return;\n          }\n\n          this.bifurcation = this.engine\n            .getLinkFactories()\n            .getFactory(this.source.getType())\n            .generateModel();\n          this.bifurcation.setBits(this.source.getBits());\n\n          if (!this.bifurcation) {\n            this.eject();\n            return;\n          }\n\n          this.bifurcation.setBifurcationSource(this.source);\n          this.bifurcation.getFirstPoint().setPosition(position);\n          this.bifurcation.getLastPoint().setPosition(position);\n\n          this.bifurcation.setSelected(true);\n          this.engine.getModel().clearSelection();\n\n          this.source.setSelected(false);\n          this.source.addBifurcation(this.bifurcation);\n          this.engine.getModel().addLink(this.bifurcation);\n        },\n      }),\n    );\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_UP,\n        fire: event => {\n          // Link selection\n          if (this.isNearbySourcePosition()) {\n            this.cleanUp();\n            this.engine.getModel().clearSelection();\n            this.source.setSelected(true);\n            this.engine.repaintCanvas();\n            return;\n          }\n\n          const model = this.engine.getMouseElement(event.event);\n\n          // Disallows creation under nodes\n          if (model instanceof NodeModel) {\n            this.cleanUp();\n            this.engine.repaintCanvas();\n            return;\n          }\n\n          // Bifurcation connected to port\n          if (\n            model instanceof PortModel &&\n            model.isNewLinkAllowed()\n          ) {\n            // Disallows connecting ports with different bit numbers\n            if (this.source.getBits() !== model.getBits()) {\n              this.cleanUp();\n              this.engine.repaintCanvas();\n              showSnackbar(\n                getIncompatibleWidthsErrorMessage(this.source, model),\n              );\n              return;\n            }\n\n            this.bifurcation.setTargetPort(model);\n\n            model.reportPosition();\n            this.adjustBifurcationOverlayingSource(this.bifurcation);\n            this.engine.repaintCanvas();\n            this.fireEvent();\n            return;\n          }\n\n          // Bifurcation landing on another existing link\n          const landing = getLandingLink(\n            this.bifurcation,\n            this.engine,\n          );\n          if (landing) {\n            // Disallows connecting links with different bit numbers\n            if (landing.getBits() !== this.bifurcation.getBits()) {\n              this.cleanUp();\n              this.engine.repaintCanvas();\n              showSnackbar(\n                getIncompatibleWidthsErrorMessage(\n                  this.bifurcation,\n                  landing,\n                ),\n              );\n              return;\n            }\n\n            this.bifurcation.setBifurcationTarget(landing);\n            landing.addBifurcation(this.bifurcation);\n            landing.setSelected(true);\n          }\n\n          this.mergeWithBifurcation(\n            this.bifurcation.getBifurcationSource(),\n          );\n          this.adjustBifurcationOverlayingSource(this.bifurcation);\n          this.fireEvent();\n        },\n      }),\n    );\n  }\n\n  /**\n   * Event is fired to be on the command manager, so the user can undo\n   * and redo it.\n   */\n  fireEvent = () => {\n    if (this.sourceEdited) {\n      this.engine.fireEvent(\n        {\n          before: this.sourceBefore,\n          after: this.getLinkPoints(this.source),\n        },\n        'linkChanged',\n      );\n    } else {\n      this.engine.fireEvent({ link: this.bifurcation }, 'linkAdded');\n    }\n  };\n\n  getLinkPoints(link) {\n    return {\n      id: link.getID(),\n      points: link.getPoints().map(point => point.getPosition()),\n      bifurcationTarget: link.getBifurcationTarget()\n        ? link.getBifurcationTarget().getID()\n        : null,\n    };\n  }\n\n  cleanUp() {\n    this.source.removeBifurcation(this.bifurcation);\n    this.bifurcation.remove();\n  }\n\n  /**\n   * Snaps a point to a point which is over the source link.\n   */\n  snapPointToSourceLink(position, source) {\n    const { gridSize } = this.engine.getModel().getOptions();\n    const sourcePoints = source.getPoints();\n\n    const closestCorner = this.getClosestCornerToPosition(\n      sourcePoints,\n      position,\n    );\n\n    if (closestCorner.distance < gridSize - 1) {\n      return new Point(\n        closestCorner.position.x,\n        closestCorner.position.y,\n      );\n    }\n\n    const closestPath = this.getClosestPathToPosition(\n      sourcePoints,\n      position,\n    );\n\n    const snappedPosition = snap(position, gridSize);\n\n    return new Point(\n      closestPath.axis === 'x'\n        ? closestPath.position\n        : snappedPosition.x,\n      closestPath.axis === 'y'\n        ? closestPath.position\n        : snappedPosition.y,\n    );\n  }\n\n  getClosestCornerToPosition(points, position) {\n    return points\n      .map(sourcePoint => ({\n        distance: Math.hypot(\n          position.x - sourcePoint.position.x,\n          position.y - sourcePoint.position.y,\n        ),\n        ...sourcePoint,\n      }))\n      .reduce((closest, point) =>\n        point.distance < closest.distance ? point : closest,\n      );\n  }\n\n  getPathPoints(points) {\n    return points\n      .map((point, i) => ({ from: points[i], to: points[i + 1] }))\n      .filter(tuple => tuple.to);\n  }\n\n  getPathDirections(points) {\n    return this.getPathPoints(points).map(pathPosition =>\n      sameX(pathPosition.from.position, pathPosition.to.position)\n        ? {\n            axis: 'x',\n            position: pathPosition.from.position.x,\n          }\n        : {\n            axis: 'y',\n            position: pathPosition.from.position.y,\n          },\n    );\n  }\n\n  getClosestPathToPosition(points, position) {\n    return this.getPathDirections(points)\n      .map(path => ({\n        distance: Math.abs(position[path.axis] - path.position),\n        ...path,\n      }))\n      .reduce((closest, path) =>\n        path.distance < closest.distance ? path : closest,\n      );\n  }\n\n  isNearbySourcePosition() {\n    return samePosition(\n      this.bifurcation.getFirstPosition(),\n      this.bifurcation.getLastPosition(),\n    );\n  }\n\n  /**\n   * Removes the bifurcation points which are causing the bifurcation\n   * to overlay its source link. Removes the whole bifurcation, in\n   * case it is completely overlayed by its source link.\n   */\n  adjustBifurcationOverlayingSource() {\n    const source = this.bifurcation.getBifurcationSource();\n\n    if (\n      samePosition(\n        this.bifurcation.getFirstPosition(),\n        source.getLastPosition(),\n      )\n    ) {\n      if (\n        isPointOverLink(this.bifurcation.getSecondPosition(), source)\n      ) {\n        this.bifurcation.removePoint(\n          this.bifurcation.getFirstPoint(),\n        );\n      }\n      return;\n    }\n\n    if (\n      isPointOverLink(this.bifurcation.getFirstPosition(), source) &&\n      isPointOverLink(this.bifurcation.getSecondPosition(), source)\n    ) {\n      if (!this.bifurcation.hasMiddlePoint()) {\n        this.bifurcation.remove();\n        source.removeBifurcation(this.bifurcation);\n        return;\n      }\n\n      this.bifurcation.removePoint(this.bifurcation.getFirstPoint());\n\n      if (\n        samePosition(\n          this.bifurcation.getFirstPosition(),\n          source.getMiddlePosition(),\n        )\n      ) {\n        if (\n          isPointOverLink(this.bifurcation.getLastPosition(), source)\n        ) {\n          this.bifurcation.remove();\n          source.removeBifurcation(this.bifurcation);\n          return;\n        }\n\n        this.bifurcation\n          .getFirstPoint()\n          .setPosition(source.getLastPosition());\n\n        this.mergeWithBifurcation(source);\n        return;\n      }\n    }\n\n    if (source.hasMiddlePoint()) {\n      if (\n        sameAxis(\n          this.bifurcation.getFirstPosition(),\n          source.getMiddlePosition(),\n          this.bifurcation.getSecondPosition(),\n        )\n      ) {\n        this.bifurcation\n          .getFirstPoint()\n          .setPosition(source.getMiddlePosition());\n      }\n    }\n  }\n\n  /**\n   * Merges a link with its bifurcations, when possible.\n   */\n  mergeWithBifurcation(link) {\n    const source = {\n      first: link.getFirstPosition(),\n      middle: link.getMiddlePosition(),\n      last: link.getLastPosition(),\n      secondLast: link.getSecondLastPosition(),\n    };\n\n    link.getBifurcations().forEach(b => {\n      if (isPointOverLink(link.getLastPosition(), b)) {\n        b.getFirstPoint().setPosition(link.getLastPosition());\n      }\n    });\n\n    const elegibleBifurcations = link.getBifurcations().filter(b => {\n      if (!samePosition(b.getFirstPosition(), source.last))\n        return false;\n\n      if (!link.hasMiddlePoint() && !b.hasMiddlePoint()) return true;\n\n      if (link.hasMiddlePoint() && b.hasMiddlePoint()) {\n        if (samePosition(source.middle, b.getMiddlePosition())) {\n          return true;\n        }\n        return false;\n      }\n\n      if (\n        sameAxis(\n          source.last,\n          source.secondLast,\n          b.getSecondPosition(),\n        )\n      )\n        return true;\n\n      return false;\n    });\n\n    const bifurcationToMerge = elegibleBifurcations[0];\n\n    if (!bifurcationToMerge) return;\n\n    const newMiddle = bifurcationToMerge.getSecondLastPosition();\n    const newLast = bifurcationToMerge.getLastPosition();\n\n    if (!link.hasMiddlePoint()) {\n      link.addPoint(link.generatePoint(newMiddle.x, newMiddle.y), 1);\n    }\n\n    link.getLastPoint().setPosition(newLast.x, newLast.y);\n\n    if (link.isStraight() && link.hasMiddlePoint()) {\n      link.removePoint(link.getMiddlePoint());\n    }\n\n    link.removeBifurcation(bifurcationToMerge);\n    const bifurcationTarget = bifurcationToMerge.getBifurcationTarget();\n    if (bifurcationTarget) {\n      link.setBifurcationTarget(bifurcationTarget);\n      bifurcationTarget.addBifurcation(link);\n    }\n    this.sourceEdited = true;\n    bifurcationToMerge.remove();\n\n    if (\n      samePosition(link.getFirstPosition(), link.getLastPosition())\n    ) {\n      link.remove();\n    } else {\n      link.setSelected(true);\n    }\n\n    this.adjustBifurcationPoints(link);\n  }\n\n  /**\n   * Adjusts points for bifurcations on which its first point is not\n   * over its source link.\n   */\n  adjustBifurcationPoints(link) {\n    const { gridSize } = this.engine.getModel().getOptions();\n\n    link\n      .getBifurcations()\n      .filter(b => !isPointOverLink(b.getFirstPosition(), link))\n      .forEach(b => {\n        const newSource = snap(\n          closestPointToLink(b.getFirstPosition(), link),\n          gridSize,\n        );\n\n        b.getFirstPoint().setPosition(newSource.x, newSource.y);\n\n        if (sameAxis(b.getFirstPosition(), b.getLastPosition()))\n          return;\n\n        // Adjust middle point aswell\n        if (b.hasMiddlePoint()) {\n          b.removePoint(b.getMiddlePoint());\n        }\n\n        if (\n          sameX(link.getFirstPosition(), link.getSecondPosition())\n        ) {\n          b.addPoint(\n            b.generatePoint(\n              b.getLastPosition().x,\n              b.getFirstPosition().y,\n            ),\n            1,\n          );\n        } else {\n          b.addPoint(\n            b.generatePoint(\n              b.getFirstPosition().x,\n              b.getLastPosition().y,\n            ),\n            1,\n          );\n        }\n      });\n  }\n\n  /**\n   * Updates bifurcation's points upon mouse move.\n   */\n  fireMouseMoved(event) {\n    handleLinkDrag.call(this, event, this.bifurcation);\n  }\n}\n","import { AbstractDisplacementState } from '@projectstorm/react-canvas-core';\n\nexport default class DragCanvasState extends AbstractDisplacementState {\n  constructor() {\n    super({\n      name: 'drag-canvas',\n    });\n  }\n\n  async activated(prev) {\n    super.activated(prev);\n    this.engine.getModel().clearSelection();\n    await this.engine.repaintCanvas(true);\n\n    // We can block layer rendering because we are only targeting the transforms\n    this.engine\n      .getModel()\n      .getLayers()\n      .forEach(layer => layer.allowRepaint(false));\n\n    this.initialCanvasX = this.engine.getModel().getOffsetX();\n    this.initialCanvasY = this.engine.getModel().getOffsetY();\n  }\n\n  deactivated(next) {\n    super.deactivated(next);\n\n    this.engine\n      .getModel()\n      .getLayers()\n      .forEach(layer => layer.allowRepaint(true));\n  }\n\n  fireMouseMoved(event) {\n    // Allow moving only with left clicks\n    if (\n      event.event.nativeEvent.which !== 1 &&\n      !event.event.nativeEvent.targetTouches\n    )\n      return;\n\n    this.engine\n      .getModel()\n      .setOffset(\n        this.initialCanvasX + event.displacementX,\n        this.initialCanvasY + event.displacementY,\n      );\n    this.engine.repaintCanvas();\n  }\n}\n","import {\n  AbstractDisplacementState,\n  Action,\n  InputType,\n} from '@projectstorm/react-canvas-core';\n\nimport BaseModel from '../../BaseModel';\nimport PortModel from '../../Port/PortModel';\nimport {\n  nearby,\n  getLandingLink,\n  getIncompatibleWidthsErrorMessage,\n} from './common';\nimport handleLinkDrag from './handleLinkDrag';\n\n/**\n * This State is responsible for handling link creation events.\n */\nexport default class DragNewLinkState extends AbstractDisplacementState {\n  constructor(showSnackbar) {\n    super({ name: 'drag-new-link' });\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          this.moveDirection = undefined;\n          this.hasStartedMoving = false;\n\n          this.port = this.engine.getMouseElement(event.event);\n\n          if (\n            !(this.port instanceof PortModel) ||\n            this.port.isLocked()\n          ) {\n            this.eject();\n            return;\n          }\n\n          this.link = this.port.createLinkModel();\n\n          if (!this.link) {\n            this.eject();\n            return;\n          }\n\n          this.link.setSelected(true);\n          this.link.setSourcePort(this.port);\n          this.engine.getModel().clearSelection();\n          this.engine.getModel().addLink(this.link);\n          this.port.reportPosition();\n        },\n      }),\n    );\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_UP,\n        fire: event => {\n          const model = this.engine.getMouseElement(event.event);\n\n          // Disallows creation under nodes\n          if (\n            Object.getPrototypeOf(model) instanceof BaseModel ||\n            this.isNearbySourcePort(event.event)\n          ) {\n            this.link.remove();\n            this.engine.repaintCanvas();\n          }\n\n          // Link connecting to port\n          if (\n            model instanceof PortModel &&\n            this.port.canLinkToPort(model)\n          ) {\n            // Disallows connecting ports with different bit numbers\n            if (this.port.getBits() !== model.getBits()) {\n              this.link.remove();\n              this.engine.repaintCanvas();\n              showSnackbar(\n                getIncompatibleWidthsErrorMessage(this.port, model),\n              );\n              return;\n            }\n\n            this.link.setTargetPort(model);\n            model.reportPosition();\n            this.engine.repaintCanvas();\n            this.fireEvent();\n            return;\n          }\n\n          // Link landing on another link\n          const landing = getLandingLink(this.link, this.engine);\n          if (landing) {\n            // Disallows connecting links with different bit numbers\n            if (landing.getBits() !== this.link.getBits()) {\n              this.link.remove();\n              this.engine.repaintCanvas();\n              showSnackbar(\n                getIncompatibleWidthsErrorMessage(this.link, landing),\n              );\n              return;\n            }\n\n            const reverse = this.engine\n              .getFactoryForLink(landing)\n              .generateModel();\n            reverse.setPoints(this.link.getPoints().reverse());\n            reverse.setTargetPort(this.link.getSourcePort());\n            reverse.setBifurcationSource(landing);\n            reverse.setBits(landing.getBits());\n\n            landing.addBifurcation(reverse);\n            landing.setSelected(true);\n\n            this.link.remove();\n            this.engine.getModel().addLink(reverse);\n            this.link = reverse;\n          }\n\n          this.fireEvent();\n        },\n      }),\n    );\n  }\n\n  /**\n   * Event is fired to be on the command manager, so the user can undo\n   * and redo it.\n   */\n  fireEvent = () => {\n    this.engine.fireEvent({ link: this.link }, 'linkAdded');\n  };\n\n  isNearbySourcePort(event) {\n    const point = this.engine.getRelativeMousePoint(event);\n\n    const sourcePort = this.link.getSourcePort();\n    const sourcePortSize = sourcePort.width;\n    const sourcePortPosition = sourcePort.getPosition();\n\n    return nearby(point, sourcePortPosition, sourcePortSize);\n  }\n\n  /**\n   * Updates link's points upon mouse move.\n   */\n  fireMouseMoved(event) {\n    handleLinkDrag.call(this, event, this.link);\n  }\n}\n","import { Point } from '@projectstorm/geometry';\nimport {\n  Action,\n  InputType,\n  AbstractDisplacementState,\n} from '@projectstorm/react-canvas-core';\n\nimport BaseModel from '../../BaseModel';\nimport {\n  snap,\n  samePosition,\n  sameX,\n  sameY,\n  closestPointToLink,\n} from './common';\n\n/**\n * This State handles node moving.\n *\n * When nodes are moved, all of its links (and all bifurcations from\n * or to this link) need to be rearranged.\n */\nexport default class MoveItemsState extends AbstractDisplacementState {\n  constructor() {\n    super({\n      name: 'move-items',\n    });\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          if (this.engine.getModel().isLocked()) {\n            this.eject();\n            return;\n          }\n\n          this.lastDisplacement = new Point(0, 0);\n\n          this.element = this.engine\n            .getActionEventBus()\n            .getModelForEvent(event);\n\n          if (!this.element) {\n            this.eject();\n            return;\n          }\n\n          if (!this.element.isSelected()) {\n            this.engine.getModel().clearSelection();\n          }\n\n          this.linkDirections = this.getLinkDirections(this.element);\n\n          this.element.setSelected(true);\n          this.engine.repaintCanvas();\n\n          this.nodesBefore = this.getNodesPositions();\n          this.linksBefore = this.getLinksPoints();\n        },\n      }),\n    );\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_UP,\n        fire: () => {\n          if (\n            this.lastDisplacement.x === 0 &&\n            this.lastDisplacement.y === 0\n          ) {\n            return;\n          }\n\n          this.fireEvent();\n        },\n      }),\n    );\n  }\n\n  getNodesPositions = () =>\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(\n        model => Object.getPrototypeOf(model) instanceof BaseModel,\n      )\n      .map(node => ({\n        id: node.getID(),\n        position: node.getPosition(),\n      }));\n\n  getLinksPoints = () =>\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(\n        model => Object.getPrototypeOf(model) instanceof BaseModel,\n      )\n      .map(node => node.getAllLinks())\n      .flat()\n      .map(link => ({\n        id: link.getID(),\n        points: link.getPoints().map(point => point.getPosition()),\n      }));\n\n  /**\n   * Event is fired to be on the command manager, so the user can undo\n   * and redo it.\n   */\n  fireEvent() {\n    this.engine.fireEvent(\n      {\n        nodes: {\n          before: this.nodesBefore,\n          after: this.getNodesPositions(),\n        },\n        links: {\n          before: this.linksBefore,\n          after: this.getLinksPoints(),\n        },\n      },\n      'entitiesMoved',\n    );\n  }\n\n  activated(previous) {\n    super.activated(previous);\n    this.initialPositions = {};\n  }\n\n  /**\n   * Gets all links from a given node, including all its bifurcations.\n   */\n  getLinksFromNode(node) {\n    if (!(Object.getPrototypeOf(node) instanceof BaseModel))\n      return [];\n\n    return Object.values(node.getPorts())\n      .map(p => Object.entries(p.getLinks()))\n      .filter(entry => entry.length > 0)\n      .flat()\n      .map(([id, link]) => [\n        [id, link],\n        ...this.getBifurcatedLinks(link),\n      ])\n      .flat();\n  }\n\n  getBifurcatedLinks(link) {\n    return link\n      .getBifurcations()\n      .map(b => [[b.getID(), b], ...this.getBifurcatedLinks(b)])\n      .flat();\n  }\n\n  getLinkDirections(node) {\n    return this.getLinksFromNode(node).reduce(\n      (acc, [id, link]) => ({\n        ...acc,\n        [id]: this.getLinkDirection(link),\n      }),\n      {},\n    );\n  }\n\n  getLinkDirection(link) {\n    if (!link.hasMiddlePoint()) {\n      return null;\n    }\n\n    const first = link.getFirstPosition();\n    const middle = link.getMiddlePosition();\n\n    if (sameX(first, middle)) return 'vertical';\n    if (sameY(first, middle)) return 'horizontal';\n\n    return null;\n  }\n\n  fireMouseMoved(event) {\n    // Allow moving only with left clicks\n    if (event.event.nativeEvent.which !== 1) return;\n\n    const currentDisplacement = snap(\n      new Point(\n        event.virtualDisplacementX,\n        event.virtualDisplacementY,\n      ),\n      this.engine.getModel().getOptions().gridSize,\n    );\n\n    // Avoids rearranging everything before moving at least one grid\n    if (samePosition(currentDisplacement, this.lastDisplacement)) {\n      return;\n    }\n    this.lastDisplacement = currentDisplacement;\n\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(\n        entity => Object.getPrototypeOf(entity) instanceof BaseModel,\n      )\n      .forEach(entity => {\n        this.moveEntity(entity, event);\n        this.adjustNodeLinks(entity);\n      });\n\n    this.engine.repaintCanvas();\n  }\n\n  moveEntity(entity, event) {\n    if (entity.isLocked()) {\n      return;\n    }\n\n    if (!this.initialPositions[entity.getID()]) {\n      this.initialPositions[entity.getID()] = {\n        point: entity.getPosition(),\n        item: entity,\n      };\n    }\n\n    const initial = this.initialPositions[entity.getID()].point;\n    const model = this.engine.getModel();\n\n    entity.setPosition(\n      model.getGridPosition(initial.x + event.virtualDisplacementX),\n      model.getGridPosition(initial.y + event.virtualDisplacementY),\n    );\n  }\n\n  adjustNodeLinks(node) {\n    Object.values(node.getPorts()).forEach(port =>\n      Object.values(port.getLinks()).forEach(this.adjustLinkPoints),\n    );\n  }\n\n  adjustLinkPoints = link => {\n    const first = link.getFirstPosition();\n    const last = link.getLastPosition();\n\n    if (\n      !link.hasMiddlePoint() &&\n      first.x !== last.x &&\n      first.y !== last.y\n    ) {\n      link.addPoint(link.generatePoint(first.x, last.y), 1);\n    } else if (link.hasMiddlePoint()) {\n      const linkDirection = this.linkDirections[link.getID()];\n\n      if (linkDirection === 'horizontal') {\n        link.getMiddlePoint().setPosition(last.x, first.y);\n      } else {\n        link.getMiddlePoint().setPosition(first.x, last.y);\n      }\n\n      const middle = link.getMiddlePosition();\n\n      if (samePosition(first, middle) || samePosition(middle, last)) {\n        link.removePoint(link.getMiddlePoint());\n      }\n    }\n\n    // Adjusts origin/target position from bifurcations of this link\n    this.adjustLinkBifurcations(link);\n  };\n\n  adjustLinkBifurcations(link) {\n    const bifurcations = link.getBifurcations();\n\n    bifurcations.forEach(bifurcation => {\n      this.adjustFirstAndLastPoints(bifurcation);\n\n      // Adjusts the points of this bifurcation (recursion)\n      this.adjustLinkPoints(bifurcation);\n    });\n  }\n\n  /**\n   * Assures that the first position on a bifurcation is still over\n   * the source link, and that the last position is still over the\n   * target link.\n   */\n  adjustFirstAndLastPoints(bifurcation) {\n    const { gridSize } = this.engine.getModel().getOptions();\n\n    const first = bifurcation.getFirstPoint();\n    const closestToFirst = snap(\n      closestPointToLink(\n        first.getPosition(),\n        bifurcation.getBifurcationSource(),\n      ),\n      gridSize,\n    );\n    first.setPosition(closestToFirst.x, closestToFirst.y);\n\n    if (bifurcation.getBifurcationTarget()) {\n      const last = bifurcation.getLastPoint();\n      const closestToLast = snap(\n        closestPointToLink(\n          last.getPosition(),\n          bifurcation.getBifurcationTarget(),\n        ),\n        gridSize,\n      );\n      last.setPosition(closestToLast.x, closestToLast.y);\n    }\n  }\n}\n","import { Rectangle } from '@projectstorm/geometry';\nimport {\n  AbstractDisplacementState,\n  SelectionLayerModel,\n} from '@projectstorm/react-canvas-core';\nimport {\n  LinkModel,\n  PointModel,\n} from '@projectstorm/react-diagrams-core';\n\n/**\n * This State handles selection box events.\n *\n * Link (and link points) selection is currently disabled.\n */\nexport default class SelectionBoxState extends AbstractDisplacementState {\n  constructor() {\n    super({\n      name: 'selection-box',\n    });\n  }\n\n  activated(previous) {\n    super.activated(previous);\n    this.layer = new SelectionLayerModel();\n    this.engine.getModel().addLayer(this.layer);\n  }\n\n  deactivated(next) {\n    super.deactivated(next);\n    this.layer.remove();\n    this.engine.repaintCanvas();\n  }\n\n  getBoxDimensions(event) {\n    const rel = this.engine.getRelativePoint(\n      event.event.clientX,\n      event.event.clientY,\n    );\n\n    return {\n      left:\n        rel.x > this.initialXRelative ? this.initialXRelative : rel.x,\n      top:\n        rel.y > this.initialYRelative ? this.initialYRelative : rel.y,\n      width: Math.abs(rel.x - this.initialXRelative),\n      height: Math.abs(rel.y - this.initialYRelative),\n      right:\n        rel.x < this.initialXRelative ? this.initialXRelative : rel.x,\n      bottom:\n        rel.y < this.initialYRelative ? this.initialYRelative : rel.y,\n    };\n  }\n\n  fireMouseMoved(event) {\n    this.layer.setBox(this.getBoxDimensions(event));\n\n    const relative = this.engine.getRelativeMousePoint({\n      clientX: this.initialX,\n      clientY: this.initialY,\n    });\n    if (event.virtualDisplacementX < 0) {\n      relative.x -= Math.abs(event.virtualDisplacementX);\n    }\n    if (event.virtualDisplacementY < 0) {\n      relative.y -= Math.abs(event.virtualDisplacementY);\n    }\n    const rect = new Rectangle(\n      relative,\n      Math.abs(event.virtualDisplacementX),\n      Math.abs(event.virtualDisplacementY),\n    );\n\n    if (!this.engine.getModel().isLocked()) {\n      this.engine\n        .getModel()\n        .getSelectionEntities()\n        .forEach(model => {\n          if (model.getBoundingBox) {\n            if (!this.allowSelection(model)) return;\n\n            const bounds = model.getBoundingBox();\n            if (\n              rect.containsPoint(bounds.getTopLeft()) &&\n              rect.containsPoint(bounds.getBottomRight())\n            ) {\n              model.setSelected(true);\n            } else {\n              model.setSelected(false);\n            }\n          }\n        });\n    }\n\n    this.engine.repaintCanvas();\n  }\n\n  allowSelection(model) {\n    return (\n      !(model instanceof LinkModel) && !(model instanceof PointModel)\n    );\n  }\n}\n","import {\n  State,\n  Action,\n  InputType,\n} from '@projectstorm/react-canvas-core';\n\nimport SelectionBoxState from './SelectionBoxState';\n\n/**\n * This State handles nodes selection.\n */\nexport default class SelectingState extends State {\n  constructor() {\n    super({\n      name: 'selecting',\n    });\n    this.keys = ['shift'];\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          const element = this.engine\n            .getActionEventBus()\n            .getModelForEvent(event);\n\n          // Go into a selection box on the canvas state\n          if (!element) {\n            this.transitionWithEvent(new SelectionBoxState(), event);\n          } else {\n            element.setSelected(true);\n            this.engine.repaintCanvas();\n          }\n        },\n      }),\n    );\n  }\n}\n","import {\n  State,\n  Action,\n  InputType,\n} from '@projectstorm/react-canvas-core';\n\nimport LinkModel from '../../Link/LinkModel';\nimport PortModel from '../../Port/PortModel';\nimport BifurcateLinkState from './BifurcateLinkState';\nimport DragCanvasState from './DragCanvasState';\nimport DragNewLinkState from './DragNewLinkState';\nimport MoveItemsState from './MoveItemsState';\nimport SelectingState from './SelectingState';\n\n/**\n * This class defines custom handlers (called states) to respond to\n * clicking events on certain elements.\n */\nexport default class States extends State {\n  constructor(showSnackbar) {\n    super({\n      name: 'diagram-states',\n    });\n\n    this.childStates = [new SelectingState()];\n    this.dragCanvas = new DragCanvasState();\n    this.dragNewLink = new DragNewLinkState(showSnackbar);\n    this.bifurcateLink = new BifurcateLinkState(showSnackbar);\n    this.dragItems = new MoveItemsState();\n\n    // Determine what was clicked on\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          const element = this.engine\n            .getActionEventBus()\n            .getModelForEvent(event);\n\n          // The canvas was clicked on, transition to the dragging canvas state\n          if (!element) {\n            this.transitionWithEvent(this.dragCanvas, event);\n          }\n          // Initiate dragging a new link\n          else if (element instanceof PortModel) {\n            this.transitionWithEvent(this.dragNewLink, event);\n          }\n          // Create a bifurcation\n          else if (element instanceof LinkModel) {\n            this.transitionWithEvent(this.bifurcateLink, event);\n          }\n          // Move items\n          else {\n            this.transitionWithEvent(this.dragItems, event);\n          }\n        },\n      }),\n    );\n\n    // Allows dragging the canvas on touch devices\n    this.registerAction(\n      new Action({\n        type: InputType.TOUCH_START,\n        fire: event => {\n          this.transitionWithEvent(this.dragCanvas, event);\n        },\n      }),\n    );\n  }\n}\n","import { Point } from '@projectstorm/geometry';\nimport createEngine, {\n  DiagramModel,\n} from '@projectstorm/react-diagrams';\n\nimport BaseModel from '../BaseModel';\nimport LinkFactory from '../Link/LinkFactory';\nimport PortFactory from '../Port/PortFactory';\nimport ClipboardAction from './actions/ClipboardAction';\nimport DeleteAction from './actions/DeleteAction';\nimport DuplicateAction from './actions/DuplicateAction';\nimport UndoRedoAction from './actions/UndoRedoAction';\nimport ZoomAction from './actions/ZoomAction';\nimport commandHandlers from './Command/commandHandlers';\nimport CommandManager from './Command/CommandManager';\nimport States from './states/States';\n\nexport default class DiagramEngine {\n  constructor(components, areShortcutsAllowed, showSnackbar) {\n    this.components = components;\n    this.areShortcutsAllowed = areShortcutsAllowed;\n    this.showSnackbar = showSnackbar;\n    this.locked = false;\n\n    this.initializeEngine();\n    this.initializeModel();\n  }\n\n  getEngine = () => this.engine;\n\n  getModel = () => this.engine.getModel();\n\n  /**\n   * Initialization methods\n   */\n  initializeEngine = () => {\n    this.engine = createEngine({\n      registerDefaultDeleteItemsAction: false,\n      registerDefaultZoomCanvasAction: false,\n    });\n\n    this.engine.commands = new CommandManager();\n    this.engine.registerListener(commandHandlers(this));\n\n    this.engine\n      .getStateMachine()\n      .pushState(new States(this.showSnackbar));\n\n    const actions = [\n      DuplicateAction,\n      ClipboardAction,\n      DeleteAction,\n      UndoRedoAction,\n      ZoomAction,\n    ];\n    actions.forEach(Action =>\n      this.engine\n        .getActionEventBus()\n        .registerAction(new Action(this.areShortcutsAllowed)),\n    );\n\n    this.engine.getPortFactories().registerFactory(new PortFactory());\n    this.engine.getLinkFactories().registerFactory(new LinkFactory());\n\n    this.registerComponents();\n  };\n\n  initializeModel = () => {\n    this.model = new DiagramModel();\n\n    this.model.setGridSize(15);\n    this.model.setLocked(false);\n    this.model.registerListener({\n      eventDidFire: event => {\n        const type = event.function;\n        if (type === 'offsetUpdated') this.adjustGridOffset(event);\n        if (type === 'zoomUpdated') this.adjustGridZoom(event);\n      },\n    });\n    this.realignGrid();\n\n    this.engine.setModel(this.model);\n  };\n\n  registerComponents = () => {\n    this.components.forEach(component => {\n      this.engine.getNodeFactories().registerFactory(component);\n    });\n  };\n\n  /**\n   * Serializing & deserializing methods\n   */\n  serialize = () => this.model.serialize();\n\n  load = circuit => {\n    this.engine.commands.clear();\n    this.model.deserializeModel(circuit, this.engine);\n    this.realignGrid();\n    this.engine.repaintCanvas();\n  };\n\n  /**\n   * Diagram locking methods\n   */\n  setLocked = locked => {\n    this.model.setLocked(locked);\n    this.locked = locked;\n  };\n\n  isLocked = () => this.locked;\n\n  /**\n   * Diagram painting methods\n   */\n  repaint = () => this.engine.repaintCanvas();\n\n  realignGrid = () => {\n    this.adjustGridOffset({\n      offsetX: this.model.getOffsetX(),\n      offsetY: this.model.getOffsetY(),\n    });\n\n    this.adjustGridZoom({\n      zoom: this.model.getZoomLevel(),\n    });\n  };\n\n  adjustGridOffset = ({ offsetX, offsetY }) => {\n    document.body.style.setProperty(\n      '--offset-x',\n      `${Math.round(offsetX)}px`,\n    );\n    document.body.style.setProperty(\n      '--offset-y',\n      `${Math.round(offsetY)}px`,\n    );\n  };\n\n  adjustGridZoom = ({ zoom }) => {\n    const { gridSize } = this.model.getOptions();\n    document.body.style.setProperty(\n      '--grid-size',\n      `${(gridSize * zoom) / 100}px`,\n    );\n  };\n\n  /**\n   * Component creation and configuration methods\n   */\n  handleComponentDrop = (event, component) => {\n    const { Model } = this.components.find(\n      c => c.type === component.type,\n    );\n\n    const getSnappedWindowCenter = () => {\n      const zoomFactor = this.model.getZoomLevel() / 100;\n\n      const x =\n        -(this.model.getOffsetX() / zoomFactor) +\n        window.innerWidth / (zoomFactor * 2);\n      const y =\n        -(this.model.getOffsetY() / zoomFactor) +\n        window.innerHeight / (zoomFactor * 2);\n\n      return new Point(\n        Math.round(x / 15) * 15,\n        Math.round(y / 15) * 15,\n      );\n    };\n\n    const getSnappedRelativeMousePoint = () => {\n      const { x, y } = this.engine.getRelativeMousePoint(event);\n      return new Point(\n        Math.round(x / 15) * 15,\n        Math.round(y / 15) * 15,\n      );\n    };\n\n    const point = event\n      ? getSnappedRelativeMousePoint(event)\n      : getSnappedWindowCenter();\n\n    const node = new Model(component.configurations, component.type);\n    node.setPosition(point);\n    this.model.addNode(node);\n\n    this.engine.fireEvent({ nodes: [node] }, 'componentsAdded');\n    this.engine.repaintCanvas();\n  };\n\n  handleComponentEdit = (node, configurations) => {\n    const configurationsBefore = node.configurations;\n    const linksBefore = node.getAllLinks();\n\n    this.editComponentConfiguration(node, configurations);\n\n    this.engine.fireEvent(\n      {\n        node,\n        configurations: {\n          before: configurationsBefore,\n          after: node.configurations,\n        },\n        links: {\n          before: linksBefore,\n          after: node.getAllLinks(),\n        },\n      },\n      'componentEdited',\n    );\n\n    this.engine.repaintCanvas();\n  };\n\n  /**\n   * When the component configuration is changed, we reinitialize the\n   * given component with the given configurations.\n   *\n   * For simplicity's sake, if this configuration edit creates or\n   * removes a port, we delete all its links. Also, if the number of\n   * bits of a port is changed, its main link is deleted.\n   */\n  editComponentConfiguration = (node, configurations) => {\n    const portsBefore = node.getPorts();\n\n    // Resets configurations and ports for the node and reinitialize\n    node.configurations = configurations; // eslint-disable-line no-param-reassign\n    node.ports = {}; // eslint-disable-line no-param-reassign\n    node.initialize(configurations);\n\n    const hasNewPort = Object.values(node.getPorts()).some(\n      newPort => !portsBefore[newPort.getName()],\n    );\n    const hasRemovedPort = Object.values(portsBefore).some(\n      oldPort => !node.getPort(oldPort.getName()),\n    );\n\n    if (hasNewPort || hasRemovedPort) {\n      /**\n       * If there was any port added or removed, we need to remove all\n       * links connected to the edited component.\n       */\n      Object.values(portsBefore).forEach(port =>\n        Object.values(port.getLinks()).forEach(link => link.remove()),\n      );\n      return;\n    }\n\n    /**\n     * If no port was neither added or removed, we need to map old\n     * port links to new ports\n     */\n    Object.values(portsBefore).forEach(portBefore => {\n      const newPort = node.getPort(portBefore.getName());\n      /**\n       * If the number of bits for this port has changed, delete its\n       * main link, to avoid inconsistencies.\n       */\n      if (portBefore.getBits() !== newPort.getBits()) {\n        if (portBefore.getMainLink())\n          portBefore.getMainLink().remove();\n        return;\n      }\n\n      const link = Object.values(portBefore.getLinks())[0];\n      if (!link) return;\n      newPort.addLink(link);\n      if (portBefore === link.getSourcePort())\n        link.setSourcePort(newPort);\n      if (portBefore === link.getTargetPort())\n        link.setTargetPort(newPort);\n      portBefore.remove();\n    });\n  };\n\n  clearSelection = () =>\n    this.getEngine()\n      .getModel()\n      .clearSelection();\n\n  getSelectedNodes = () =>\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(entity => entity instanceof BaseModel);\n\n  fireAction = event =>\n    this.engine.getActionEventBus().fireAction({\n      event: {\n        ...event,\n        key: '',\n        preventDefault: () => {},\n        stopPropagation: () => {},\n      },\n    });\n\n  duplicateSelected = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyD' });\n\n  cutSelected = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyX' });\n\n  copySelected = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyC' });\n\n  pasteSelected = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyV' });\n\n  deleteSelected = () =>\n    this.fireAction({ type: 'keydown', code: 'Delete' });\n\n  undo = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyZ' });\n\n  redo = () =>\n    this.fireAction({\n      type: 'keydown',\n      ctrlKey: true,\n      shiftKey: true,\n      code: 'KeyZ',\n    });\n\n  zoomIn = ({ event }) =>\n    this.fireAction({\n      clientX: event.clientX,\n      clientY: event.clientY,\n      type: 'wheel',\n      deltaY: +1,\n    });\n\n  zoomOut = ({ event }) =>\n    this.fireAction({\n      clientX: event.clientX,\n      clientY: event.clientY,\n      type: 'wheel',\n      deltaY: -1,\n    });\n\n  /**\n   * Simulation methods\n   */\n  synchronizeLink = (id, value) =>\n    this.getEngine()\n      .getModel()\n      .getLink(id)\n      .setValue(value);\n\n  synchronizeComponent = (id, diff) => {\n    const component = this.getEngine()\n      .getModel()\n      .getNode(id);\n\n    // Sets output port values\n    Object.entries(diff.output).forEach(([name, value]) =>\n      component.getPort(name).setValue(value),\n    );\n\n    // Sets custom properties\n    Object.entries(diff.properties).forEach(([name, value]) => {\n      component[name] = value;\n    });\n  };\n\n  clearAllValues = () => {\n    this.clearLinkValues();\n    this.clearPortValues();\n  };\n\n  clearLinkValues = () =>\n    this.getEngine()\n      .getModel()\n      .getLinks()\n      .forEach(link => link.setValue(null));\n\n  clearPortValues = () =>\n    this.getEngine()\n      .getModel()\n      .getNodes()\n      .forEach(node =>\n        Object.values(node.getPorts()).forEach(port =>\n          port.setValue(null),\n        ),\n      );\n}\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst MAX_PORTS = 5;\n\n/**\n * Given a number of ports, returns an array with the port positions\n * symmetrically distributed.\n */\nexport const distributePorts = numPorts => {\n  if (numPorts === 2) return [1, 5];\n  if (numPorts === 3) return [1, 3, 5];\n  if (numPorts === 4) return [1, 2, 4, 5];\n\n  const isNumberOfPortsEven = numPorts % 2 === 0;\n  const closestEven = numPorts - (isNumberOfPortsEven ? 0 : 1);\n\n  let startAt = 0;\n  let length = MAX_PORTS;\n  if (numPorts > MAX_PORTS) {\n    startAt = Math.floor((MAX_PORTS - closestEven) / 2);\n    length = closestEven + 1;\n  }\n\n  const result = [...Array(length).keys()].map(i => i + startAt + 1);\n  if (isNumberOfPortsEven) {\n    result.splice(numPorts / 2, 1);\n  }\n  return result;\n};\n\nconst PortExtensionBar = styled.div`\n  position: absolute;\n  left: ${props => props.offsetX}px;\n  height: ${props => props.size}px;\n  width: 2px;\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  ${props => `${props.place}: 88px;`}\n`;\n\nexport const PortExtension = ({\n  selected,\n  portPositions,\n  offsetX = 1,\n}) => {\n  const lastPortPosition = portPositions[portPositions.length - 1];\n  if (lastPortPosition <= MAX_PORTS) return null;\n\n  const size = (lastPortPosition - MAX_PORTS) * 15;\n\n  return (\n    <>\n      <PortExtensionBar\n        selected={selected}\n        size={size}\n        place=\"top\"\n        offsetX={offsetX}\n      />\n      <PortExtensionBar\n        selected={selected}\n        size={size}\n        place=\"bottom\"\n        offsetX={offsetX}\n      />\n    </>\n  );\n};\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 90px;\n  height: 90px;\n\n  svg {\n    transition: 100ms linear;\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `${props.edge}: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return `${props.side}: 88px`;\n    return `${props.side}: 88px`;\n  }};\n`;\n\nexport const Shape = ({ size = 90, orientation }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 23.812499 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g\n      style={{\n        transform: `rotate(${orientation*90}deg)`,\n        transformOrigin: 'center',\n      }}\n    >\n      <path\n        transform=\"scale(0.26458333)\"\n        d=\"M 2 2 L 2 45 A 42.999999 42.999999 0 0 0 2 45.271484 L 2 88 L 45 88 A 42.999999 42.999999 0 0 0 88 45 A 42.999999 42.999999 0 0 0 45 2 L 44.728516 2 L 2 2 z \"\n      />\n    </g>\n  </svg>\n);\n\nconst AndWidget = props => {\n  const { model } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  const orientation = model.orientation;\n  const inputEdges = ['top', 'left', 'top', 'left'];\n  const inputSides = ['right', 'bottom', 'left', 'top'];\n  const outputSides = ['left', 'top', 'right', 'bottom'];\n\n  return (\n    <Wrapper selected={model.isSelected()}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n      />\n      {inputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          position={portPositions[i]}\n          edge={inputEdges[orientation]}\n          side={inputSides[orientation]}\n        />\n      ))}\n      <PositionedPort\n        name=\"out\"\n        side={outputSides[orientation]}\n      />\n      <Shape orientation={orientation}/>\n    </Wrapper>\n  );\n};\n\nexport default AndWidget;\n","import React from 'react';\n\nimport { Shape } from './AndWidget';\n\nconst AndIcon = () => <Shape size={30} />;\n\nexport default AndIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './AndIcon';\nimport model from './AndModel';\nimport widget from './AndWidget';\n\nexport default new Component({\n  type: 'And',\n  name: 'And',\n  description: 'Logic \"and\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 5,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'ORIENTATION',\n      type: 'hidden',\n      default: 0,\n      label: 'Orientation of component',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class AndModel extends BaseModel {\n  initialize(configurations) {\n    const INPUT_PORTS_NUMBER = Number(\n      configurations.INPUT_PORTS_NUMBER,\n    );\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    this.canRotate = true;\n    this.orientation = configurations.ORIENTATION;\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, { bits: this.dataBits, orientation: (this.orientation + 2) % 4, offset: 2, length: 10 });\n    }\n    this.addOutputPort('out', { bits: this.dataBits, orientation: this.orientation, offset: 2, length: 10 });\n  }\n\n  executeBit(bits) {\n    if (bits.every(bit => bit === 1)) return 1;\n    if (bits.some(bit => bit === 0)) return 0;\n    return 'e';\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input)\n        .map(value => value.asArray(this.dataBits))\n        .transpose()\n        .map(this.executeBit),\n    };\n  }\n\n  stepFloating(input) {\n    return this.step(input);\n  }\n\n  stepError(input) {\n    return this.step(input);\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  svg {\n    transition: 100ms linear;\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'in') return `${props.side}: 29px;`;\n    if (props.name === 'out') return `${props.side}: 29px;`;\n    return '';\n  }}\n`;\n\nexport const Shape = ({ size = 30, orientation }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 45.0 45.0\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g\n      style={{\n        transform: `rotate(${orientation*90}deg)`,\n        transformOrigin: 'center',\n      }}\n    >\n      <path d=\"M 1.0207771,1.6492624 V 43.357967 L 42.724327,22.649262 Z\" />\n    </g>\n  </svg>\n);\n\nconst BufferWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  const orientation = model.orientation;\n  const inputSides = ['right', 'bottom', 'left', 'top'];\n  const outputSides = ['left', 'top', 'right', 'bottom'];\n\n  return (\n    <Wrapper selected={selected}>\n      <PositionedPort\n        name=\"in\"\n        side={inputSides[orientation]}\n      />\n      <PositionedPort\n        name=\"out\"\n        side={outputSides[orientation]}\n      />\n      <Shape orientation={orientation} />\n    </Wrapper>\n  );\n};\n\nexport default BufferWidget;\n","import React from 'react';\n\nimport { Shape } from './BufferWidget';\n\nconst BufferIcon = () => <Shape size={30} />;\n\nexport default BufferIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './BufferIcon';\nimport model from './BufferModel';\nimport widget from './BufferWidget';\n\nexport default new Component({\n  type: 'Buffer',\n  name: 'Buffer',\n  description: 'Simple buffer',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'ORIENTATION',\n      type: 'hidden',\n      default: 0,\n      label: 'Orientation of component',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class BufferModel extends BaseModel {\n  initialize(configurations) {\n    const DATA_BITS = Number(configurations.DATA_BITS);\n\n    this.canRotate = true;\n    this.orientation = configurations.ORIENTATION;\n\n    this.addInputPort('in', { bits: DATA_BITS, orientation: (this.orientation + 2) % 4, offset: 1, length: 10 });\n    this.addOutputPort('out', { bits: DATA_BITS, orientation: this.orientation, offset: 1, length: 10 });\n  }\n\n  step(input) {\n    return { out: input.in };\n  }\n}\n","import React, { useEffect, useRef } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nexport const Shape = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n\n  transition: 100ms linear;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  border-radius: 50%;\n  width: 18px;\n  height: 18px;\n  outline: none;\n\n  border: 2px solid rgba(0, 0, 0, 0.3);\n  background: linear-gradient(\n    225deg,\n    rgba(238, 0, 0, 1) 0%,\n    rgba(125, 20, 20, 1) 100%\n  );\n\n  :active {\n    border: 2px solid rgba(255, 255, 255, 0.5);\n    background: linear-gradient(\n      225deg,\n      rgba(125, 20, 20, 1) 0%,\n      rgba(238, 0, 0, 1) 100%\n    );\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => `${props.side}: 28px`};\n`;\n\nconst ButtonWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  const buttonRef = useRef();\n\n  const handleReleaseAway = event => {\n    if (\n      buttonRef.current &&\n      !buttonRef.current.contains(event.target)\n    ) {\n      model.onRelease();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mouseup', handleReleaseAway);\n    return () =>\n      document.removeEventListener('mouseup', handleReleaseAway);\n  });\n\n  const outputSides = ['left', 'top', 'right', 'bottom'];\n\n  return (\n    <Shape selected={selected}>\n      <PositionedPort\n        name=\"out\"\n        side={outputSides[model.orientation]}\n      />\n      <Button\n        ref={buttonRef}\n        onMouseDown={() => model.onClick()}\n        onMouseUp={() => model.onRelease()}\n      />\n    </Shape>\n  );\n};\n\nexport default ButtonWidget;\n","import React from 'react';\n\nimport { Shape, Button } from './ButtonWidget';\n\nconst ButtonIcon = () => (\n  <Shape>\n    <Button as=\"div\" />\n  </Shape>\n);\n\nexport default ButtonIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './ButtonIcon';\nimport model from './ButtonModel';\nimport widget from './ButtonWidget';\n\nexport default new Component({\n  type: 'Button',\n  name: 'Button',\n  description: 'Simple button',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'ORIENTATION',\n      type: 'hidden',\n      default: 0,\n      label: 'Orientation of component',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class ButtonModel extends BaseModel {\n  initialize(configurations) {\n    this.canRotate = true;\n    this.orientation = configurations.ORIENTATION;\n\n    this.addOutputPort('out', { orientation: this.orientation, offset: 0, length: 10 });\n  }\n\n  onSimulationStart() {\n    this.emit({ out: 0 });\n  }\n\n  onClick() {\n    this.emit({ out: 1 });\n  }\n\n  onRelease() {\n    this.emit({ out: 0 });\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => `${props.side}: 28px`};\n`;\n\nconst Body = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  background: ${props =>\n    `rgba(62, 62, 62, ${props.selected ? 0.5 : 1})`};\n  box-shadow: 0 0 ${props => (props.isActive ? 15 : 0)}px black;\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  border-radius: 15px;\n`;\n\nconst Hole = styled.div`\n  width: 8px;\n  height: 8px;\n\n  background: black;\n  border-radius: 4px;\n`;\n\nexport const Shape = ({ selected, isActive, children }) => (\n  <Body selected={selected} isActive={isActive} data-testid=\"body\">\n    <Hole />\n    {children}\n  </Body>\n);\n\nconst BuzzerWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  const inputSides = ['right', 'bottom', 'left', 'top'];\n\n  return (\n    <Shape selected={selected} isActive={model.isActive()}>\n      <PositionedPort\n        name=\"in\"\n        side={inputSides[model.orientation]}\n      />\n    </Shape>\n  );\n};\n\nexport default BuzzerWidget;\n","import React from 'react';\n\nimport { Shape } from './BuzzerWidget';\n\nconst BuzzerIcon = () => <Shape color=\"#00ff00\" />;\n\nexport default BuzzerIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './BuzzerIcon';\nimport model from './BuzzerModel';\nimport widget from './BuzzerWidget';\n\nexport default new Component({\n  type: 'Buzzer',\n  name: 'Buzzer',\n  description: 'Outputs sound at a give frequency',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'FREQUENCY_HZ',\n      type: 'number',\n      default: 300,\n      label: 'Sound frequency (in Hertz)',\n      min: 0,\n      max: 20000,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum frequency is ${this.min} Hz`;\n        if (value > this.max)\n          return `Maximum frequency is ${this.max} Hz`;\n        return null;\n      },\n    },\n    {\n      name: 'WAVEFORM',\n      type: 'select',\n      default: 'SINE',\n      label: 'Waveform',\n      options: [\n        {\n          label: 'Sine',\n          value: 'SINE',\n        },\n        {\n          label: 'Square',\n          value: 'SQUARE',\n        },\n        {\n          label: 'Sawtooth',\n          value: 'SAWTOOTH',\n        },\n        {\n          label: 'Triangle',\n          value: 'TRIANGLE',\n        },\n      ],\n    },\n    {\n      name: 'ORIENTATION',\n      type: 'hidden',\n      default: 0,\n      label: 'Orientation of component',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class BuzzerModel extends BaseModel {\n  initialize(configurations) {\n    this.frequencyHz = Number(configurations.FREQUENCY_HZ);\n    this.waveform = configurations.WAVEFORM;\n\n    this.canRotate = true;\n    this.orientation = configurations.ORIENTATION;\n\n    this.addInputPort('in', { orientation: (this.orientation + 2) % 4, offset: 0, length: 10 });\n  }\n\n  onSimulationStart() {\n    this.audio = this.createAudio(this.frequencyHz, this.waveform);\n\n    if (this.getInput() === 1) this.audio.play();\n  }\n\n  onSimulationPause() {\n    this.audio.pause();\n  }\n\n  step(input) {\n    if (input.in) {\n      this.audio.play();\n    } else {\n      this.audio.pause();\n    }\n  }\n\n  getInput() {\n    const value = this.getPort('in').getValue();\n\n    if (!value) return 0;\n    return value[0];\n  }\n\n  isActive() {\n    return !!this.getInput();\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => `${props.side}: 28px`};\n`;\n\nexport const Shape = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n\n  transition: 100ms linear;\n`;\n\nexport const Decoration = ({\n  isActive,\n  color,\n  periodMs,\n  animateTransition,\n}) => (\n  <svg\n    width={30}\n    height={30}\n    viewBox=\"0 0 7.9374997 7.9375003\"\n    strokeWidth=\"1\"\n  >\n    <path\n      data-testid=\"decoration\"\n      stroke={color}\n      strokeWidth={0.75}\n      fill=\"none\"\n      style={{\n        transform: isActive ? 'scaleX(1)' : 'scaleX(-1)',\n        transformOrigin: 'center',\n        transition: animateTransition\n          ? `calc(${periodMs}ms / 2 * 0.4) ease-in-out`\n          : 'none',\n      }}\n      d=\"M 1.8683545,4.4337648 V 6.14192 H 4.0062447 V 1.79558 h 2.0629007 v 1.7578226\"\n    />\n  </svg>\n);\n\nconst ClockWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n    periodMs,\n  } = model;\n\n  const outputSides = ['left', 'top', 'right', 'bottom'];\n\n  const out = model.getPort('out');\n\n  return (\n    <Shape selected={selected}>\n      <PositionedPort\n        name=\"out\"\n        side={outputSides[model.orientation]}\n      />\n      <Decoration\n        isActive={model.isActive()}\n        color={out.getColor()}\n        periodMs={periodMs}\n        animateTransition={periodMs >= 500}\n      />\n    </Shape>\n  );\n};\n\nexport default ClockWidget;\n","import React from 'react';\n\nimport { Shape, Decoration } from './ClockWidget';\n\nconst ClockIcon = () => (\n  <Shape>\n    <Decoration color=\"var(--port-unconnected)\" />\n  </Shape>\n);\n\nexport default ClockIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './ClockIcon';\nimport model from './ClockModel';\nimport widget from './ClockWidget';\n\nexport default new Component({\n  type: 'Clock',\n  name: 'Clock',\n  description: 'Generates a clock signal',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'FREQUENCY_HZ',\n      type: 'number',\n      default: 1,\n      label: 'Frequency (in Hz)',\n      step: 0.25,\n      min: 0.25,\n      max: 1000,\n      validate(value) {\n        if (value < this.min)\n          return `Frequency should be greater than ${this.min} Hz`;\n        if (value > this.max)\n          return `Frequency should be lesser than ${this.max} Hz`;\n        if (value % this.step !== 0)\n          return `Frequency should be divisible by ${this.step} Hz`;\n        return null;\n      },\n    },\n    {\n      name: 'HIGH_DURATION',\n      type: 'number',\n      default: 1,\n      label: 'High duration (in cycles)',\n      min: 1,\n      validate(value) {\n        if (value < this.min)\n          return `High duration should be greater than ${this.min}`;\n        return null;\n      },\n    },\n    {\n      name: 'LOW_DURATION',\n      type: 'number',\n      default: 1,\n      label: 'Low duration (in cycles)',\n      min: 1,\n      validate(value) {\n        if (value < this.min)\n          return `Low duration should be greater than ${this.min}`;\n        return null;\n      },\n    },\n    {\n      name: 'ORIENTATION',\n      type: 'hidden',\n      default: 0,\n      label: 'Orientation of component',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class ClockModel extends BaseModel {\n  initialize(configurations) {\n    this.canRotate = true;\n    this.orientation = configurations.ORIENTATION;\n\n    this.addOutputPort('out', { orientation: this.orientation, offset: 0, length: 10 });\n\n    this.configurations = configurations;\n\n    this.output = 0;\n    this.emitInterval = null;\n    this.periodMs = 1000 / this.configurations.FREQUENCY_HZ;\n    this.highCount = 0;\n    this.lowCount = 0;\n  }\n\n  onSimulationStart() {\n    this.emit({ out: this.output });\n\n    this.emitInterval = setInterval(() => {\n      const lastOutput = this.output;\n      this.output = this.getNextOutput();\n\n      if (lastOutput === this.output) return;\n\n      this.emit({ out: this.output });\n    }, this.periodMs / 2);\n  }\n\n  getNextOutput() {\n    const { HIGH_DURATION, LOW_DURATION } = this.configurations;\n\n    if (this.output === 1) {\n      this.highCount += 1;\n\n      if (this.highCount === HIGH_DURATION) {\n        this.highCount = 0;\n        return 0;\n      }\n\n      return 1;\n    }\n\n    this.lowCount += 1;\n\n    if (this.lowCount === LOW_DURATION) {\n      this.lowCount = 0;\n      return 1;\n    }\n\n    return 0;\n  }\n\n  onSimulationPause() {\n    clearInterval(this.emitInterval);\n  }\n\n  onSimulationStop() {\n    clearInterval(this.emitInterval);\n  }\n\n  getOutput() {\n    return this.getPort('out').getValue() || [0];\n  }\n\n  isActive() {\n    return this.getOutput()[0] === 1;\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  svg {\n    transition: 100ms linear;\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'control') return `${props.side}: 30px;`;\n    if (props.name === 'in') return `${props.side}: 30px;`;\n    if (props.name === 'out') return `${props.side}: 30px;`;\n    return '';\n  }}\n`;\n\nexport const Shape = ({ size = 30, orientation, x1 = 22.5, y1 = 32.5, x2 = 22.5, y2 = 45 }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 45.0 45.0\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g\n        style={{\n          transform: `rotate(${orientation*90}deg)`,\n          transformOrigin: 'center',\n        }}\n    >\n      <path d=\"M 1.0207771,1.6492624 V 43.357967 L 42.724327,22.649262 Z\" />\n      <line x1=\"22.5\" y1=\"32.5\" x2=\"22.5\" y2=\"45\" />\n    </g>\n  </svg>\n);\n\nconst ControlledBufferWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  const orientation = model.orientation;\n  const controlSides = ['top', 'right', 'bottom', 'left'];\n  const inputSides = ['right', 'bottom', 'left', 'top'];\n  const outputSides = ['left', 'top', 'right', 'bottom'];\n  const x1s = [22.5, 0];\n  const y1s = [32.5, 22.5];\n  const x2s = [22.5, 12.5];\n  const y2s = [45, 22.5];\n\n  return (\n    <Wrapper selected={selected}>\n      <PositionedPort\n        name=\"control\"\n        side={controlSides[orientation]}\n      />\n      <PositionedPort\n        name=\"in\"\n        side={inputSides[orientation]}\n      />\n      <PositionedPort\n        name=\"out\"\n        side={outputSides[orientation]}\n      />\n      <Shape\n        orientation={orientation}\n        x1={x1s[orientation % 2]}\n        y1={y1s[orientation % 2]}\n        x2={x2s[orientation % 2]}\n        y2={y2s[orientation % 2]}\n      />\n    </Wrapper>\n  );\n};\n\nexport default ControlledBufferWidget;\n","import React from 'react';\n\nimport { Shape } from './ControlledBufferWidget';\n\nconst ControlledBufferIcon = () => <Shape size={30} />;\n\nexport default ControlledBufferIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './ControlledBufferIcon';\nimport model from './ControlledBufferModel';\nimport widget from './ControlledBufferWidget';\n\nexport default new Component({\n  type: 'ControlledBuffer',\n  name: 'Controlled buffer',\n  description: 'Useful for I/O managing',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'ORIENTATION',\n      type: 'hidden',\n      default: 0,\n      label: 'Orientation of component',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class ControlledBufferModel extends BaseModel {\n  initialize(configurations) {\n    const DATA_BITS = Number(configurations.DATA_BITS);\n\n    this.canRotate = true;\n    this.orientation = configurations.ORIENTATION;\n\n    this.addInputPort('control', { orientation: (this.orientation + 1) % 4, offset: 0, length: 10 });\n    this.addInputPort('in', { bits: DATA_BITS, orientation: (this.orientation + 2) % 4, offset: 0, length: 10 });\n    this.addOutputPort('out', { bits: DATA_BITS, orientation: this.orientation, offset: 0, length: 10 });\n  }\n\n  step(input) {\n    if (input.control === 0) return { out: 'x' };\n    return { out: input.in };\n  }\n\n  stepFloating(input) {\n    if (input.control[0] === 'x') return { out: 'e' };\n    if (input.control[0] === 0) return { out: 'x' };\n    return { out: input.in };\n  }\n\n  stepError(input) {\n    return this.stepFloating(input);\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n\n  svg {\n    transition: 100ms linear;\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'control') return `${props.side}: 30px; ${props.edge}: 10px`;\n    if (props.name === 'in') return `${props.side}: 45px;`;\n    if (props.name === 'out') return `${props.side}: 39px;`;\n    return '';\n  }}\n`;\n\nexport const Shape = ({ size = 30, dWidth = 15, dHeight = 0, orientation = 0, translation = 0 }) => (\n  <svg\n    height={size + dHeight}\n    width={size + dWidth}\n    viewBox=\"11 0 45.0 45.0\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g transform={`rotate(${orientation*90} 28 17) translate(${translation})`}\n    >\n      <path d=\"M 1.0207771,1.6492624 V 43.357967 L 42.724327,22.649262 Z\" />\n      <circle r=\"8\" cy=\"22\" cx=\"51\" />\n      <line x1=\"22.5\" y1=\"32.5\" x2=\"22.5\" y2=\"45\" />\n    </g>\n  </svg>\n);\n\nconst ControlledInverterWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  const orientation = model.orientation;\n  const controlSides = ['top', 'right', 'bottom', 'left'];\n  const controlEdges = ['left', 'top', 'right', 'bottom'];\n  const inputSides = ['right', 'bottom', 'left', 'top'];\n  const outputSides = ['left', 'top', 'right', 'bottom'];\n  const dWidths = [15, 0];\n  const dHeights = [0, 15];\n  const translations = ['0 0', '0 -11', '-12 -11', '-12 0'];\n\n  return (\n    <Wrapper selected={selected}>\n      <PositionedPort\n        name=\"control\"\n        side={controlSides[orientation]}\n        edge={controlEdges[orientation]}\n      />\n      <PositionedPort\n        name=\"in\"\n        side={inputSides[orientation]}\n      />\n      <PositionedPort\n        name=\"out\"\n        side={outputSides[orientation]}\n      />\n      <Shape\n        dWidth={dWidths[orientation % 2]}\n        dHeight={dHeights[orientation % 2]}\n        orientation={orientation}\n        translation={translations[orientation]}\n      />\n    </Wrapper>\n  );\n};\n\nexport default ControlledInverterWidget;\n","import React from 'react';\n\nimport { Shape } from './ControlledInverterWidget';\n\nconst ControlledInverterIcon = () => <Shape size={30} />;\n\nexport default ControlledInverterIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './ControlledInverterIcon';\nimport model from './ControlledInverterModel';\nimport widget from './ControlledInverterWidget';\n\nexport default new Component({\n  type: 'ControlledInverter',\n  name: 'Controlled inverter',\n  description: 'Useful for I/O managing',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'ORIENTATION',\n      type: 'hidden',\n      default: 0,\n      label: 'Orientation of component',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class ControlledInverterModel extends BaseModel {\n  initialize(configurations) {\n    const DATA_BITS = Number(configurations.DATA_BITS);\n\n    this.canRotate = true;\n    this.orientation = configurations.ORIENTATION;\n\n    this.addInputPort('control', { orientation: (this.orientation + 1) % 4, offset: 0, length: 10 });\n    this.addInputPort('in', { bits: DATA_BITS, orientation: (this.orientation + 2) % 4, offset: 0, length: 10 });\n    this.addOutputPort('out', { bits: DATA_BITS, orientation: this.orientation, offset: 2, length: 14 });\n  }\n\n  step(input) {\n    if (input.control === 0) return { out: 'x' };\n    return { out: ~input.in };\n  }\n\n  stepFloating(input) {\n    if (input.control[0] === 'x') return { out: 'e' };\n    if (input.control[0] === 0) return { out: 'x' };\n    return {\n      out: input.in.map(bit => {\n        if (bit === 0) return 1;\n        if (bit === 1) return 0;\n        if (bit === 'x') return 'e';\n        return bit;\n      }),\n    };\n  }\n\n  stepError(input) {\n    return this.stepFloating(input);\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  font-size: 12px;\n\n  transition: 100ms linear;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n`;\n\nconst Chevron = ({ className, selected }) => (\n  <svg\n    className={className}\n    width={12}\n    height={20}\n    viewBox=\"0 0 12 20\"\n    stroke={`var(--border-${selected ? '' : 'un'}selected)`}\n    strokeWidth={2}\n    strokeLinecap=\"round\"\n  >\n    <line x1={0} y1={0} x2={6} y2={10} />\n    <line x1={6} y1={10} x2={0} y2={20} />\n  </svg>\n);\n\nconst PositionedChevron = styled(Chevron)`\n  position: absolute;\n  left: -1px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'in') return 'left: -7px;';\n    if (props.name === 'out') return 'right: -7px;';\n    return '';\n  }}\n`;\n\nconst CounterWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper selected={selected}>\n      <PositionedChevron selected={selected} />\n      <PositionedPort name=\"in\" />\n      <PositionedPort name=\"out\" />\n      ++\n    </Wrapper>\n  );\n};\n\nexport default CounterWidget;\n","import React from 'react';\n\nimport { Wrapper } from './CounterWidget';\n\nconst CounterIcon = () => <Wrapper>++</Wrapper>;\n\nexport default CounterIcon;\n","import { Component } from '@logossim/core';\nimport { MAX_VALUE } from '@logossim/core/Simulation/utils';\n\nimport icon from './CounterIcon';\nimport model from './CounterModel';\nimport widget from './CounterWidget';\n\nexport default new Component({\n  type: 'Counter',\n  name: 'Counter',\n  description: 'Counts every input rising or falling edge',\n  group: 'Miscellaneous',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'COUNT_ON',\n      type: 'select',\n      default: 'rising',\n      label: 'Count on',\n      options: [\n        {\n          label: 'Rising edge',\n          value: 'rising',\n        },\n        {\n          label: 'Falling edge',\n          value: 'falling',\n        },\n      ],\n    },\n    {\n      name: 'START_AT',\n      type: 'number',\n      default: 0,\n      label: 'Start value at',\n      min: 0,\n      max: MAX_VALUE[16],\n      validate(value, configurations) {\n        const DATA_BITS = Number(configurations.DATA_BITS);\n\n        if (value > MAX_VALUE[DATA_BITS])\n          return `Maximum value for ${DATA_BITS}-bit is ${MAX_VALUE[DATA_BITS]}`;\n\n        return null;\n      },\n    },\n    {\n      name: 'WRAP_AT',\n      type: 'number',\n      default: 0,\n      label: 'Wrap value at (0 means no wrap)',\n      min: 0,\n      max: MAX_VALUE[16],\n      validate(value, configurations) {\n        const DATA_BITS = Number(configurations.DATA_BITS);\n        const START_AT = Number(configurations.START_AT);\n\n        if (value > MAX_VALUE[DATA_BITS])\n          return `Maximum value for ${DATA_BITS}-bit is ${MAX_VALUE[DATA_BITS]}`;\n\n        if (value !== 0 && value <= START_AT)\n          return `Value must be greater than ${START_AT} (start value)`;\n\n        return null;\n      },\n    },\n    {\n      name: 'STEP_VALUE',\n      type: 'number',\n      default: 1,\n      label: 'Step value',\n      min: 1,\n      max: MAX_VALUE[16],\n      validate(value, configurations) {\n        const DATA_BITS = Number(configurations.DATA_BITS);\n\n        if (value > MAX_VALUE[DATA_BITS])\n          return `Maximum value for ${DATA_BITS}-bit is ${MAX_VALUE[DATA_BITS]}`;\n\n        return null;\n      },\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class CounterModel extends BaseModel {\n  initialize(configurations) {\n    this.dataBits = Number(configurations.DATA_BITS);\n    this.countOnRising = configurations.COUNT_ON === 'rising';\n    this.startAt = configurations.START_AT;\n    this.wrapAt = configurations.WRAP_AT || 2 ** this.dataBits;\n    this.stepValue = configurations.STEP_VALUE;\n\n    this.addInputPort('in');\n    this.addOutputPort('out', { bits: this.dataBits });\n\n    this.current = this.startAt;\n  }\n\n  isRisingEdge(meta) {\n    if (this.countOnRising) return meta.in.risingEdge;\n    return meta.in.fallingEdge;\n  }\n\n  step(input, meta) {\n    if (!this.isRisingEdge(meta)) return { out: this.current };\n\n    this.current += this.stepValue;\n\n    if (this.current >= this.wrapAt) this.current = this.startAt;\n\n    return {\n      out: this.current,\n    };\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'in') return 'left: -5px;';\n    if (props.name === 'selection') return 'left: 10px;';\n    return 'right: -5px;';\n  }};\n  ${props => {\n    if (props.name === 'selection') return 'bottom: -5px;';\n    return `top: ${(props.position || 0) - 5}px;`;\n  }};\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: ${props => (props.outputNumber + 2) * 15}px;\n`;\n\nexport const Shape = ({ selected, outputNumber, icon }) => {\n  const height = (outputNumber + 2) * 15;\n\n  return (\n    <svg\n      viewBox={`0 0 30 ${height}`}\n      height={icon ? 30 : height}\n      width={icon ? 15 : 30}\n      fill={\n        selected ? 'var(--body-selected)' : 'var(--body-unselected)'\n      }\n      stroke={\n        selected ? 'var(--link-selected)' : 'var(--link-16-bit-color)'\n      }\n      strokeLinecap=\"round\"\n      strokeWidth=\"2\"\n    >\n      <path d={`M0,15 L0,${height - 15} L30,${height} L30,0 Z`} />\n      <path d={`M15,${height - 7.5} L15,${height}`} />\n    </svg>\n  );\n};\n\nconst DemuxWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  const outputPorts = Object.values(model.getOutputPorts());\n  const { outputNumber } = model;\n\n  return (\n    <Wrapper outputNumber={outputNumber}>\n      <PositionedPort\n        name=\"in\"\n        position={((outputNumber + 2) * 15) / 2}\n      />\n      <PositionedPort name=\"selection\" />\n      {outputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          position={(i + 1) * 15}\n        />\n      ))}\n      <Shape selected={selected} outputNumber={outputNumber} />\n    </Wrapper>\n  );\n};\n\nexport default DemuxWidget;\n","import React from 'react';\n\nimport { Shape } from './DemuxWidget';\n\nconst DemuxIcon = () => <Shape dataBits={1} outputNumber={2} icon />;\n\nexport default DemuxIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './DemuxIcon';\nimport model from './DemuxModel';\nimport widget from './DemuxWidget';\n\nexport default new Component({\n  type: 'Demux',\n  name: 'Demux',\n  description: 'Demultiplexer',\n  group: 'Plexers',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bits',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'OUTPUT_NUMBER',\n      type: 'select',\n      default: '2',\n      label: 'Number of outputs',\n      options: [\n        {\n          label: '2',\n          value: '2',\n        },\n        {\n          label: '4',\n          value: '4',\n        },\n        {\n          label: '16',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class DemuxModel extends BaseModel {\n  initialize(configurations) {\n    const DATA_BITS = Number(configurations.DATA_BITS);\n    this.outputNumber = Number(configurations.OUTPUT_NUMBER);\n\n    this.addInputPort('in', { bits: DATA_BITS });\n    this.addInputPort('selection', {\n      bits: Math.log2(this.outputNumber),\n    });\n\n    for (let i = 0; i < this.outputNumber; i += 1) {\n      this.addOutputPort(`out${i}`, { bits: DATA_BITS });\n    }\n  }\n\n  step(input) {\n    return {\n      ...Object.fromEntries(\n        [...new Array(this.outputNumber)].map((_, i) => [\n          `out${i}`,\n          0,\n        ]),\n      ),\n      [`out${input.selection}`]: input.in,\n    };\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  left: 50%;\n  top: -5px;\n  transform: translateX(-50%);\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: 30px;\n`;\n\nexport const Shape = ({ selected, dataBits = 1 }) => {\n  return (\n    <svg\n      viewBox=\"0 0 30 30\"\n      width=\"30\"\n      height=\"30\"\n      fill=\"none\"\n      stroke={selected ? 'var(--value-5)' : 'var(--value-0)'}\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <polyline\n        points=\"15 0 15 15\"\n        strokeWidth={`var(--link-${dataBits}-bit-width)`}\n        strokeLinecap=\"butt\"\n      />\n      <polyline points=\"7 15 23 15\" />\n      <polyline points=\"7 15 2 25\" />\n      <polyline points=\"15 15 9 25\" />\n      <polyline points=\"23 15 17 25\" />\n    </svg>\n  );\n};\n\nconst GroundWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper>\n      <Shape selected={selected} dataBits={model.dataBits} />\n      <PositionedPort name=\"out\" />\n    </Wrapper>\n  );\n};\n\nexport default GroundWidget;\n","import React from 'react';\n\nimport { Shape } from './GroundWidget';\n\nconst GroundIcon = () => <Shape />;\n\nexport default GroundIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './GroundIcon';\nimport model from './GroundModel';\nimport widget from './GroundWidget';\n\nexport default new Component({\n  type: 'Ground',\n  name: 'Ground',\n  description: 'Ground (GND) component',\n  group: 'Wiring',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class GroundModel extends BaseModel {\n  initialize(configurations) {\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    this.addOutputPort('out', { bits: this.dataBits });\n  }\n\n  onSimulationStart() {\n    this.emit({ out: 0 });\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst SHAPE_SIZES = {\n  1: { width: 30, height: 30 },\n  2: { width: 60, height: 30 },\n  4: { width: 120, height: 30 },\n  8: { width: 120, height: 60 },\n  16: { width: 240, height: 60 },\n};\n\nconst PIN_BACKGROUND = {\n  0: 'var(--value-off)',\n  1: 'var(--value-on)',\n  x: 'var(--value-floating)',\n};\n\nconst PIN_BORDER = {\n  0: 'var(--value-on)',\n  1: 'var(--value-off)',\n  x: 'black',\n};\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => `${props.side}: ${props.position-2}px`};\n`;\n\nexport const Shape = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  \n  width: ${props => SHAPE_SIZES[props.dataBits].width}px;\n  height: ${props => SHAPE_SIZES[props.dataBits].height}px;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  border-radius: 20px;\n`;\n\nexport const PinContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  align-items: center;\n\n  max-width: 215px;\n`;\n\nexport const Pin = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 20px;\n  height: 20px;\n  margin: 2px;\n\n  background: ${props => PIN_BACKGROUND[props.value]};\n  border: 2px solid ${props => PIN_BORDER[props.value]};\n  border-radius: 100%;\n\n  color: ${props => (props.value === 1 ? 'black' : 'white')};\n  font-family: monospace;\n\n  transition: 100ms linear;\n`;\n\nconst InputWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n    configurations: { DATA_BITS },\n  } = model;\n\n  const dataBits = Number(DATA_BITS);\n\n  const orientation = model.orientation;\n  const outputSides = ['left', 'top', 'right', 'bottom'];\n\n  const size = SHAPE_SIZES[dataBits];\n  const positions = [size.width, size.height, size.width, size.height];\n\n  return (\n    <Shape selected={selected} dataBits={dataBits}>\n      <PinContainer>\n        {[...new Array(dataBits)].map((_, index) => {\n          const value = model.getBitAt(index);\n\n          return (\n            <Pin\n              // eslint-disable-next-line react/no-array-index-key\n              key={index}\n              onClick={() => model.onClick(index)}\n              value={value}\n            >\n              {value}\n            </Pin>\n          );\n        })}\n      </PinContainer>\n      <PositionedPort\n        name=\"out\"\n        side={outputSides[orientation]}\n        position={positions[orientation]}\n      />\n    </Shape>\n  );\n};\n\nexport default InputWidget;\n","import React from 'react';\n\nimport { Shape, Pin } from './InputWidget';\n\nconst InputIcon = () => (\n  <Shape dataBits={1}>\n    <Pin as=\"div\" value={0} />\n  </Shape>\n);\n\nexport default InputIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './InputIcon';\nimport model from './InputModel';\nimport widget from './InputWidget';\n\nexport default new Component({\n  type: 'Input',\n  name: 'Input pin',\n  description: 'Simple input pin',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'THREE_STATE',\n      type: 'select',\n      default: 'false',\n      label: 'Three state',\n      options: [\n        {\n          label: 'Yes',\n          value: 'true',\n        },\n        {\n          label: 'No',\n          value: 'false',\n        },\n      ],\n    },\n    {\n      name: 'ORIENTATION',\n      type: 'hidden',\n      default: 0,\n      label: 'Orientation of component',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class InputModel extends BaseModel {\n  initialize(configurations) {\n    this.dataBits = Number(configurations.DATA_BITS);\n    this.threeState = configurations.THREE_STATE === 'true';\n\n    this.canRotate = true;\n    this.orientation = configurations.ORIENTATION;\n\n    this.addOutputPort('out', { bits: this.dataBits, orientation: this.orientation, offset: 0, length: 10 });\n  }\n\n  onSimulationStart() {\n    this.emit({ out: 0 });\n  }\n\n  nextValue(value) {\n    if (value === 'x') return 0;\n    if (value === 0) return 1;\n    return this.threeState ? 'x' : 0;\n  }\n\n  onClick(index) {\n    this.emit({\n      out: this.getOutput().map((v, i) => {\n        if (i === index) return this.nextValue(v);\n        return v;\n      }),\n    });\n  }\n\n  getOutput() {\n    return (\n      this.getPort('out').getValue() || Array(this.dataBits).fill(0)\n    );\n  }\n\n  getBitAt(index) {\n    return this.getOutput()[index];\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return `right: -5px; top: -5px`;\n    return `left: -5px; bottom: ${props.position - 5}px;`;\n  }}\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: ${props => 15 * props.dataBits}px;\n`;\n\nexport const Shape = ({ selected, dataBits }) => {\n  const height = dataBits * 15;\n\n  return (\n    <svg\n      viewBox={`0 0 30 ${height}`}\n      height={height}\n      width=\"30\"\n      fill=\"none\"\n      stroke={\n        selected ? 'var(--link-selected)' : 'var(--link-16-bit-color)'\n      }\n      strokeLinecap=\"butt\"\n      strokeWidth=\"2\"\n    >\n      <path strokeWidth=\"4\" d={`M30,0 L15,15 L15,${height}`} />\n      {[...new Array(dataBits)]\n        .map((_, index) => index)\n        .map(index => {\n          const bitHeight = height - index * 15;\n\n          return (\n            <path\n              key={index}\n              d={`M15,${bitHeight} L0,${bitHeight}`}\n            />\n          );\n        })}\n    </svg>\n  );\n};\n\nconst JoinerWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n    configurations: { DATA_BITS },\n  } = model;\n\n  const dataBits = Number(DATA_BITS);\n  const inputPorts = Object.values(model.getInputPorts());\n\n  return (\n    <Wrapper dataBits={dataBits}>\n      {inputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          position={i * 15}\n        />\n      ))}\n      <PositionedPort name=\"out\" />\n      <Shape selected={selected} dataBits={dataBits} />\n    </Wrapper>\n  );\n};\n\nexport default JoinerWidget;\n","import React from 'react';\n\nimport { Shape } from './JoinerWidget';\n\nconst JoinerIcon = () => <Shape dataBits={2} />;\n\nexport default JoinerIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './JoinerIcon';\nimport model from './JoinerModel';\nimport widget from './JoinerWidget';\n\nexport default new Component({\n  type: 'Joiner',\n  name: 'Joiner',\n  description: 'Joins N 1 bit wires into one N bit wire',\n  group: 'Wiring',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '2',\n      label: 'Output data bits',\n      options: [\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class JoinerModel extends BaseModel {\n  initialize(configurations) {\n    this.bits = Number(configurations.DATA_BITS);\n\n    for (let i = 0; i < this.bits; i += 1) {\n      this.addInputPort(`in${i}`);\n    }\n    this.addOutputPort('out', { bits: this.bits });\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input)\n        .map(value => value.asArray(1)[0])\n        .map((_, index, arr) => arr[arr.length - index - 1]),\n    };\n  }\n\n  stepFloating(input) {\n    return this.step(input);\n  }\n\n  stepError(input) {\n    return this.step(input);\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => `${props.side}: 28px`};\n`;\n\nexport const Shape = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  background: ${props =>\n    `${props.color}${props.selected ? '80' : 'ff'}`};\n  box-shadow: 0 0 ${props => (props.isActive ? 15 : 0)}px\n    ${props => props.color};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  border-radius: 15px;\n`;\n\nconst LedWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  const inputSides = ['right', 'bottom', 'left', 'top'];\n\n  return (\n    <Shape\n      selected={selected}\n      color={model.getColor()}\n      isActive={model.isActive()}\n      data-testid=\"shape\"\n    >\n      <PositionedPort\n        name=\"in\"\n        side={inputSides[model.orientation]}\n      />\n    </Shape>\n  );\n};\n\nexport default LedWidget;\n","import React from 'react';\n\nimport { Shape } from './LedWidget';\n\nconst LedIcon = () => <Shape color=\"#00ff00\" />;\n\nexport default LedIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './LedIcon';\nimport model from './LedModel';\nimport widget from './LedWidget';\n\nexport default new Component({\n  type: 'Led',\n  name: 'LED',\n  description: 'Simple LED component',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'ACTIVE_WHEN',\n      type: 'select',\n      default: 'HIGH',\n      label: 'Active when',\n      options: [\n        {\n          label: 'High',\n          value: 'HIGH',\n        },\n        {\n          label: 'Low',\n          value: 'LOW',\n        },\n      ],\n    },\n    {\n      name: 'ON_COLOR',\n      type: 'select',\n      default: '#00ff00',\n      label: 'On color',\n      options: [\n        {\n          label: 'Red',\n          value: '#ff0000',\n        },\n        {\n          label: 'Green',\n          value: '#00ff00',\n        },\n        {\n          label: 'Blue',\n          value: '#0000ff',\n        },\n        {\n          label: 'White',\n          value: '#ffffff',\n        },\n        {\n          label: 'Black',\n          value: '#000000',\n        },\n      ],\n    },\n    {\n      name: 'OFF_COLOR',\n      type: 'select',\n      default: '#000000',\n      label: 'Off color',\n      options: [\n        {\n          label: 'Red',\n          value: '#ff0000',\n        },\n        {\n          label: 'Green',\n          value: '#00ff00',\n        },\n        {\n          label: 'Blue',\n          value: '#0000ff',\n        },\n        {\n          label: 'White',\n          value: '#ffffff',\n        },\n        {\n          label: 'Black',\n          value: '#000000',\n        },\n      ],\n    },\n    {\n      name: 'ORIENTATION',\n      type: 'hidden',\n      default: 0,\n      label: 'Orientation of component',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class LedModel extends BaseModel {\n  initialize(configurations) {\n    this.activeWhen = configurations.ACTIVE_WHEN;\n    this.colors = {\n      on: configurations.ON_COLOR,\n      off: configurations.OFF_COLOR,\n    };\n\n    this.canRotate = true;\n    this.orientation = configurations.ORIENTATION;\n\n    this.addInputPort('in', { orientation: (this.orientation + 2) % 4, offset: 0, length: 10 });\n  }\n\n  getInput() {\n    const value = this.getPort('in').getValue();\n\n    if (!value) return 0;\n    return value[0];\n  }\n\n  isActive() {\n    const input = this.getInput();\n\n    if (this.activeWhen === 'HIGH') {\n      if (input === 0) return false;\n      return true;\n    }\n\n    if (input === 0) return true;\n    return false;\n  }\n\n  getColor() {\n    if (this.isActive()) return this.colors.on;\n    return this.colors.off;\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'out') return 'right: -5px;';\n    if (props.name === 'selection') return 'left: 10px;';\n    return 'left: -5px;';\n  }};\n  ${props => {\n    if (props.name === 'selection') return 'bottom: -5px;';\n    return `top: ${(props.position || 0) - 5}px;`;\n  }};\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: ${props => (props.inputNumber + 2) * 15}px;\n`;\n\nexport const Shape = ({ selected, inputNumber, icon }) => {\n  const height = (inputNumber + 2) * 15;\n\n  return (\n    <svg\n      viewBox={`0 0 30 ${height}`}\n      height={icon ? 30 : height}\n      width={icon ? 15 : 30}\n      fill={\n        selected ? 'var(--body-selected)' : 'var(--body-unselected)'\n      }\n      stroke={\n        selected ? 'var(--link-selected)' : 'var(--link-16-bit-color)'\n      }\n      strokeLinecap=\"round\"\n      strokeWidth=\"2\"\n    >\n      <path d={`M0,0 L0,${height} L30,${height - 15} L30,15 Z`} />\n      <path d={`M15,${height - 7.5} L15,${height}`} />\n    </svg>\n  );\n};\n\nconst MuxWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const inputNumber = inputPorts.length;\n\n  return (\n    <Wrapper inputNumber={inputNumber}>\n      {inputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          position={(i + 1) * 15}\n        />\n      ))}\n      <PositionedPort\n        name=\"out\"\n        position={((inputNumber + 1) * 15) / 2}\n      />\n      <Shape selected={selected} inputNumber={inputNumber} />\n    </Wrapper>\n  );\n};\n\nexport default MuxWidget;\n","import React from 'react';\n\nimport { Shape } from './MuxWidget';\n\nconst MuxIcon = () => <Shape dataBits={1} inputNumber={2} icon />;\n\nexport default MuxIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './MuxIcon';\nimport model from './MuxModel';\nimport widget from './MuxWidget';\n\nexport default new Component({\n  type: 'Mux',\n  name: 'Mux',\n  description: 'Multiplexer',\n  group: 'Plexers',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bits',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'INPUT_NUMBER',\n      type: 'select',\n      default: '2',\n      label: 'Number of inputs',\n      options: [\n        {\n          label: '2',\n          value: '2',\n        },\n        {\n          label: '4',\n          value: '4',\n        },\n        {\n          label: '16',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class MuxModel extends BaseModel {\n  initialize(configurations) {\n    const DATA_BITS = Number(configurations.DATA_BITS);\n    const INPUT_NUMBER = Number(configurations.INPUT_NUMBER);\n\n    for (let i = 0; i < INPUT_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, { bits: DATA_BITS });\n    }\n\n    this.addInputPort('selection', { bits: Math.log2(INPUT_NUMBER) });\n    this.addOutputPort('out', { bits: DATA_BITS });\n  }\n\n  step(input) {\n    return { out: input[`in${input.selection}`] };\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n\n  svg {\n    transition: 100ms linear;\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `${props.edge}: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return `${props.side}: 100px`;\n    return `${props.side}: 103px`;\n  }};\n`;\n\nexport const Shape = ({ size = 90, dWidth = 15, dHeight = 0, vbWidth = 27.781249, vbHeight = 23.812501, orientation = 0, translation = 0 }) => (\n  <svg\n    height={size + dHeight}\n    width={size + dWidth}\n    viewBox={`0 0 ${vbWidth} ${vbHeight}`}\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g transform={`scale(0.26458333) rotate(${orientation*90} 45 45) translate(${translation})`}>\n      <path d=\"m 2,2 v 43 a 42.999999,42.999999 0 0 0 0,0.271484 V 88 H 45 A 42.999999,42.999999 0 0 0 88,45 42.999999,42.999999 0 0 0 45,2 h -0.271484 z\" />\n      <circle r=\"5.72056\" cy=\"45\" cx=\"94.27944\" />\n    </g>\n  </svg>\n);\n\nconst NandWidget = props => {\n  const { model } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  const orientation = model.orientation;\n  const inputEdges = ['top', 'left', 'top', 'left'];\n  const inputSides = ['right', 'bottom', 'left', 'top'];\n  const outputSides = ['left', 'top', 'right', 'bottom'];\n\n  const dWidths = [15, 0];\n  const dHeights = [0, 15];\n  const vbWidths = [27.781249, 23.812501];\n  const vbHeights = [23.812501, 27.781249];\n  const translations = [0, 0, -15, -15];\n\n  return (\n    <Wrapper\n      selected={model.isSelected()}\n      width={90 + dWidths[orientation % 2]}\n      height={90 + dHeights[orientation % 2]}\n    >\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n      />\n      {inputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          position={portPositions[i]}\n          edge={inputEdges[orientation]}\n          side={inputSides[orientation]}\n        />\n      ))}\n      <PositionedPort\n        name=\"out\"\n        side={outputSides[orientation]}\n      />\n      <Shape\n        dWidth={dWidths[orientation % 2]}\n        dHeight={dHeights[orientation % 2]}\n        vbWidth={vbWidths[orientation % 2]}\n        vbHeight={vbHeights[orientation % 2]}\n        orientation={orientation}\n        translation={translations[orientation]}\n      />\n    </Wrapper>\n  );\n};\n\nexport default NandWidget;\n","import React from 'react';\n\nimport { Shape } from './NandWidget';\n\nconst NandIcon = () => <Shape size={30} />;\n\nexport default NandIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './NandIcon';\nimport model from './NandModel';\nimport widget from './NandWidget';\n\nexport default new Component({\n  type: 'Nand',\n  name: 'Nand',\n  description: 'Logic \"not and\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 5,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'ORIENTATION',\n      type: 'hidden',\n      default: 0,\n      label: 'Orientation of component',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class NandModel extends BaseModel {\n  initialize(configurations) {\n    const INPUT_PORTS_NUMBER = Number(\n      configurations.INPUT_PORTS_NUMBER,\n    );\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    this.canRotate = true;\n    this.orientation = configurations.ORIENTATION;\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, { bits: this.dataBits, orientation: (this.orientation + 2) % 4, offset: 2, length: 10 });\n    }\n    this.addOutputPort('out', { bits: this.dataBits, orientation: this.orientation, offset: 2, length: 13 });\n  }\n\n  executeBit(bits) {\n    if (bits.some(bit => bit === 0)) return 1;\n    if (bits.every(bit => bit === 1)) return 0;\n    return 'e';\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input)\n        .map(value => value.asArray(this.dataBits))\n        .transpose()\n        .map(this.executeBit),\n    };\n  }\n\n  stepFloating(input) {\n    return this.step(input);\n  }\n\n  stepError(input) {\n    return this.step(input);\n  }\n}\n","import React, { Fragment } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n\n  svg {\n    transition: 100ms linear;\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PortExtensionConnector = styled.div`\n  position: absolute;\n  z-index: -1;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  height: 2px;\n  width: 15px;\n\n  top: ${props => props.position * 15 - 1}px;\n  left: -2px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `${props.edge}: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return `${props.side}: 100px`;\n    return `${props.side}: 103px`;\n  }};\n`;\n\nexport const Shape = ({ size = 90, portPositions = [], dWidth = 15, dHeight = 0, vbWidth = 27.781249, vbHeight = 23.812501, orientation = 0, translation = 0, portWidth = 0.5, portColor }) => (\n  <svg\n    height={size + dHeight}\n    width={size + dWidth}\n    viewBox={`0 0 ${vbWidth} ${vbHeight}`}\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g transform={`scale(0.26458333) rotate(${orientation*90} 45 45) translate(${translation})`}>\n      <path d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 45 C 68.748245,88.000001 88.005576,45.650843 88,45 87.994195,44.322314 68.748245,1.9999989 45,2 h -0.271484 z\" />\n      <circle r=\"5.72056\" cy=\"45\" cx=\"94.27944\" />\n    </g>\n    <g\n      transform={`scale(0.26458333) rotate(${orientation*90} 45 45) translate(${translation})`}\n      strokeWidth={portWidth}\n      stroke={portColor}\n    >\n      {portPositions.includes(1) && (\n        <path d=\"M 18.4669,15 H 1.44549\" />\n      )}\n      {portPositions.includes(2) && (\n        <path d=\"M 20.1902,30 H 1.445\" />\n      )}\n      {portPositions.includes(3) && (\n        <path d=\"M 21.1563,45 H 1.445\" />\n      )}\n      {portPositions.includes(4) && (\n        <path d=\"M 19.8489,60 H 1.445\" />\n      )}\n      {portPositions.includes(5) && (\n        <path d=\"M 16.5984,75 H 1.445\" />\n      )}\n    </g>\n  </svg>\n);\n\nconst NorWidget = props => {\n  const { model } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  const portWidth = inputPorts[0].getLineWidth();\n  const portColor = inputPorts[0].getLineColor();\n\n  const orientation = model.orientation;\n  const inputEdges = ['top', 'left', 'top', 'left'];\n  const inputSides = ['right', 'bottom', 'left', 'top'];\n  const outputSides = ['left', 'top', 'right', 'bottom'];\n\n  const dWidths = [15, 0];\n  const dHeights = [0, 15];\n  const vbWidths = [27.781249, 23.812501];\n  const vbHeights = [23.812501, 27.781249];\n  const translations = [0, 0, -15, -15];\n\n  return (\n    <Wrapper\n      selected={model.options.selected}\n      width={90 + dWidths[orientation % 2]}\n      height={90 + dHeights[orientation % 2]}\n    >\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n        offsetX={12}\n      />\n      {inputPorts.map((port, i) => (\n        <Fragment key={port.getName()}>\n          <PositionedPort\n            name={port.getName()}\n            position={portPositions[i]}\n            edge={inputEdges[orientation]}\n            side={inputSides[orientation]}\n          />\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\n            <PortExtensionConnector\n              selected={model.isSelected()}\n              position={portPositions[i]}\n              edge={inputEdges[orientation]}\n              side={inputSides[orientation]}\n            />\n          )}\n        </Fragment>\n      ))}\n      <PositionedPort\n        name=\"out\"\n        side={outputSides[orientation]}\n      />\n      <Shape\n        portPositions={portPositions}\n        dWidth={dWidths[orientation % 2]}\n        dHeight={dHeights[orientation % 2]}\n        vbWidth={vbWidths[orientation % 2]}\n        vbHeight={vbHeights[orientation % 2]}\n        orientation={orientation}\n        translation={translations[orientation]}\n        portWidth={portWidth}\n        portColor={portColor}\n      />\n    </Wrapper>\n  );\n};\n\nexport default NorWidget;\n","import React from 'react';\n\nimport { Shape } from './NorWidget';\n\nconst NorIcon = () => <Shape size={30} />;\n\nexport default NorIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './NorIcon';\nimport model from './NorModel';\nimport widget from './NorWidget';\n\nexport default new Component({\n  type: 'Nor',\n  name: 'Nor',\n  description: 'Logic \"not or\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 5,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'ORIENTATION',\n      type: 'hidden',\n      default: 0,\n      label: 'Orientation of component',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class NorModel extends BaseModel {\n  initialize(configurations) {\n    const INPUT_PORTS_NUMBER = Number(\n      configurations.INPUT_PORTS_NUMBER,\n    );\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    this.canRotate = true;\n    this.orientation = configurations.ORIENTATION;\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, { bits: this.dataBits, orientation: (this.orientation + 2) % 4, offset: 2, length: -5 });\n    }\n    this.addOutputPort('out', { bits: this.dataBits, orientation: this.orientation, offset: 2, length: 13 });\n  }\n\n  executeBit(bits) {\n    if (bits.every(bit => bit === 0)) return 1;\n    if (bits.some(bit => bit === 1)) return 0;\n    return 'e';\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input)\n        .map(value => value.asArray(this.dataBits))\n        .transpose()\n        .map(this.executeBit),\n    };\n  }\n\n  stepFloating(input) {\n    return this.step(input);\n  }\n\n  stepError(input) {\n    return this.step(input);\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n\n  svg {\n    transition: 100ms linear;\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'in') return `${props.side}: 45px;`;\n    if (props.name === 'out') return `${props.side}: 39px;`;\n    return '';\n  }}\n`;\n\nexport const Shape = ({ size = 30, dWidth = 15, dHeight = 0, orientation = 0, translation = 0 }) => (\n  <svg\n    height={size + dHeight}\n    width={size + dWidth}\n    viewBox=\"11 0 45.0 45.0\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g transform={`rotate(${orientation*90} 28 17) translate(${translation})`}>\n      <path d=\"M 1.0207771,1.6492624 V 43.357967 L 42.724327,22.649262 Z\" />\n      <circle r=\"8\" cy=\"22\" cx=\"51\" />\n    </g>\n  </svg>\n);\n\nconst NotWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  const orientation = model.orientation;\n  const inputSides = ['right', 'bottom', 'left', 'top'];\n  const outputSides = ['left', 'top', 'right', 'bottom'];\n\n  const dWidths = [15, 0];\n  const dHeights = [0, 15];\n  const translations = ['0 0', '0 -11', '-12 -11', '-12 0'];\n\n  return (\n    <Wrapper\n      selected={selected}\n      width={30 + dWidths[orientation % 2]}\n      height={30 + dHeights[orientation % 2]}\n    >\n      <PositionedPort\n        name=\"in\"\n        side={inputSides[orientation]}\n      />\n      <PositionedPort\n        name=\"out\"\n        side={outputSides[orientation]}\n      />\n      <Shape\n        dWidth={dWidths[orientation % 2]}\n        dHeight={dHeights[orientation % 2]}\n        orientation={orientation}\n        translation={translations[orientation]}\n      />\n    </Wrapper>\n  );\n};\n\nexport default NotWidget;\n","import React from 'react';\n\nimport { Shape } from './NotWidget';\n\nconst NotIcon = () => <Shape size={30} />;\n\nexport default NotIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './NotIcon';\nimport model from './NotModel';\nimport widget from './NotWidget';\n\nexport default new Component({\n  type: 'Not',\n  name: 'Not',\n  description: 'Negation component',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'ORIENTATION',\n      type: 'hidden',\n      default: 0,\n      label: 'Orientation of component',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class NotModel extends BaseModel {\n  initialize(configurations) {\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    this.canRotate = true;\n    this.orientation = configurations.ORIENTATION;\n\n    this.addInputPort('in', { bits: this.dataBits, orientation: (this.orientation + 2) % 4, offset: 0, length: 10 });\n    this.addOutputPort('out', { bits: this.dataBits, orientation: this.orientation, offset: 2, length: 14 });\n  }\n\n  step(input) {\n    return {\n      out: input.in.asArray(this.dataBits).map(bit => {\n        if (bit === 1) return 0;\n        return 1;\n      }),\n    };\n  }\n}\n","import React, { Fragment } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 90px;\n  height: 90px;\n\n  svg {\n    transition: 100ms linear;\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PortExtensionConnector = styled.div`\n  position: absolute;\n  z-index: -1;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  height: 2px;\n  width: 15px;\n\n  top: ${props => props.position * 15 - 1}px;\n  left: -2px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `${props.edge}: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return `${props.side}: 88px`;\n    return `${props.side}: 88px`;\n  }};\n`;\n\nexport const Shape = ({ size = 90, portPositions = [], orientation = 0, portWidth = 0.5, portColor }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 23.812499 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path\n        d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 45 C 68.748245,88.000001 88.005576,45.650843 88,45 87.994195,44.322314 68.748245,1.9999989 45,2 h -0.271484 z\"\n        transform={`scale(0.26458333) rotate(${orientation*90} 45 45)`}\n      />\n    </g>\n    <g\n      transform={`scale(0.26458333) rotate(${orientation*90} 45 45)`}\n      strokeWidth={portWidth}\n      stroke={portColor}\n    >\n      {portPositions.includes(1) && (\n        <path d=\"M 18.4669,15 H 1.44549\" />\n      )}\n      {portPositions.includes(2) && (\n        <path d=\"M 20.1902,30 H 1.445\" />\n      )}\n      {portPositions.includes(3) && (\n        <path d=\"M 21.1563,45 H 1.445\" />\n      )}\n      {portPositions.includes(4) && (\n        <path d=\"M 19.8489,60 H 1.445\" />\n      )}\n      {portPositions.includes(5) && (\n        <path d=\"M 16.5984,75 H 1.445\" />\n      )}\n    </g>\n  </svg>\n);\n\nconst OrWidget = props => {\n  const { model } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  const portWidth = inputPorts[0].getLineWidth();\n  const portColor = inputPorts[0].getLineColor();\n\n  const orientation = model.orientation;\n  const inputEdges = ['top', 'left', 'top', 'left'];\n  const inputSides = ['right', 'bottom', 'left', 'top'];\n  const outputSides = ['left', 'top', 'right', 'bottom'];\n\n  return (\n    <Wrapper selected={model.options.selected}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n        offsetX={12}\n      />\n      {inputPorts.map((port, i) => (\n        <Fragment key={port.getName()}>\n          <PositionedPort\n            name={port.getName()}\n            position={portPositions[i]}\n            edge={inputEdges[orientation]}\n            side={inputSides[orientation]}\n          />\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\n            <PortExtensionConnector\n              selected={model.isSelected()}\n              position={portPositions[i]}\n            />\n          )}\n        </Fragment>\n      ))}\n      <PositionedPort\n        name=\"out\"\n        side={outputSides[orientation]}\n      />\n      <Shape\n        portPositions={portPositions}\n        orientation={orientation}\n        portWidth={portWidth}\n        portColor={portColor}\n      />\n    </Wrapper>\n  );\n};\n\nexport default OrWidget;\n","import React from 'react';\n\nimport { Shape } from './OrWidget';\n\nconst OrIcon = () => <Shape size={30} />;\n\nexport default OrIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './OrIcon';\nimport model from './OrModel';\nimport widget from './OrWidget';\n\nexport default new Component({\n  type: 'Or',\n  name: 'Or',\n  description: 'Logic \"or\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 5,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'ORIENTATION',\n      type: 'hidden',\n      default: 0,\n      label: 'Orientation of component',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class OrModel extends BaseModel {\n  initialize(configurations) {\n    const INPUT_PORTS_NUMBER = Number(\n      configurations.INPUT_PORTS_NUMBER,\n    );\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    this.canRotate = true;\n    this.orientation = configurations.ORIENTATION;\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, { bits: this.dataBits, orientation: (this.orientation + 2) % 4, offset: 2, length: -5 });\n    }\n    this.addOutputPort('out', { bits: this.dataBits, orientation: this.orientation, offset: 2, length: 10 });\n  }\n\n  executeBit(bits) {\n    if (bits.every(bit => bit === 0)) return 0;\n    if (bits.some(bit => bit === 1)) return 1;\n    return 'e';\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input)\n        .map(value => value.asArray(this.dataBits))\n        .transpose()\n        .map(this.executeBit),\n    };\n  }\n\n  stepFloating(input) {\n    return this.step(input);\n  }\n\n  stepError(input) {\n    return this.step(input);\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst SHAPE_SIZES = {\n  1: { width: 30, height: 30 },\n  2: { width: 60, height: 30 },\n  4: { width: 120, height: 30 },\n  8: { width: 120, height: 60 },\n  16: { width: 240, height: 60 },\n};\n\nconst PIN_BACKGROUND = {\n  0: 'var(--value-off)',\n  1: 'var(--value-on)',\n  x: 'var(--value-floating)',\n  e: 'var(--value-error)',\n};\n\nconst PIN_BORDER = {\n  0: 'var(--value-on)',\n  1: 'var(--value-off)',\n  x: 'black',\n  e: 'black',\n};\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => `${props.side}: ${props.position-2}px`};\n`;\n\nexport const Shape = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: ${props => {\n    if (props.format === 'BITS')\n      return SHAPE_SIZES[props.dataBits].width;\n\n    return SHAPE_SIZES[4].width;\n  }}px;\n  height: ${props => {\n    if (props.format === 'BITS')\n      return SHAPE_SIZES[props.dataBits].height;\n\n    return SHAPE_SIZES[4].height;\n  }}px;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  border-radius: 20px;\n`;\n\nexport const PinContainer = styled.span`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  align-items: center;\n  font-family: monospace;\n\n  max-width: 215px;\n`;\n\nexport const Pin = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 20px;\n  height: 20px;\n  margin: 2px;\n\n  background: ${props => PIN_BACKGROUND[props.value]};\n  border: 2px solid ${props => PIN_BORDER[props.value]};\n  border-radius: 100%;\n\n  color: ${props => (props.value === 1 ? 'black' : 'white')};\n  font-family: monospace;\n\n  transition: 100ms linear;\n`;\n\nconst ErrorMessage = styled.span`\n  color: var(--value-error);\n  font-weight: bold;\n  font-family: monospace;\n`;\n\nconst FloatingMessage = styled.span`\n  color: var(--value-floating);\n  font-weight: bold;\n  font-family: monospace;\n`;\n\nconst mapBits = model => {\n  const {\n    configurations: { DATA_BITS },\n  } = model;\n  const dataBits = Number(DATA_BITS);\n\n  return [...new Array(dataBits)].map((_, index) => {\n    const value = model.getBitAt(index);\n\n    return (\n      <Pin\n        // eslint-disable-next-line react/no-array-index-key\n        key={index}\n        value={value}\n      >\n        {value}\n      </Pin>\n    );\n  });\n};\n\nconst showAsNumber = (input, format) => {\n  const number = input.asNumber();\n  if (number === 'e') return <ErrorMessage>(error)</ErrorMessage>;\n  if (number === 'x')\n    return <FloatingMessage>(floating)</FloatingMessage>;\n\n  if (format === 'DECIMAL') return number;\n  if (format === 'HEXADECIMAL')\n    return `0x${number.toString(16).padStart(4, '0')}`;\n  return '';\n};\n\nconst OutputWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n    configurations: { OUTPUT_FORMAT, DATA_BITS },\n  } = model;\n\n  const dataBits = Number(DATA_BITS);\n\n  const orientation = model.orientation;\n  const inputSides = ['right', 'bottom', 'left', 'top'];\n\n  const width = (OUTPUT_FORMAT === 'BITS') ? SHAPE_SIZES[dataBits].width : SHAPE_SIZES[4].width;\n  const height = (OUTPUT_FORMAT === 'BITS') ? SHAPE_SIZES[dataBits].height : SHAPE_SIZES[4].height;\n  const positions = [width, height, width, height];\n\n  return (\n    <Shape\n      selected={selected}\n      format={OUTPUT_FORMAT}\n      dataBits={dataBits}\n    >\n      <PinContainer data-testid=\"pin-container\">\n        {OUTPUT_FORMAT === 'BITS'\n          ? mapBits(model)\n          : showAsNumber(model.getInput(), OUTPUT_FORMAT)}\n      </PinContainer>\n      <PositionedPort\n        name=\"in\"\n        side={inputSides[orientation]}\n        position={positions[orientation]}\n      />\n    </Shape>\n  );\n};\n\nexport default OutputWidget;\n","import React from 'react';\n\nimport { Shape, Pin } from './OutputWidget';\n\nconst OutputIcon = () => (\n  <Shape dataBits={1} format=\"BITS\">\n    <Pin as=\"div\" value={0} />\n  </Shape>\n);\n\nexport default OutputIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './OutputIcon';\nimport model from './OutputModel';\nimport widget from './OutputWidget';\n\nexport default new Component({\n  type: 'Output',\n  name: 'Output pin',\n  description: 'Simple output pin',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'OUTPUT_FORMAT',\n      type: 'select',\n      default: 'BITS',\n      label: 'Output format',\n      options: [\n        {\n          label: 'Bit by bit',\n          value: 'BITS',\n        },\n        {\n          label: 'Decimal number',\n          value: 'DECIMAL',\n        },\n        {\n          label: 'Hexadecimal number',\n          value: 'HEXADECIMAL',\n        },\n      ],\n    },\n    {\n      name: 'ORIENTATION',\n      type: 'hidden',\n      default: 0,\n      label: 'Orientation of component',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class OutputModel extends BaseModel {\n  initialize(configurations) {\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    this.canRotate = true;\n    this.orientation = configurations.ORIENTATION;\n\n    this.addInputPort('in', { bits: this.dataBits, orientation: (this.orientation + 2) % 4, offset: 0, length: 10 });\n  }\n\n  getInput() {\n    return (\n      this.getPort('in').getValue() ||\n      new Array(this.dataBits).fill(0)\n    );\n  }\n\n  getBitAt(index) {\n    return this.getInput()[index];\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  left: 50%;\n  bottom: -5px;\n  transform: translateX(-50%);\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: 30px;\n`;\n\nexport const Shape = ({ selected, dataBits = 1 }) => {\n  return (\n    <svg\n      viewBox=\"0 0 30 30\"\n      width=\"30\"\n      height=\"30\"\n      fill=\"none\"\n      stroke={selected ? 'var(--value-5)' : 'var(--value-10)'}\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <polyline\n        points=\"15 15 15 30\"\n        strokeWidth={`var(--link-${dataBits}-bit-width)`}\n        strokeLinecap=\"butt\"\n      />\n      <polyline\n        points=\"7 15 15 0 23 15 7 15\"\n        fill=\"var(--value-2)\"\n        fillOpacity={\n          selected\n            ? 'var(--unselected-opacity)'\n            : 'var(--selected-opacity)'\n        }\n      />\n    </svg>\n  );\n};\n\nconst PowerWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper>\n      <Shape selected={selected} dataBits={model.dataBits} />\n      <PositionedPort name=\"out\" />\n    </Wrapper>\n  );\n};\n\nexport default PowerWidget;\n","import React from 'react';\n\nimport { Shape } from './PowerWidget';\n\nconst PowerIcon = () => <Shape />;\n\nexport default PowerIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './PowerIcon';\nimport model from './PowerModel';\nimport widget from './PowerWidget';\n\nexport default new Component({\n  type: 'Power',\n  name: 'Power',\n  description: 'Power (VCC) component',\n  group: 'Wiring',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class PowerModel extends BaseModel {\n  initialize(configurations) {\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    this.addOutputPort('out', { bits: this.dataBits });\n  }\n\n  onSimulationStart() {\n    this.emit({ out: 0b1111_1111_1111_1111 });\n  }\n}\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Icon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n  font-size: 10px;\n\n  background: var(--body-unselected);\n  border: 1px solid var(--border-unselected);\n`;\n\nconst RamIcon = () => <Icon>RAM</Icon>;\n\nexport default RamIcon;\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 180px;\n  height: 150px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 1px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n\n  transition: 100ms linear;\n`;\n\nconst Memory = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  overflow: hidden;\n  background: white;\n  border: 2px solid #c9c9c9;\n\n  width: 80%;\n  height: 112px;\n  font-size: 10px;\n`;\n\nconst Cell = styled.div`\n  display: flex;\n  border-bottom: 1px solid #c9c9c9;\n  padding: 0 4px;\n`;\n\nconst ActiveAddress = styled.div`\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 4px 0 4px 8px;\n  border-color: ${({ isSelected }) =>\n    `transparent transparent transparent ${\n      isSelected ? '#f44336' : 'transparent'\n    }`};\n  margin: auto 4px auto -4px;\n`;\n\nconst AddressValueContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Address = styled.span`\n  margin-right: 4px;\n  padding: 1px 4px;\n  height: fit-content;\n\n  font-family: monospace;\n  font-size: 8px;\n  color: white;\n\n  background: #2642a0;\n  border-radius: 2px;\n`;\n\nconst Value = styled.span`\n  padding: 4px;\n`;\n\nconst Chevron = ({ className, selected }) => (\n  <svg\n    className={className}\n    width={20}\n    height={12}\n    viewBox=\"0 0 20 12\"\n    stroke={`var(--border-${selected ? '' : 'un'}selected)`}\n    strokeWidth={2}\n    strokeLinecap=\"round\"\n  >\n    <line x1={0} y1={12} x2={10} y2={0} />\n    <line x1={10} y1={0} x2={20} y2={12} />\n  </svg>\n);\n\nconst PositionedChevron = styled(Chevron)`\n  position: absolute;\n  bottom: -1px;\n  left: calc(50% - 10px);\n\n  transition: 100ms linear;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'clock') return 'bottom: -5px';\n    if (props.name === 'load')\n      return 'bottom: -5px; right: calc(50% - 20px)';\n    if (props.name === 'clear')\n      return 'bottom: -5px; right: calc(50% - 35px)';\n    if (props.name === 'select')\n      return 'bottom: -5px; right: calc(50% - 50px)';\n    if (props.name === 'address') return 'left: -5px';\n    if (props.name === 'data') return 'right: -5px';\n    return '';\n  }}\n`;\n\nconst getMemoryDisplayRange = (memory, address) => {\n  if (address <= 1) return [0, 5];\n  if (address >= memory.length - 2)\n    return [memory.length - 5, memory.length];\n  return [address - 2, address + 3];\n};\n\nconst RamWidget = props => {\n  const { model } = props;\n  const selected = model.isSelected();\n\n  const memory = model.getMemory();\n  const selectedAddress = model.getAddress();\n  const range = getMemoryDisplayRange(memory, selectedAddress);\n\n  return (\n    <Wrapper selected={selected}>\n      <PositionedChevron selected={selected} />\n\n      <PositionedPort name=\"clock\" />\n      <PositionedPort name=\"load\" />\n      <PositionedPort name=\"address\" />\n      <PositionedPort name=\"data\" />\n      <PositionedPort name=\"clear\" />\n      <PositionedPort name=\"select\" />\n\n      <Memory>\n        {memory.slice(...range).map((value, index) => {\n          const address = index + range[0];\n          const formattedAddress = `0x${address\n            .toString(16)\n            .padStart(2, '0')}`;\n\n          return (\n            <Cell key={formattedAddress}>\n              <ActiveAddress\n                isSelected={address === selectedAddress}\n              />\n              <AddressValueContainer>\n                <Address>{formattedAddress}</Address>\n                <Value>{value}</Value>\n              </AddressValueContainer>\n            </Cell>\n          );\n        })}\n      </Memory>\n    </Wrapper>\n  );\n};\n\nexport default RamWidget;\n","import { Component } from '@logossim/core';\n\nimport icon from './RamIcon';\nimport model from './RamModel';\nimport widget from './RamWidget';\n\nexport default new Component({\n  type: 'Ram',\n  name: 'RAM',\n  description: 'Random access memory',\n  group: 'Memory',\n  configurations: [\n    {\n      name: 'DATA_WIDTH',\n      type: 'select',\n      default: '1',\n      label: 'Data width',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'ADDRESS_WIDTH',\n      type: 'select',\n      default: '1',\n      label: 'Address width',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n      ],\n    },\n    {\n      name: 'CONTENT',\n      type: 'binary',\n      label: 'Initial content',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class RamModel extends BaseModel {\n  initialize(configurations) {\n    this.dataWidth = Number(configurations.DATA_WIDTH);\n    this.addressWidth = Number(configurations.ADDRESS_WIDTH);\n    this.memory = (configurations.CONTENT || '').parseBinary(\n      this.dataWidth,\n      2 ** this.addressWidth,\n    );\n\n    this.addInputPort('clock', { floating: 0 });\n    this.addInputPort('load', { floating: 1 });\n    this.addInputPort('address', {\n      bits: this.addressWidth,\n      floating: 0,\n    });\n    this.addInputPort('clear', { floating: 0 });\n    this.addInputPort('select', { floating: 1 });\n    this.addOutputPort('data', { bits: this.dataWidth });\n  }\n\n  clearMemory() {\n    this.memory = Array(2 ** this.addressWidth).fill(0);\n  }\n\n  getMemory() {\n    return this.memory;\n  }\n\n  getAddress() {\n    if (!this.select) return 0;\n    return (this.currentAddress || 0).asNumber();\n  }\n\n  step(input, meta) {\n    this.currentAddress = input.address;\n    this.select = input.select;\n\n    if (input.clear) this.clearMemory();\n    if (!input.select) return { data: 'x' };\n\n    if (!input.load) {\n      if (meta.clock.risingEdge && !input.clear) {\n        this.memory[input.address] = this.getPort('data')\n          .getWireValue()\n          .asNumber();\n      }\n\n      return { data: 'x' };\n    }\n\n    return {\n      data: this.memory[input.address],\n    };\n  }\n}\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Icon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n  font-size: 10px;\n\n  background: var(--body-unselected);\n  border: 1px solid var(--border-unselected);\n`;\n\nconst RomIcon = () => <Icon>ROM</Icon>;\n\nexport default RomIcon;\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 180px;\n  height: 150px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 1px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n\n  transition: 100ms linear;\n`;\n\nconst Memory = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  overflow: hidden;\n  background: white;\n  border: 2px solid #c9c9c9;\n\n  width: 80%;\n  height: 112px;\n  font-size: 10px;\n`;\n\nconst Cell = styled.div`\n  display: flex;\n  border-bottom: 1px solid #c9c9c9;\n  padding: 0 4px;\n`;\n\nconst ActiveAddress = styled.div`\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 4px 0 4px 8px;\n  border-color: ${({ isSelected }) =>\n    `transparent transparent transparent ${\n      isSelected ? '#f44336' : 'transparent'\n    }`};\n  margin: auto 4px auto -4px;\n`;\n\nconst AddressValueContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Address = styled.span`\n  margin-right: 4px;\n  padding: 1px 4px;\n  height: fit-content;\n\n  font-family: monospace;\n  font-size: 8px;\n  color: white;\n\n  background: #2642a0;\n  border-radius: 2px;\n`;\n\nconst Value = styled.span`\n  padding: 4px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'select')\n      return 'bottom: -5px; right: calc(50% - 50px)';\n    if (props.name === 'address') return 'left: -5px';\n    if (props.name === 'data') return 'right: -5px';\n    return '';\n  }}\n`;\n\nconst getMemoryDisplayRange = (memory, address) => {\n  if (address <= 1) return [0, 5];\n  if (address >= memory.length - 2)\n    return [memory.length - 5, memory.length];\n  return [address - 2, address + 3];\n};\n\nconst RomWidget = props => {\n  const { model } = props;\n  const memory = model.getMemory();\n  const selectedAddress = model.getAddress();\n  const range = getMemoryDisplayRange(memory, selectedAddress);\n\n  return (\n    <Wrapper selected={model.isSelected()}>\n      <PositionedPort name=\"address\" />\n      <PositionedPort name=\"data\" />\n      <PositionedPort name=\"select\" />\n\n      <Memory>\n        {memory.slice(...range).map((value, index) => {\n          const address = index + range[0];\n          const formattedAddress = `0x${address\n            .toString(16)\n            .padStart(2, '0')}`;\n\n          return (\n            <Cell key={formattedAddress}>\n              <ActiveAddress\n                isSelected={address === selectedAddress}\n              />\n              <AddressValueContainer>\n                <Address>{formattedAddress}</Address>\n                <Value>{value}</Value>\n              </AddressValueContainer>\n            </Cell>\n          );\n        })}\n      </Memory>\n    </Wrapper>\n  );\n};\n\nexport default RomWidget;\n","import { Component } from '@logossim/core';\n\nimport icon from './RomIcon';\nimport model from './RomModel';\nimport widget from './RomWidget';\n\nexport default new Component({\n  type: 'Rom',\n  name: 'ROM',\n  description: 'Read only memory',\n  group: 'Memory',\n  configurations: [\n    {\n      name: 'DATA_WIDTH',\n      type: 'select',\n      default: '1',\n      label: 'Data width',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'ADDRESS_WIDTH',\n      type: 'select',\n      default: '1',\n      label: 'Address width',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n      ],\n    },\n    {\n      name: 'CONTENT',\n      type: 'binary',\n      label: 'Initial content',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class RomModel extends BaseModel {\n  initialize(configurations) {\n    this.dataWidth = Number(configurations.DATA_WIDTH);\n    this.addressWidth = Number(configurations.ADDRESS_WIDTH);\n    this.memory = (configurations.CONTENT || '').parseBinary(\n      this.dataWidth,\n      2 ** this.addressWidth,\n    );\n\n    this.addInputPort('address', {\n      bits: this.addressWidth,\n      floating: 0,\n    });\n    this.addInputPort('select', { floating: 1 });\n    this.addOutputPort('data', { bits: this.dataWidth });\n  }\n\n  getMemory() {\n    return this.memory;\n  }\n\n  getAddress() {\n    if (!this.select) return 0;\n    return (this.currentAddress || 0).asNumber();\n  }\n\n  step(input) {\n    this.currentAddress = input.address;\n    this.select = input.select;\n\n    if (!input.select) return { data: 'x' };\n\n    return {\n      data: this.memory[input.address],\n    };\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => (props.name === 'in' ? 'left: -5px' : 'right: -5px')};\n  bottom: ${props => (props.position || 0) - 5}px;\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: ${props => 15 * props.dataBits}px;\n`;\n\nexport const Shape = ({ selected, dataBits }) => {\n  const height = dataBits * 15;\n\n  return (\n    <svg\n      viewBox={`0 0 30 ${height}`}\n      height={height}\n      width=\"30\"\n      fill=\"none\"\n      stroke={\n        selected ? 'var(--link-selected)' : 'var(--link-16-bit-color)'\n      }\n      strokeLinecap=\"butt\"\n      strokeWidth=\"2\"\n    >\n      <path\n        strokeWidth=\"4\"\n        d={`M0,${height} L15,${height - 15} L15,0`}\n      />\n      {[...new Array(dataBits)]\n        .map((_, index) => index + 1)\n        .map(index => {\n          const bitHeight = height - index * 15;\n\n          return (\n            <path\n              key={index}\n              d={`M15,${bitHeight} L30,${bitHeight}`}\n            />\n          );\n        })}\n    </svg>\n  );\n};\n\nconst SplitterWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n    configurations: { DATA_BITS },\n  } = model;\n\n  const dataBits = Number(DATA_BITS);\n  const outputPorts = Object.values(model.getOutputPorts());\n\n  return (\n    <Wrapper dataBits={dataBits}>\n      <PositionedPort name=\"in\" />\n      {outputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          position={(i + 1) * 15}\n        />\n      ))}\n      <Shape selected={selected} dataBits={dataBits} />\n    </Wrapper>\n  );\n};\n\nexport default SplitterWidget;\n","import React from 'react';\n\nimport { Shape } from './SplitterWidget';\n\nconst SplitterIcon = () => <Shape dataBits={2} />;\n\nexport default SplitterIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './SplitterIcon';\nimport model from './SplitterModel';\nimport widget from './SplitterWidget';\n\nexport default new Component({\n  type: 'Splitter',\n  name: 'Splitter',\n  description: 'Split wire with N bits into N 1 bit wires',\n  group: 'Wiring',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '2',\n      label: 'Input data bits',\n      options: [\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class SplitterModel extends BaseModel {\n  initialize(configurations) {\n    this.bits = Number(configurations.DATA_BITS);\n\n    this.addInputPort('in', { bits: this.bits });\n    for (let i = 0; i < this.bits; i += 1) {\n      this.addOutputPort(`out${i}`);\n    }\n  }\n\n  step(input) {\n    return Object.fromEntries(\n      input.in\n        .asArray(this.bits)\n        .map((bit, index, { length }) => [\n          `out${length - index - 1}`,\n          bit,\n        ]),\n    );\n  }\n\n  stepFloating(input) {\n    return this.step(input);\n  }\n\n  stepError(input) {\n    return this.step(input);\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst SEGMENTS = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'dp'];\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  left: ${props => props.position.horizontal}px;\n  ${props => `${props.side}: ${(props.icon ? 36 : 90) - 2}px;`}\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: ${props => (props.icon ? 23 : 75)}px;\n  height: ${props => (props.icon ? 36 : 90)}px;\n\n  background: ${props => `#ffffff${props.selected ? '80' : 'ff'}`};\n  box-shadow: 0 0 ${props => (props.isActive ? 15 : 0)}px\n    ${props => props.color};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  border-radius: 5px;\n`;\n\nexport const Shape = ({ segments, selected, icon }) => (\n  <svg\n    width={icon ? 18 : 50}\n    height={icon ? 36 : 90}\n    viewBox={icon ? '-7 0 60 90' : '0 0 50 90'}\n    fill=\"none\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    style={{\n      opacity: selected ? '80' : 'ff',\n      fillOpacity: selected ? '80' : 'ff',\n    }}\n  >\n    {/* A */}\n    <polyline\n      points=\"5 18 11 20 32 20 35 14 9 14\"\n      fill={segments.a}\n      data-testid=\"a\"\n    />\n    {/* B */}\n    <polyline\n      points=\"37 14 41 20 39 42 37 44 33 39 34 20\"\n      fill={segments.b}\n      data-testid=\"b\"\n    />\n    {/* C */}\n    <polyline\n      points=\"37 46 38 47 36 71 31 76 29 69 31 51\"\n      fill={segments.c}\n      data-testid=\"c\"\n    />\n    {/* D */}\n    <polyline\n      points=\"0 72 7 69 27 69 29 76 4 76\"\n      fill={segments.d}\n      data-testid=\"d\"\n    />\n    {/* E */}\n    <polyline\n      points=\"4 46 8 51 7 67 0 70 2 47\"\n      fill={segments.e}\n      data-testid=\"e\"\n    />\n    {/* F */}\n    <polyline\n      points=\"5 20 11 22 10 39 4 44 3 42\"\n      fill={segments.f}\n      data-testid=\"f\"\n    />\n    {/* G */}\n    <polyline\n      points=\"6 45 9 48 31 48 35 45 32 41 11 41\"\n      fill={segments.g}\n      data-testid=\"g\"\n    />\n    {/* DP */}\n    <circle\n      r=\"5\"\n      cx=\"45\"\n      cy=\"71\"\n      fill={segments.dp}\n      data-testid=\"dp\"\n    />\n  </svg>\n);\n\nconst LedWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper selected={selected}>\n      <Shape\n        selected={selected}\n        segments={SEGMENTS.reduce(\n          (prev, segment) => ({\n            ...prev,\n            [segment]: model.getColor(segment),\n          }),\n          {},\n        )}\n      />\n      {SEGMENTS.map(segment => (\n        <PositionedPort\n          key={segment}\n          name={segment}\n          position={model.getPositionForSegment(segment)}\n          side={model.getSideForSegment(segment)}\n        />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default LedWidget;\n","import React from 'react';\n\nimport { Wrapper, Shape } from './SsdWidget';\n\nconst SsdIcon = () => (\n  <Wrapper icon>\n    <Shape\n      icon\n      segments={{\n        a: '#ff0000',\n        b: '#ff0000',\n        c: '#ff0000',\n        d: '#ff0000',\n        e: '#ff0000',\n        f: '#ff0000',\n        g: '#ff0000',\n        dp: '#ff0000',\n      }}\n    />\n  </Wrapper>\n);\n\nexport default SsdIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './SsdIcon';\nimport model from './SsdModel';\nimport widget from './SsdWidget';\n\nexport default new Component({\n  type: 'Ssd',\n  name: 'SSD',\n  description: 'Seven segments display',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'ACTIVE_WHEN',\n      type: 'select',\n      default: 'HIGH',\n      label: 'Active when',\n      options: [\n        {\n          label: 'High',\n          value: 'HIGH',\n        },\n        {\n          label: 'Low',\n          value: 'LOW',\n        },\n      ],\n    },\n    {\n      name: 'ON_COLOR',\n      type: 'select',\n      default: '#ff0000',\n      label: 'On color',\n      options: [\n        {\n          label: 'Red',\n          value: '#ff0000',\n        },\n        {\n          label: 'Green',\n          value: '#00ff00',\n        },\n        {\n          label: 'Blue',\n          value: '#0000ff',\n        },\n        {\n          label: 'White',\n          value: '#ffffff',\n        },\n        {\n          label: 'Black',\n          value: '#000000',\n        },\n      ],\n    },\n    {\n      name: 'OFF_COLOR',\n      type: 'select',\n      default: '#00000040',\n      label: 'Off color',\n      options: [\n        {\n          label: 'Red',\n          value: '#ff000040',\n        },\n        {\n          label: 'Green',\n          value: '#00ff0040',\n        },\n        {\n          label: 'Blue',\n          value: '#0000ff40',\n        },\n        {\n          label: 'White',\n          value: '#ffffff40',\n        },\n        {\n          label: 'Black',\n          value: '#00000040',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class LedModel extends BaseModel {\n  initialize(configurations) {\n    this.activeWhen = configurations.ACTIVE_WHEN;\n    this.colors = {\n      on: configurations.ON_COLOR,\n      off: configurations.OFF_COLOR,\n    };\n\n    this.canRotate = false;\n\n    this.addInputPort('a', { floating: 0, error: 0, orientation: 3, offset: 0, length: 10 });\n    this.addInputPort('b', { floating: 0, error: 0, orientation: 3, offset: 0, length: 10 });\n    this.addInputPort('c', { floating: 0, error: 0, orientation: 1, offset: 0, length: 10 });\n    this.addInputPort('d', { floating: 0, error: 0, orientation: 1, offset: 0, length: 10 });\n    this.addInputPort('e', { floating: 0, error: 0, orientation: 1, offset: 0, length: 10 });\n    this.addInputPort('f', { floating: 0, error: 0, orientation: 3, offset: 0, length: 10 });\n    this.addInputPort('g', { floating: 0, error: 0, orientation: 3, offset: 0, length: 10 });\n    this.addInputPort('dp', { floating: 0, error: 0, orientation: 1, offset: 0, length: 10 });\n  }\n\n  getInput(segment) {\n    return this.getPort(segment).getValue() || [0];\n  }\n\n  isActive(segment) {\n    const input = this.getInput(segment)[0];\n\n    if (this.activeWhen === 'HIGH') {\n      if (input === 0) return false;\n      return true;\n    }\n\n    if (input === 0) return true;\n    return false;\n  }\n\n  getPositionForSegment(segment) {\n    const POSITIONS = {\n      a: {\n        vertical: 1,\n        horizontal: 3,\n      },\n      b: {\n        vertical: 1,\n        horizontal: 4,\n      },\n      c: {\n        vertical: 2,\n        horizontal: 3,\n      },\n      d: {\n        vertical: 2,\n        horizontal: 2,\n      },\n      e: {\n        vertical: 2,\n        horizontal: 1,\n      },\n      f: {\n        vertical: 1,\n        horizontal: 2,\n      },\n      g: {\n        vertical: 1,\n        horizontal: 1,\n      },\n      dp: {\n        vertical: 2,\n        horizontal: 4,\n      },\n    };\n\n    const position = POSITIONS[segment];\n\n    return {\n      horizontal: 8 + 15 * (position.horizontal - 1),\n      vertical: position.vertical === 1 ? -2 : 88,\n    };\n  }\n\n  getColor(segment) {\n    if (this.isActive(segment)) return this.colors.on;\n    return this.colors.off;\n  }\n\n  getSideForSegment(segment) {\n    const SIDES = {\n      a: {\n        side: 'bottom',\n      },\n      b: {\n        side: 'bottom',\n      },\n      c: {\n        side: 'top',\n      },\n      d: {\n        side: 'top',\n      },\n      e: {\n        side: 'top',\n      },\n      f: {\n        side: 'bottom',\n      },\n      g: {\n        side: 'bottom',\n      },\n      dp: {\n        side: 'top',\n      },\n    }\n\n    return SIDES[segment].side;\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => `${props.side}: ${props.position-2}px`};\n`;\n\nexport const Shape = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 60px;\n  height: 30px;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  border-radius: 20px;\n`;\n\nexport const Switch = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 55px;\n  height: 24px;\n  margin: 2px;\n\n  background: #848484;\n  border: 2px solid #313131;\n  border-radius: 15px;\n\n  color: ${props => (props.value === 1 ? 'black' : 'white')};\n  font-family: monospace;\n`;\n\nexport const SwitchValue = styled.div`\n  transform: ${props =>\n    props.isActive ? 'translateX(14px)' : 'translateX(-14px)'};\n\n  width: 15px;\n  height: 15px;\n\n  border-radius: 100%;\n  transition: 100ms linear;\n  background: black;\n`;\n\nconst SwitchWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  const orientation = model.orientation;\n  const outputSides = ['left', 'top', 'right', 'bottom'];\n  const positions = [60, 30, 60, 30];\n\n  return (\n    <Shape selected={selected}>\n      <Switch onClick={() => model.onClick()}>\n        <SwitchValue isActive={model.isActive()} />\n      </Switch>\n      <PositionedPort\n        name=\"out\"\n        side={outputSides[orientation]}\n        position={positions[orientation]}\n      />\n    </Shape>\n  );\n};\n\nexport default SwitchWidget;\n","import React from 'react';\n\nimport { Shape, Switch, SwitchValue } from './SwitchWidget';\n\nconst SwitchIcon = () => (\n  <Shape>\n    <Switch as=\"div\">\n      <SwitchValue value={0} />\n    </Switch>\n  </Shape>\n);\n\nexport default SwitchIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './SwitchIcon';\nimport model from './SwitchModel';\nimport widget from './SwitchWidget';\n\nexport default new Component({\n  type: 'Switch',\n  name: 'Switch',\n  description: 'On/off switch',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'ORIENTATION',\n      type: 'hidden',\n      default: 0,\n      label: 'Orientation of component',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class SwitchModel extends BaseModel {\n  initialize(configurations) {\n    this.canRotate = true;\n    this.orientation = configurations.ORIENTATION;\n\n    this.addOutputPort('out', { orientation: this.orientation, offset: 2, length: 8 });\n  }\n\n  onSimulationStart() {\n    this.emit({ out: 0 });\n  }\n\n  onClick(index) {\n    const mask = 0b1 << index;\n\n    this.emit({ out: this.getOutput() ^ mask });\n  }\n\n  getOutput() {\n    return this.getPort('out').getValue() || [0];\n  }\n\n  isActive() {\n    return this.getOutput()[0] === 1;\n  }\n}\n","import React, { Fragment } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PortExtensionConnector = styled.div`\n  position: absolute;\n  z-index: -1;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  height: 2px;\n  width: 15px;\n\n  top: ${props => props.position * 15 - 1}px;\n  left: -2px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `${props.edge}: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return `${props.side}: 100px`;\n    return `${props.side}: 103px`;\n  }};\n`;\n\nexport const Shape = ({ size = 90, portPositions = [], dWidth = 15, dHeight = 0, vbWidth = 27.781249, vbHeight = 23.812501, orientation = 0, translation = 0, portWidth = 0.5, portColor }) => (\n  <svg\n    height={size + dHeight}\n    width={size + dWidth}\n    viewBox={`0 0 ${vbWidth} ${vbHeight}`}\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g transform={`rotate(${orientation*90} 12 12) translate(${translation})`}>\n      <path\n        fill=\"none\"\n        style={{\n          transform:\n            'scale(0.284583, 0.284583) translate(-1px, -3px)',\n        }}\n        d=\"m 11.926664,1.1161165 c 5.50133,9.5176855 9.663162,25.9796645 9.66318,42.6065395 m 0,0 c 1.62e-4,18.330222 -4.950245,36.216284 -11.386335,45.249616\"\n      />\n      <g transform=\"scale(0.26458333)\">\n        <path\n          d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 37.875 c 23.748245,0 43.005576,-42.349157 43,-43 -0.0058,-0.677686 -19.251755,-43 -43,-43 h -0.271484 z\"\n          transform=\"translate(7)\"\n        />\n        <circle r=\"5.72056\" cy=\"45\" cx=\"94.27944\" />\n      </g>\n    </g>\n    <g\n      transform={` rotate(${orientation*90} 12 12) translate(${translation})`}\n      strokeWidth={portWidth}\n      stroke={portColor}\n    >\n      <g transform=\"scale(0.26458333)\">\n        {portPositions.includes(1) && (\n          <path d=\"M 18.4669,15.5 H 1.44549\" />\n        )}\n        {portPositions.includes(2) && (\n          <path d=\"M 20.1902,30.5 H 1.445\" />\n        )}\n        {portPositions.includes(3) && (\n          <path d=\"M 21.1563,45.5 H 1.445\" />\n        )}\n        {portPositions.includes(4) && (\n          <path d=\"M 19.8489,60.5 H 1.445\" />\n        )}\n        {portPositions.includes(5) && (\n          <path d=\"M 16.5984,75.5 H 1.445\" />\n        )}\n      </g>\n    </g>\n  </svg>\n);\n\nconst XnorWidget = props => {\n  const { model } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  const portWidth = inputPorts[0].getLineWidth();\n  const portColor = inputPorts[0].getLineColor();\n\n  const orientation = model.orientation;\n  const inputEdges = ['top', 'left', 'top', 'left'];\n  const inputSides = ['right', 'bottom', 'left', 'top'];\n  const outputSides = ['left', 'top', 'right', 'bottom'];\n\n  const dWidths = [15, 0]\n  const dHeights = [0, 15]\n  const vbWidths = [27.781249, 23.812501]\n  const vbHeights = [23.812501, 27.781249]\n  const translations = [0, 0, -4, -4]\n\n  return (\n    <Wrapper\n      selected={model.options.selected}\n      width={90 + dWidths[orientation % 2]}\n      height={90 + dHeights[orientation % 2]}\n    >\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n        offsetX={12}\n      />\n      {inputPorts.map((port, i) => (\n        <Fragment key={port.getName()}>\n          <PositionedPort\n            name={port.getName()}\n            position={portPositions[i]}\n            edge={inputEdges[orientation]}\n            side={inputSides[orientation]}\n          />\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\n            <PortExtensionConnector\n              selected={model.isSelected()}\n              position={portPositions[i]}\n              edge={inputEdges[orientation]}\n              side={inputSides[orientation]}\n            />\n          )}\n        </Fragment>\n      ))}\n      <PositionedPort\n        name=\"out\"\n        side={outputSides[orientation]}\n      />\n      <Shape\n        portPositions={portPositions}\n        dWidth={dWidths[orientation % 2]}\n        dHeight={dHeights[orientation % 2]}\n        vbWidth={vbWidths[orientation % 2]}\n        vbHeight={vbHeights[orientation % 2]}\n        orientation={orientation}\n        translation={translations[orientation]}\n        portWidth={portWidth}\n        portColor={portColor}\n      />\n    </Wrapper>\n  );\n};\n\nexport default XnorWidget;\n","import React from 'react';\n\nimport { Shape } from './XnorWidget';\n\nconst XnorIcon = () => <Shape size={30} />;\n\nexport default XnorIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './XnorIcon';\nimport model from './XnorModel';\nimport widget from './XnorWidget';\n\nexport default new Component({\n  type: 'Xnor',\n  name: 'Xnor',\n  description: 'Logic \"not exclusive or\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 5,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'MULTIPLE_INPUT_BEHAVIOR',\n      type: 'select',\n      default: 'ONE',\n      label: 'Multiple input behavior',\n      options: [\n        {\n          label: 'Detect when only one input is on',\n          value: 'ONE',\n        },\n        {\n          label: 'Detect when an even number of inputs are on',\n          value: 'EVEN',\n        },\n      ],\n    },\n    {\n      name: 'ORIENTATION',\n      type: 'hidden',\n      default: 0,\n      label: 'Orientation of component',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class XnorModel extends BaseModel {\n  initialize(configurations) {\n    this.behavior = configurations.MULTIPLE_INPUT_BEHAVIOR;\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    this.canRotate = true;\n    this.orientation = configurations.ORIENTATION;\n\n    const INPUT_PORTS_NUMBER = Number(\n      configurations.INPUT_PORTS_NUMBER,\n    );\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, { bits: this.dataBits, orientation: (this.orientation + 2) % 4, offset: 2, length: -5 });\n    }\n    this.addOutputPort('out', { bits: this.dataBits, orientation: this.orientation, offset: 2, length: 13 });\n  }\n\n  executeBit(bits) {\n    if (bits.some(bit => bit === 'x' || bit === 'e')) return 'e';\n    if (this.behavior === 'ONE') return this.executeOne(bits);\n    if (this.behavior === 'EVEN') return this.executeEven(bits);\n    return {};\n  }\n\n  executeOne(bits) {\n    return bits.filter(bit => bit === 1).length === 1 ? 0 : 1;\n  }\n\n  executeEven(bits) {\n    return bits.filter(bit => bit === 1).length % 2 ? 0 : 1;\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input)\n        .map(value => value.asArray(this.dataBits))\n        .transpose()\n        .map(this.executeBit.bind(this)),\n    };\n  }\n\n  stepFloating(input) {\n    return this.step(input);\n  }\n}\n","import React, { Fragment } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 90px;\n  height: 90px;\n\n  svg {\n  transition: 100ms linear;\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PortExtensionConnector = styled.div`\n  position: absolute;\n  z-index: -1;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  height: 2px;\n  width: 15px;\n\n  top: ${props => props.position * 15 - 1}px;\n  left: -2px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `${props.edge}: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return `${props.side}: 88px`;\n    return `${props.side}: 88px`;\n  }};\n`;\n\nexport const Shape = ({ size = 90, portPositions = [], orientation = 0, portWidth = 0.5, portColor }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 23.812499 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g\n      transform={`rotate(${orientation*90} 12 12)`}\n    >\n      <path\n        fill=\"none\"\n        style={{\n          transform:\n            'scale(0.284583, 0.284583) translate(-1px, -3px)',\n        }}\n        d=\"m 11.926664,1.1161165 c 5.50133,9.5176855 9.663162,25.9796645 9.66318,42.6065395 m 0,0 c 1.62e-4,18.330222 -4.950245,36.216284 -11.386335,45.249616\"\n      />\n      <g transform=\"translate(1.8657598)\">\n        <path\n          d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 37.875 c 23.748245,0 43.005576,-42.349157 43,-43 -0.0058,-0.677686 -19.251755,-43 -43,-43 h -0.271484 z\"\n          transform=\"scale(0.26458333)\"\n        />\n      </g>\n    </g>\n    <g\n      transform={`scale(0.26458333) rotate(${orientation*90} 45 45)`}\n      strokeWidth={portWidth}\n      stroke={portColor}\n    >\n      {portPositions.includes(1) && (\n        <path d=\"M 18.4669,15.5 H 1.44549\" />\n      )}\n      {portPositions.includes(2) && (\n        <path d=\"M 20.1902,30.5 H 1.445\" />\n      )}\n      {portPositions.includes(3) && (\n        <path d=\"M 21.1563,45.5 H 1.445\" />\n      )}\n      {portPositions.includes(4) && (\n        <path d=\"M 19.8489,60.5 H 1.445\" />\n      )}\n      {portPositions.includes(5) && (\n        <path d=\"M 16.5984,75.5 H 1.445\" />\n      )}\n    </g>\n  </svg>\n);\n\nconst XorWidget = props => {\n  const { model } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  const portWidth = inputPorts[0].getLineWidth();\n  const portColor = inputPorts[0].getLineColor();\n\n  const orientation = model.orientation;\n  const inputEdges = ['top', 'left', 'top', 'left'];\n  const inputSides = ['right', 'bottom', 'left', 'top'];\n  const outputSides = ['left', 'top', 'right', 'bottom'];\n\n  return (\n    <Wrapper selected={model.options.selected}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n        offsetX={12}\n      />\n      {inputPorts.map((port, i) => (\n        <Fragment key={port.getName()}>\n          <PositionedPort\n            name={port.getName()}\n            position={portPositions[i]}\n            edge={inputEdges[orientation]}\n            side={inputSides[orientation]}\n          />\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\n            <PortExtensionConnector\n              selected={model.isSelected()}\n              position={portPositions[i]}\n            />\n          )}\n        </Fragment>\n      ))}\n      <PositionedPort\n        name=\"out\"\n        side={outputSides[orientation]}\n      />\n      <Shape\n        portPositions={portPositions}\n        orientation={orientation}\n        portWidth={portWidth}\n        portColor={portColor}\n      />\n    </Wrapper>\n  );\n};\n\nexport default XorWidget;\n","import React from 'react';\n\nimport { Shape } from './XorWidget';\n\nconst XorIcon = () => <Shape size={30} />;\n\nexport default XorIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './XorIcon';\nimport model from './XorModel';\nimport widget from './XorWidget';\n\nexport default new Component({\n  type: 'Xor',\n  name: 'Xor',\n  description: 'Logic \"exclusive or\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 5,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'MULTIPLE_INPUT_BEHAVIOR',\n      type: 'select',\n      default: 'ONE',\n      label: 'Multiple input behavior',\n      options: [\n        {\n          label: 'Detect when only one input is on',\n          value: 'ONE',\n        },\n        {\n          label: 'Detect when an odd number of inputs are on',\n          value: 'ODD',\n        },\n      ],\n    },\n    {\n      name: 'ORIENTATION',\n      type: 'hidden',\n      default: 0,\n      label: 'Orientation of component',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class XorModel extends BaseModel {\n  initialize(configurations) {\n    this.behavior = configurations.MULTIPLE_INPUT_BEHAVIOR;\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    this.canRotate = true;\n    this.orientation = configurations.ORIENTATION;\n\n    const INPUT_PORTS_NUMBER = Number(\n      configurations.INPUT_PORTS_NUMBER,\n    );\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, { bits: this.dataBits, orientation: (this.orientation + 2) % 4, offset: 2, length: -5 });\n    }\n    this.addOutputPort('out', { bits: this.dataBits, orientation: this.orientation, offset: 2, length: 10 });\n  }\n\n  executeBit(bits) {\n    if (bits.some(bit => bit === 'x' || bit === 'e')) return 'e';\n    if (this.behavior === 'ONE') return this.executeOne(bits);\n    if (this.behavior === 'ODD') return this.executeOdd(bits);\n    return {};\n  }\n\n  executeOne(bits) {\n    return bits.filter(bit => bit === 1).length === 1 ? 1 : 0;\n  }\n\n  executeOdd(bits) {\n    return bits.filter(bit => bit === 1).length % 2 ? 1 : 0;\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input)\n        .map(value => value.asArray(this.dataBits))\n        .transpose()\n        .map(this.executeBit.bind(this)),\n    };\n  }\n\n  stepFloating(input) {\n    return this.step(input);\n  }\n}\n","import And from './And/AndRegister';\nimport Buffer from './Buffer/BufferRegister';\nimport Button from './Button/ButtonRegister';\nimport Buzzer from './Buzzer/BuzzerRegister';\nimport Clock from './Clock/ClockRegister';\nimport ControlledBuffer from './ControlledBuffer/ControlledBufferRegister';\nimport ControlledInverter from './ControlledInverter/ControlledInverterRegister';\nimport Counter from './Counter/CounterRegister';\nimport Demux from './Demux/DemuxRegister';\nimport Ground from './Ground/GroundRegister';\nimport Input from './Input/InputRegister';\nimport Joiner from './Joiner/JoinerRegister';\nimport Led from './Led/LedRegister';\nimport Mux from './Mux/MuxRegister';\nimport Nand from './Nand/NandRegister';\nimport Nor from './Nor/NorRegister';\nimport Not from './Not/NotRegister';\nimport Or from './Or/OrRegister';\nimport Output from './Output/OutputRegister';\nimport Power from './Power/PowerRegister';\nimport Ram from './Ram/RamRegister';\nimport Rom from './Rom/RomRegister';\nimport Splitter from './Splitter/SplitterRegister';\nimport Ssd from './Ssd/SsdRegister';\nimport Switch from './Switch/SwitchRegister';\nimport Xnor from './Xnor/XnorRegister';\nimport Xor from './Xor/XorRegister';\n\nconst components = [\n  Input,\n  Output,\n  Button,\n  Switch,\n  Clock,\n  Led,\n  Ssd,\n  Buzzer,\n  And,\n  Nand,\n  Or,\n  Nor,\n  Xor,\n  Xnor,\n  Buffer,\n  Not,\n  ControlledBuffer,\n  ControlledInverter,\n  Splitter,\n  Joiner,\n  Power,\n  Ground,\n  Mux,\n  Demux,\n  Ram,\n  Rom,\n  Counter,\n];\n\nexport default components;\n\nexport const groupedComponents = components.reduce(\n  (acc, component) => {\n    const group = acc.find(g => g.name === component.group);\n\n    if (group) group.components.push(component);\n    else acc.push({ name: component.group, components: [component] });\n\n    return acc;\n  },\n  [],\n);\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n\n  z-index: 2;\n`;\n\nconst Button = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'button',\n}))`\n  border: none;\n  border-radius: 100%;\n\n  background: orange;\n  box-shadow: inset 0 0 10px #ff8d00;\n\n  width: 60px;\n  height: 60px;\n  margin: 16px;\n\n  font-size: 2em;\n  line-height: 1em;\n  color: white;\n\n  transition: 0.5s ease-in-out;\n\n  &:disabled {\n    opacity: 10%;\n    cursor: not-allowed;\n    background: gray;\n    box-shadow: inset 0 0 10px black;\n  }\n`;\n\nconst ComponentSelectButton = ({ handleClick, disabled }) => (\n  <Container id=\"component-select-button\">\n    <Button\n      onClick={handleClick}\n      disabled={disabled}\n      data-for=\"tooltip\"\n      data-tip=\"Add component...\"\n      data-place=\"left\"\n    >\n      +\n    </Button>\n  </Container>\n);\n\nexport default ComponentSelectButton;\n","import React from 'react';\n\nconst ArrowLeft = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    viewBox=\"100 100 300 300\"\n  >\n    <polygon points=\"352,128.4 319.7,96 160,256 160,256 160,256 319.7,416 352,383.6 224.7,256 \" />\n  </svg>\n);\n\nexport default ArrowLeft;\n","import React from 'react';\n\nconst Chevron = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 48 48\">\n    <polygon points=\"5,30.9 8.1,34 24,18.1 39.9,34 43,30.9 24,12\" />\n  </svg>\n);\n\nexport default Chevron;\n","import React from 'react';\n\nconst Chevrons = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <polyline points=\"17 11 12 6 7 11\" />\n    <polyline points=\"17 18 12 13 7 18\" />\n  </svg>\n);\n\nexport default Chevrons;\n","import React from 'react';\n\nconst Close = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    viewBox=\"0 0 60.963 60.842\"\n  >\n    <path d=\"M59.595,52.861L37.094,30.359L59.473,7.98c1.825-1.826,1.825-4.786,0-6.611  c-1.826-1.825-4.785-1.825-6.611,0L30.483,23.748L8.105,1.369c-1.826-1.825-4.785-1.825-6.611,0c-1.826,1.826-1.826,4.786,0,6.611  l22.378,22.379L1.369,52.861c-1.826,1.826-1.826,4.785,0,6.611c0.913,0.913,2.109,1.369,3.306,1.369s2.393-0.456,3.306-1.369  l22.502-22.502l22.501,22.502c0.913,0.913,2.109,1.369,3.306,1.369s2.393-0.456,3.306-1.369  C61.42,57.647,61.42,54.687,59.595,52.861z\" />\n  </svg>\n);\n\nexport default Close;\n","import React from 'react';\n\nconst Copy = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\" />\n    <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\" />\n  </svg>\n);\n\nexport default Copy;\n","import React from 'react';\n\nconst Cut = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"6\" cy=\"6\" r=\"3\" />\n    <circle cx=\"6\" cy=\"18\" r=\"3\" />\n    <line x1=\"20\" y1=\"4\" x2=\"8.12\" y2=\"15.88\" />\n    <line x1=\"14.47\" y1=\"14.48\" x2=\"20\" y2=\"20\" />\n    <line x1=\"8.12\" y1=\"8.12\" x2=\"12\" y2=\"12\" />\n  </svg>\n);\n\nexport default Cut;\n","import React from 'react';\n\nconst Delete = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <polyline points=\"3 6 5 6 21 6\" />\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" />\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />\n  </svg>\n);\n\nexport default Delete;\n","import React from 'react';\n\nconst Duplicate = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={(size * 18) / 24}\n    viewBox=\"0 0 24 18\"\n    fill=\"none\"\n    stroke=\"none\"\n    strokeWidth=\"2\"\n  >\n    <g transform=\"translate(-678.000000, -2727.000000)\">\n      <g transform=\"translate(100.000000, 2626.000000)\">\n        <g transform=\"translate(578.000000, 98.000000)\">\n          <g transform=\"translate(0.000000, 0.000000)\">\n            <polygon points=\"0 0 24 0 24 24 0 24\" />\n            <path\n              d=\"M15,8 C14.45,8 14,8.45 14,9 L14,11 L12,11 C11.45,11 11,11.45 11,12 C11,12.55 11.45,13 12,13 L14,13 L14,15 C14,15.55 14.45,16 15,16 C15.55,16 16,15.55 16,15 L16,13 L18,13 C18.55,13 19,12.55 19,12 C19,11.45 18.55,11 18,11 L16,11 L16,9 C16,8.45 15.55,8 15,8 Z M2,12 C2,9.42 3.4,7.17 5.48,5.96 C5.8,5.77 6.01,5.45 6.01,5.08 C6.01,4.31 5.17,3.83 4.5,4.22 C1.82,5.78 0,8.68 0,12 C0,15.32 1.82,18.22 4.5,19.78 C5.17,20.17 6.01,19.69 6.01,18.92 C6.01,18.55 5.8,18.23 5.48,18.04 C3.4,16.83 2,14.58 2,12 Z M15,3 C10.04,3 6,7.04 6,12 C6,16.96 10.04,21 15,21 C19.96,21 24,16.96 24,12 C24,7.04 19.96,3 15,3 Z M15,19 C11.14,19 8,15.86 8,12 C8,8.14 11.14,5 15,5 C18.86,5 22,8.14 22,12 C22,15.86 18.86,19 15,19 Z\"\n              fill={color}\n            />\n          </g>\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Duplicate;\n","import React from 'react';\n\nconst Edit = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" />\n    <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\" />\n  </svg>\n);\n\nexport default Edit;\n","import React from 'react';\n\nconst Paste = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    viewBox=\"0 0 512.001 512.001\"\n  >\n    <g>\n      <g>\n        <g>\n          <path\n            d=\"M481,371c11.046,0,20-8.954,20-20v-92c0-33.084-26.916-60-60-60h-39v-79c0-44.112-35.888-80-80-80h-47.533\n\t\t\t\tc-7.739-23.749-29.864-40-55.16-40h-25.614c-25.296,0-47.421,16.251-55.16,40H91c-44.112,0-80,35.888-80,80v312\n\t\t\t\tc0,44.112,35.888,80,80,80h88c11.046,0,20-8.954,20-20c0-11.046-8.954-20-20-20H91c-22.056,0-40-17.944-40-40V120\n\t\t\t\tc0-22.056,17.944-40,40-40h2v59c0,11.046,8.954,20,20,20h189c11.046,0,20-8.954,20-20V80c22.056,0,40,17.944,40,40v79h-65.007\n\t\t\t\tC263.914,199,237,225.913,237,258.993v193.015c0,33.08,26.916,59.993,60.01,59.993L441,511.926c33.084,0,60-26.913,60-59.992\n\t\t\t\tc0-11.046-8.954-20-20-20c-11.046,0-20,8.954-20,20c0,11.024-8.972,19.992-20.01,19.992L297,472c-11.028,0-20-8.969-20-19.993\n\t\t\t\tV258.993c0-11.024,8.969-19.993,19.993-19.993H441c11.028,0,20,8.972,20,20v92C461,362.046,469.955,371,481,371z M282,119H133V80\n\t\t\t\th21c9.177,0,17.177-6.246,19.403-15.149l2.798-11.194C178.211,45.616,185.404,40,193.693,40h25.614\n\t\t\t\tc8.289,0,15.481,5.616,17.492,13.657l2.798,11.194C241.823,73.754,249.823,80,259,80h23V119z\"\n          />\n          <path\n            d=\"M401,279h-64c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h64c11.046,0,20-8.954,20-20\n\t\t\t\tC421,287.954,412.047,279,401,279z\"\n          />\n          <path\n            d=\"M401,349h-64c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h64c11.046,0,20-8.954,20-20\n\t\t\t\tC421,357.954,412.047,349,401,349z\"\n          />\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Paste;\n","import React from 'react';\n\nconst Pause = ({ size = 16, color = '#ffb100' }) => (\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 512 512\">\n    <path d=\"M395,512a73.14,73.14,0,0,1-73.14-73.14V73.14a73.14,73.14,0,1,1,146.29,0V438.86A73.14,73.14,0,0,1,395,512Z\" />\n    <path d=\"M117,512a73.14,73.14,0,0,1-73.14-73.14V73.14a73.14,73.14,0,1,1,146.29,0V438.86A73.14,73.14,0,0,1,117,512Z\" />\n  </svg>\n);\n\nexport default Pause;\n","import React from 'react';\n\nconst Play = ({ size = 16, color = '#008000' }) => (\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 512 512\">\n    <path d=\"M60.54,512c-17.06,0-30.43-13.86-30.43-31.56V31.55C30.12,13.86,43.48,0,60.55,0A32.94,32.94,0,0,1,77,4.52L465.7,229c10.13,5.85,16.18,16,16.18,27s-6,21.2-16.18,27L77,507.48A32.92,32.92,0,0,1,60.55,512Z\" />\n  </svg>\n);\n\nexport default Play;\n","import React from 'react';\n\nconst Redo = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} viewBox=\"0 0 512 512\" fill={color}>\n    <path d=\"m431 481c0 11.046-8.954 20-20 20h-66c-11.046 0-20-8.954-20-20s8.954-20 20-20h66c11.046 0 20 8.954 20 20zm63.358-352.994-112.284-111.215c-7.848-7.773-20.511-7.713-28.284.135s-7.712 20.511.135 28.284l106.808 105.79h-285.733c-96.495 0-175 78.505-175 175s78.505 175 175 175h69c11.046 0 20-8.954 20-20s-8.954-20-20-20h-69c-74.439 0-135-60.561-135-135s60.561-135 135-135h284.836l-105.037 105.917c-7.778 7.843-7.725 20.506.118 28.284 3.9 3.868 8.992 5.799 14.083 5.799 5.146 0 10.292-1.975 14.202-5.917l111.225-112.157c11.332-11.332 17.573-26.4 17.573-42.426s-6.241-31.094-17.642-42.494z\" />\n  </svg>\n);\n\nexport default Redo;\n","import React from 'react';\n\nconst Settings = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"3\" />\n    <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\" />\n  </svg>\n);\n\nexport default Settings;\n","import React from 'react';\n\nconst Stop = ({ size = 16, color = '#c53838' }) => (\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 512 512\">\n    <path d=\"M 65.249771,0 A 65.248738,65.376306 0 0 0 0.413662,58.057582 h -0.18732 v 1.884685 A 65.248738,65.376306 0 0 0 0,65.377342 65.248738,65.376306 0 0 0 0.226342,70.796781 V 441.18757 A 65.248738,65.376306 0 0 0 0,446.62268 a 65.248738,65.376306 0 0 0 0.226342,5.41161 v 2.88566 H 0.530738 A 65.248738,65.376306 0 0 0 65.249771,512 a 65.248738,65.376306 0 0 0 2.44297,-0.0468 H 444.31507 a 65.248738,65.376306 0 0 0 2.43514,0.0468 65.248738,65.376306 0 0 0 2.44297,-0.0468 h 0.56977 v -0.024 a 65.248738,65.376306 0 0 0 61.70628,-57.00966 h 0.0312 v -0.22662 a 65.248738,65.376306 0 0 0 0.49952,-8.07049 65.248738,65.376306 0 0 0 -0.49952,-8.01579 V 67.011775 a 65.248738,65.376306 0 0 0 0.0234,-1.634433 65.248738,65.376306 0 0 0 -0.0234,-1.681351 v -5.638409 h -0.38247 A 65.248738,65.376306 0 0 0 456.2645,0.77420532 V 0 H 446.40678 446.2741 65.374651 Z\" />\n  </svg>\n);\n\nexport default Stop;\n","import React from 'react';\n\nconst Undo = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} viewBox=\"0 0 512 512\" fill={color}>\n    <path d=\"m 81,481 c 0,11.046 8.954,20 20,20 h 66 c 11.046,0 20,-8.954 20,-20 0,-11.046 -8.954,-20 -20,-20 h -66 c -11.046,0 -20,8.954 -20,20 z M 17.642,128.006 129.926,16.791 c 7.848,-7.773 20.511,-7.713 28.284,0.135 7.773,7.848 7.712,20.511 -0.135,28.284 L 51.267,151 H 337 c 96.495,0 175,78.505 175,175 0,96.495 -78.505,175 -175,175 h -69 c -11.046,0 -20,-8.954 -20,-20 0,-11.046 8.954,-20 20,-20 h 69 c 74.439,0 135,-60.561 135,-135 0,-74.439 -60.561,-135 -135,-135 H 52.164 l 105.037,105.917 c 7.778,7.843 7.725,20.506 -0.118,28.284 -3.9,3.868 -8.992,5.799 -14.083,5.799 -5.146,0 -10.292,-1.975 -14.202,-5.917 L 17.573,212.926 C 6.241,201.594 0,186.526 0,170.5 0,154.474 6.241,139.406 17.642,128.006 Z\" />\n  </svg>\n);\n\nexport default Undo;\n","import React from 'react';\n\nconst ZoomIn = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\n    <line x1=\"11\" y1=\"8\" x2=\"11\" y2=\"14\" />\n    <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\n  </svg>\n);\n\nexport default ZoomIn;\n","import React from 'react';\n\nconst ZoomOut = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\n    <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\n  </svg>\n);\n\nexport default ZoomOut;\n","import React from 'react';\n\nconst RotateLeft = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    viewBox=\"0 0 512 512\"\n  >\n    <path\n      d=\"M 437.02,75.112 C 388.667,26.76 324.38,0.133 256,0.133 214.782,0.133 173.811,10.166 137.515,29.149 116.586,40.094 97.191,54.029 80,70.302 V 0.133 H 40 v 140 h 140 v -40 h -73.338 c 39.887,-38.075 93.411,-60 149.338,-60 119.102,0 216,96.896 216,215.999 -10e-4,6.632 -0.304,13.317 -0.901,19.87 l 39.836,3.628 c 0.706,-7.753 1.064,-15.658 1.065,-23.495 l -20,-0.002 h 20 C 512,187.752 485.371,123.466 437.02,75.112 Z\"\n      id=\"path2\" /><polygon\n      points=\"512,256.132 512,256.133 \"\n      id=\"polygon4\" />\n    <path\n      d=\"m 87.724,391.566 -31.145,25.101 c 9.048,11.226 19.114,21.762 29.92,31.315 l 26.494,-29.967 c -9.126,-8.069 -17.628,-16.966 -25.269,-26.449 z\"\n      id=\"path12\" />\n    <path\n      d=\"m 52.219,327.943 -37.727,13.296 c 4.794,13.601 10.796,26.896 17.842,39.517 L 67.26,361.259 C 61.319,350.617 56.259,339.407 52.219,327.943 Z\"\n      id=\"path18\" />\n    <path\n      d=\"M 40,256.133 H 0 c 0,14.47 1.22,28.986 3.624,43.145 L 43.06,292.58 C 41.029,280.627 40,268.365 40,256.133 Z\"\n      id=\"path24\" />\n    <path\n      d=\"m 142.33,439.841 -21.082,33.993 c 12.271,7.611 25.265,14.215 38.618,19.629 l 15.029,-37.069 C 163.637,451.831 152.68,446.26 142.33,439.841 Z\"\n      id=\"path30\" />\n    <path\n      d=\"m 464.717,311.981 c -3.137,11.748 -7.307,23.311 -12.395,34.365 l 36.335,16.727 c 6.037,-13.115 10.985,-26.835 14.706,-40.777 z\"\n      id=\"path36\" />\n    <path\n      d=\"m 383.554,430.468 c -9.833,7.208 -20.335,13.616 -31.213,19.047 l 17.867,35.788 c 12.896,-6.438 25.342,-14.033 36.994,-22.574 z\"\n      id=\"path42\" />\n    <path\n      d=\"m 434.282,378.123 c -6.883,10.035 -14.672,19.56 -23.152,28.311 l 28.725,27.837 c 10.041,-10.361 19.265,-21.642 27.415,-33.527 z\"\n      id=\"path48\" />\n    <path\n      d=\"m 318.37,462.995 c -11.632,3.503 -23.662,6.03 -35.756,7.515 l 4.873,39.702 c 14.343,-1.761 28.612,-4.76 42.412,-8.914 z\"\n      id=\"path54\" />\n    <path\n      d=\"m 209.794,467.185 -8.514,39.083 c 14.054,3.062 28.505,4.946 42.953,5.6 l 1.809,-39.959 c -12.198,-0.552 -24.394,-2.143 -36.248,-4.724 z\"\n      id=\"path60\" />\n  </svg>\n);\n\nexport default RotateLeft;\n","import React from 'react';\n\nconst RotateRight = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    viewBox=\"0 0 512 512\"\n  >\n    <path\n      d=\"M 74.98,75.112 C 123.333,26.76 187.62,0.133 256,0.133 c 41.218,0 82.189,10.033 118.485,29.016 20.929,10.945 40.324,24.88 57.515,41.153 V 0.133 h 40 v 140 H 332 v -40 h 73.338 c -39.887,-38.075 -93.411,-60 -149.338,-60 -119.102,0 -216,96.896 -216,215.999 10e-4,6.632 0.304,13.317 0.901,19.87 L 1.065,279.63 C 0.359,271.877 10e-4,263.972 0,256.135 l 20,-0.002 H 0 C 0,187.752 26.629,123.466 74.98,75.112 Z\"\n      id=\"path2\" /><polygon\n      points=\"512,256.133 512,256.132 \"\n      id=\"polygon4\"\n      transform=\"matrix(-1,0,0,1,512,0)\" />\n    <path\n      d=\"m 424.276,391.566 31.145,25.101 c -9.048,11.226 -19.114,21.762 -29.92,31.315 l -26.494,-29.967 c 9.126,-8.069 17.628,-16.966 25.269,-26.449 z\"\n      id=\"path12\" />\n    <path\n      d=\"m 459.781,327.943 37.727,13.296 c -4.794,13.601 -10.796,26.896 -17.842,39.517 L 444.74,361.259 c 5.941,-10.642 11.001,-21.852 15.041,-33.316 z\"\n      id=\"path18\" />\n    <path\n      d=\"m 472,256.133 h 40 c 0,14.47 -1.22,28.986 -3.624,43.145 L 468.94,292.58 c 2.031,-11.953 3.06,-24.215 3.06,-36.447 z\"\n      id=\"path24\" />\n    <path\n      d=\"m 369.67,439.841 21.082,33.993 c -12.271,7.611 -25.265,14.215 -38.618,19.629 l -15.029,-37.069 c 11.258,-4.563 22.215,-10.134 32.565,-16.553 z\"\n      id=\"path30\" />\n    <path\n      d=\"m 47.283,311.981 c 3.137,11.748 7.307,23.311 12.395,34.365 L 23.343,363.073 C 17.306,349.958 12.358,336.238 8.637,322.296 Z\"\n      id=\"path36\" />\n    <path\n      d=\"m 128.446,430.468 c 9.833,7.208 20.335,13.616 31.213,19.047 l -17.867,35.788 C 128.896,478.865 116.45,471.27 104.798,462.729 Z\"\n      id=\"path42\" />\n    <path\n      d=\"m 77.718,378.123 c 6.883,10.035 14.672,19.56 23.152,28.311 L 72.145,434.271 C 62.104,423.91 52.88,412.629 44.73,400.744 Z\"\n      id=\"path48\" />\n    <path\n      d=\"m 193.63,462.995 c 11.632,3.503 23.662,6.03 35.756,7.515 l -4.873,39.702 c -14.343,-1.761 -28.612,-4.76 -42.412,-8.914 z\"\n      id=\"path54\" />\n    <path\n      d=\"m 302.206,467.185 8.514,39.083 c -14.054,3.062 -28.505,4.946 -42.953,5.6 l -1.809,-39.959 c 12.198,-0.552 24.394,-2.143 36.248,-4.724 z\"\n      id=\"path60\" />\n  </svg>\n);\n\nexport default RotateRight;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nimport { Play, Pause, Stop } from '../Icons';\n\nconst Container = styled.div`\n  position: absolute;\n  bottom: 16px;\n  left: 50%;\n  transform: translate(-50%, 0);\n\n  background: rgb(224, 224, 224);\n  background: linear-gradient(\n    0deg,\n    rgba(224, 224, 224, 1) 0%,\n    rgba(255, 255, 255, 1) 100%\n  );\n\n  border: 1px solid gray;\n  border-radius: 16px;\n\n  z-index: 2;\n\n  & > button {\n    border-right: 1px solid gray;\n    &:last-child {\n      border-right: none;\n    }\n  }\n`;\n\nconst Button = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'button',\n}))`\n  background: none;\n  border: none;\n\n  font-size: 1.2em;\n\n  min-width: 75px;\n  min-height: 60px;\n\n  &:disabled {\n    & > svg {\n      fill: #bfbfbf;\n    }\n  }\n`;\n\nconst SimulationControlButtons = ({\n  state,\n  handleClickStart,\n  handleClickPause,\n  handleClickStop,\n}) => (\n  <Container id=\"simulation-control-buttons\">\n    <Button\n      onClick={handleClickStart}\n      disabled={state === 'started'}\n      data-for=\"tooltip\"\n      data-tip=\"Start simulation\"\n    >\n      <Play />\n    </Button>\n    <Button\n      onClick={handleClickPause}\n      disabled={state === 'paused' || state === 'stopped'}\n      data-for=\"tooltip\"\n      data-tip=\"Pause simulation\"\n    >\n      <Pause />\n    </Button>\n    <Button\n      onClick={handleClickStop}\n      disabled={state === 'stopped'}\n      data-for=\"tooltip\"\n      data-tip=\"Stop simulation\"\n    >\n      <Stop />\n    </Button>\n  </Container>\n);\n\nexport default SimulationControlButtons;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  z-index: 3;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100vw;\n  height: 100vh;\n\n  background: rgba(0, 0, 0, 0.75);\n`;\n\nconst Window = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  width: 60vw;\n  height: 80vh;\n\n  max-width: 600px;\n  max-height: 800px;\n\n  background: white;\n\n  border: 1px solid black;\n  border-radius: 25px;\n\n  padding: 16px;\n\n  z-index: 4;\n`;\n\nconst Modal = ({ children }) => (\n  <Overlay>\n    <Window>{children}</Window>\n  </Overlay>\n);\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const Header = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-content: space-between;\n\n  height: 50px;\n`;\n\nexport const Title = styled.h1`\n  flex-grow: 1;\n  font-size: 1.5em;\n\n  margin: 0;\n\n  align-self: center;\n  text-align: center;\n`;\n\nexport const Subtitle = styled.h2`\n  flex-grow: 1;\n  font-size: 1.2em;\n\n  margin: 0;\n\n  align-self: center;\n  text-align: center;\n`;\n\nexport const Content = styled.div`\n  margin-top: 32px;\n  flex: 1;\n`;\n\nexport const IconButton = styled.button`\n  position: absolute;\n\n  flex-shrink: 0;\n\n  border: 1px solid gray;\n  border-radius: 25px;\n  width: 50px;\n  height: 50px;\n\n  ${props => {\n    if (props.left) return 'left: 0;';\n    return 'right: 0;';\n  }}\n\n  background: none;\n\n  :hover {\n    background: rgba(0, 0, 0, 0.05);\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n\n  label {\n    font-size: 0.8em;\n    font-weight: bold;\n    text-transform: uppercase;\n    color: ${props => (props.error ? '#710606' : 'inherit')};\n\n    background: #eee;\n    border: 1px solid ${props => (props.error ? '#c80a0a' : 'gray')};\n    border-radius: 8px;\n\n    position: relative;\n    top: 0.8em;\n\n    width: max-content;\n    margin-left: 15px;\n    padding: 0 8px;\n  }\n\n  select,\n  input {\n    background: white;\n    border: 1px solid ${props => (props.error ? '#c80a0a' : 'gray')};\n    border-radius: 25px;\n\n    font-size: 1.2em;\n\n    padding: 10px 0 5px 16px;\n  }\n\n  input[type='file'] {\n    font-size: 1em;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = ({\n  // Formik\n  form,\n  field,\n  // General\n  name,\n  label,\n  componentType,\n  type,\n  innerRef,\n  // Select\n  options = [],\n  // Number\n  step,\n  min,\n  max,\n}) => {\n  const handleBinaryLoad = event => {\n    const {\n      target: { files },\n    } = event;\n\n    if (files.length !== 1) return;\n\n    const handleError = () =>\n      this.showSnackbar(\n        `Error loading binary file:\\n${files[0].name}`,\n      );\n\n    const fr = new FileReader();\n    fr.onerror = handleError;\n    fr.onload = e => {\n      try {\n        const file = e.target.result;\n        form.setFieldValue(field.name, file);\n      } catch (exception) {\n        handleError();\n      }\n    };\n    fr.readAsText(files.item(0));\n  };\n\n  switch (type) {\n    case 'select':\n      return (\n        <>\n          <label htmlFor={name}>{label}</label>\n          <select id={name} ref={innerRef} {...field}>\n            {options.map(option => (\n              <option value={option.value} key={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n        </>\n      );\n    case 'number':\n      return (\n        <>\n          <label htmlFor={name}>{label}</label>\n          <input\n            id={name}\n            ref={innerRef}\n            {...field}\n            step={step}\n            min={min}\n            max={max}\n            type=\"number\"\n          />\n        </>\n      );\n    case 'text':\n      return (\n        <>\n          <label htmlFor={name}>{label}</label>\n          <input id={name} ref={innerRef} {...field} type=\"text\" />\n        </>\n      );\n    case 'binary':\n      return (\n        <>\n          <label htmlFor={name}>{label}</label>\n          <input\n            id={name}\n            accept=\".lgbin\"\n            type=\"file\"\n            onChange={handleBinaryLoad}\n          />\n        </>\n      );\n    case 'hidden':\n      return (\n        <>\n        </>\n      );\n    default:\n      throw new Error(\n        `[logossim] Invalid configuration type for ${componentType}: ${type}`,\n      );\n  }\n};\n\nconst ErrorMessage = styled.div`\n  font-size: 0.8em;\n  color: #c80a0a;\n\n  background: white;\n\n  position: relative;\n  bottom: 0.7em;\n\n  width: max-content;\n  padding: 0 8px;\n  margin: -15px auto auto auto;\n  transform: translateY(15px);\n`;\n\nconst ComponentConfigurationInput = props => {\n  const {\n    field: { name },\n    form: { errors },\n  } = props;\n\n  const error = errors[name];\n\n  return (\n    <Container error={error}>\n      <Input {...props} />\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n    </Container>\n  );\n};\n\nexport default ComponentConfigurationInput;\n","import React from 'react';\nimport Tooltip from 'react-tooltip';\n\nimport ComponentContext from '@logossim/core/ComponentContext';\nimport DiagramContext from '@logossim/core/Diagram/DiagramContext';\n\nimport styled from 'styled-components';\n\nconst diagramEngineStub = {\n  getEngine: () => ({\n    registerListener: () => {},\n    getCanvas: () => {},\n    getPortCoords: () => ({\n      getWidth: () => {},\n      getHeight: () => {},\n      getTopLeft: () => {},\n    }),\n    getModel: () => ({ isLocked: () => false }),\n  }),\n};\n\nconst getTooltip = (error, disabled) => {\n  if (disabled) return '';\n  if (error) return 'Check form errors';\n  return 'Drag me!';\n};\n\nconst ErrorWidget = styled.div`\n  border: 1px dashed var(--value-error);\n  border-radius: 5px;\n  width: 30px;\n  height: 30px;\n`;\n\nconst DraggableComponent = ({\n  component: { type, Widget, Model },\n  configurations,\n  handleClose,\n  error,\n  disabled,\n}) => {\n  const model = new Model(configurations, type);\n\n  return (\n    <div\n      draggable={!error && !disabled}\n      onDragStart={event => {\n        event.dataTransfer.setDragImage(\n          event.currentTarget.children[0],\n          0,\n          0,\n        );\n\n        event.dataTransfer.setData(\n          'component',\n          JSON.stringify({\n            type,\n            configurations,\n          }),\n        );\n\n        requestAnimationFrame(() => {\n          Tooltip.hide();\n          handleClose();\n        });\n      }}\n      data-for=\"tooltip\"\n      data-tip={getTooltip(error, disabled)}\n      data-place=\"bottom\"\n    >\n      {error ? (\n        <ErrorWidget />\n      ) : (\n        <DiagramContext.Provider value={diagramEngineStub}>\n          <ComponentContext.Provider value={model}>\n            <Widget model={model} />\n          </ComponentContext.Provider>\n        </DiagramContext.Provider>\n      )}\n    </div>\n  );\n};\n\nexport default DraggableComponent;\n","import React, { useEffect, useRef } from 'react';\nimport Tooltip from 'react-tooltip';\n\nimport { Formik, Form as BaseForm, Field } from 'formik';\nimport styled from 'styled-components';\n\nimport { ArrowLeft, Close } from '../Icons';\nimport {\n  Header,\n  Title,\n  Content,\n  IconButton,\n} from '../Modal/ModalContentLayout';\nimport ComponentConfigurationInput from './ComponentConfigurationInput';\nimport DraggableComponent from './DraggableComponent';\n\nconst DragArea = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 200px;\n  margin-bottom: 32px;\n\n  box-shadow: ${props =>\n    `inset 0 0 20px rgba(${props.error ? 255 : 0}, 0, 0, 0.3)`};\n\n  background-image: ${props => `linear-gradient(\n      to right,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.1) 1px,\n      transparent 1px,\n      transparent 15px,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 15px,\n      transparent 16px,\n      transparent 30px,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 30px,\n      transparent 31px\n    ),\n    linear-gradient(\n      to bottom,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.1) 1px,\n      transparent 1px,\n      transparent 15px,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 15px,\n      transparent 16px,\n      transparent 30px,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 30px,\n      transparent 31px\n    )`};\n  background-size: 45px 45px;\n  border-radius: 25px;\n\n  overflow: hidden;\n`;\n\nconst FormScroll = styled.div`\n  max-height: calc(min(800px, 80vh) - 400px);\n  overflow-y: auto;\n`;\n\nconst Form = styled(BaseForm)`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  margin-top: auto;\n`;\n\nconst Hint = styled.span`\n  font-size: 0.8em;\n  font-style: italic;\n  align-self: center;\n  text-align: right;\n  margin-right: 10px;\n`;\n\nconst SubmitButton = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'submit',\n}))`\n  border: none;\n  border-radius: 5px;\n  background: #07d26b;\n\n  color: white;\n  font-size: 1.2em;\n\n  width: 100%;\n  padding: 5px 20px;\n  margin: 5px;\n\n  :disabled {\n    background: #d22307;\n    cursor: not-allowed;\n  }\n`;\n\nconst getInitialValues = component =>\n  Object.fromEntries(\n    component.configurations.map(configuration => [\n      configuration.name,\n      configuration.default,\n    ]),\n  );\n\nconst getFormSubmitLabel = (isValid, editMode) => {\n  if (!isValid) return 'Check form errors';\n  if (editMode) return 'Save component';\n  return 'Add to circuit';\n};\n\nconst ComponentConfiguration = ({\n  editMode,\n  component,\n  handleClose,\n  handleBack,\n  handleSubmit,\n}) => {\n  const firstInputRef = useRef();\n  const buttonRef = useRef();\n\n  useEffect(() => {\n    if (firstInputRef.current) {\n      firstInputRef.current.focus();\n    } else {\n      buttonRef.current.focus();\n    }\n  });\n\n  useEffect(Tooltip.rebuild);\n\n  return (\n    <>\n      <Header>\n        {!editMode && (\n          <IconButton\n            left\n            onClick={handleBack}\n            data-for=\"tooltip\"\n            data-tip=\"Go back...\"\n            data-place=\"right\"\n          >\n            <ArrowLeft />\n          </IconButton>\n        )}\n        <Title>{editMode ? 'Edit' : 'Configure'} component</Title>\n        <IconButton\n          right\n          onClick={handleClose}\n          data-for=\"tooltip\"\n          data-tip=\"Close\"\n          data-place=\"left\"\n        >\n          <Close />\n        </IconButton>\n      </Header>\n\n      <Content>\n        <Formik\n          initialValues={getInitialValues(component)}\n          onSubmit={values => {\n            handleSubmit(null, {\n              type: component.type,\n              configurations: values,\n            });\n            handleClose();\n          }}\n        >\n          {({ values, isValid }) => (\n            <Form>\n              <DragArea error={!isValid}>\n                <DraggableComponent\n                  component={component}\n                  configurations={values}\n                  handleClose={handleClose}\n                  error={!isValid}\n                  disabled={editMode}\n                />\n              </DragArea>\n\n              <FormScroll autoComplete=\"off\">\n                {component.configurations.map(\n                  (configuration, index) => (\n                    <Field\n                      key={configuration.name}\n                      component={ComponentConfigurationInput}\n                      innerRef={index === 0 ? firstInputRef : null}\n                      {...configuration}\n                      validate={\n                        configuration.validate\n                          ? value =>\n                              configuration.validate(value, values)\n                          : null\n                      }\n                    />\n                  ),\n                )}\n              </FormScroll>\n\n              <Footer>\n                {!editMode && (\n                  <Hint>(hint: you can also drag the component)</Hint>\n                )}\n                <SubmitButton disabled={!isValid} ref={buttonRef}>\n                  {getFormSubmitLabel(isValid, editMode)}\n                </SubmitButton>\n              </Footer>\n            </Form>\n          )}\n        </Formik>\n      </Content>\n    </>\n  );\n};\n\nexport default ComponentConfiguration;\n","import React, { useEffect, useCallback } from 'react';\n\nimport Modal from '../Modal/Modal';\nimport ComponentConfiguration from './ComponentConfiguration';\n\nconst closeOnEsc = ({ code }, handleClose) => {\n  if (code !== 'Escape') return;\n  handleClose();\n};\n\nconst ComponentEdit = ({\n  isOpen,\n  components,\n  component,\n  handleClose,\n  handleComponentEdit,\n}) => {\n  const callback = useCallback(\n    event => closeOnEsc(event, handleClose),\n    [handleClose],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', callback);\n    return () => window.removeEventListener('keydown', callback);\n  }, [callback]);\n\n  if (!isOpen) return null;\n\n  const factory = components.find(\n    c => c.type === component.options.type,\n  );\n\n  const edit = {\n    ...factory,\n    configurations: factory.configurations.map(configuration => ({\n      ...configuration,\n      default: component.configurations[configuration.name],\n    })),\n  };\n\n  return (\n    <Modal>\n      <ComponentConfiguration\n        editMode\n        handleClose={handleClose}\n        handleSubmit={(event, { configurations }) =>\n          handleComponentEdit(component, configurations)\n        }\n        component={edit}\n      />\n    </Modal>\n  );\n};\n\nexport default ComponentEdit;\n","import React, { useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport { Chevron } from '../Icons';\n\nconst Container = styled.div`\n  margin-bottom: 32px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  font-weight: bold;\n  font-size: 1.3em;\n`;\n\nconst HorizontalSeparator = styled.hr`\n  flex-grow: 1;\n  align-self: center;\n\n  margin: 16px;\n  border-top: 1px solid black;\n`;\n\nconst IconButton = styled.button`\n  background: none;\n  border: none;\n  width: 50px;\n\n  transform: ${props => (props.isOpen ? 'rotate(180deg)' : 'none')};\n`;\n\nconst ComponentsGrid = styled.div`\n  display: ${props => (props.isOpen ? 'grid' : 'none')};\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 8px;\n`;\n\nconst ComponentButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  padding: 8px;\n\n  background: rgba(0, 0, 0, 0.05);\n  border: 1px solid gray;\n  border-radius: 5px;\n\n  :hover {\n    background: rgba(0, 0, 0, 0.1);\n    border-style: dashed;\n  }\n`;\n\nconst ComponentTitle = styled.h2`\n  font-weight: normal;\n  font-size: 1.2em;\n`;\n\nconst ComponentIcon = styled.div`\n  margin-right: 16px;\n`;\n\nconst ComponentGroup = ({\n  name,\n  components,\n  handleComponentSelect,\n}) => {\n  const [isOpen, setOpen] = useState(true);\n\n  return (\n    <Container>\n      <Header onClick={() => setOpen(!isOpen)}>\n        <Title>{name}</Title>\n        <HorizontalSeparator />\n        <IconButton\n          left\n          isOpen={isOpen}\n          onClick={() => setOpen(!isOpen)}\n        >\n          <Chevron />\n        </IconButton>\n      </Header>\n      <ComponentsGrid isOpen={isOpen}>\n        {components.map(component => (\n          <ComponentButton\n            onClick={() => handleComponentSelect(component)}\n            key={component.name}\n            data-for=\"tooltip\"\n            data-tip={component.description}\n          >\n            <ComponentIcon>\n              <component.Icon />\n            </ComponentIcon>\n            <ComponentTitle>{component.name}</ComponentTitle>\n          </ComponentButton>\n        ))}\n      </ComponentsGrid>\n    </Container>\n  );\n};\n\nexport default ComponentGroup;\n","import React, { useState, useEffect } from 'react';\nimport Tooltip from 'react-tooltip';\n\nimport styled from 'styled-components';\n\nimport { Close } from '../Icons';\nimport {\n  Header,\n  Content,\n  IconButton,\n} from '../Modal/ModalContentLayout';\nimport ComponentGroup from './ComponentGroup';\n\nconst SearchBar = styled.input`\n  flex-grow: 1;\n\n  padding: 10px;\n  margin-right: 60px;\n  font-size: 1.5em;\n\n  border-radius: 25px;\n  border: 1px solid gray;\n\n  ::placeholder {\n    font-weight: 300;\n    color: #cfcfcf;\n  }\n`;\n\nconst Scroll = styled.div`\n  padding-right: 16px;\n  max-height: calc(min(800px, 80vh) - 130px);\n  overflow-y: auto;\n`;\n\nconst ComponentSearch = ({\n  groups,\n  handleComponentSelect,\n  handleClose,\n}) => {\n  useEffect(Tooltip.rebuild);\n\n  const [filteredGroups, setFilteredGroups] = useState(groups);\n  const [searchText, setSearchText] = useState('');\n\n  const handleSearchChange = value => {\n    setSearchText(value);\n\n    if (!value) {\n      setFilteredGroups(groups);\n      return;\n    }\n\n    const like = new RegExp(`${value}.*`, 'i');\n\n    const newFilteredGroups = groups\n      .map(group => {\n        const hasAnyMatchingComponent = group.components.some(\n          component => component.name.match(like),\n        );\n\n        if (hasAnyMatchingComponent)\n          return {\n            ...group,\n            components: group.components.filter(component =>\n              component.name.match(like),\n            ),\n          };\n        return null;\n      })\n      .filter(group => group != null);\n\n    setFilteredGroups(newFilteredGroups);\n  };\n\n  const handleKeyDown = key => {\n    if (key === 'Escape') {\n      setSearchText('');\n      setFilteredGroups(groups);\n    }\n\n    if (\n      key === 'Enter' &&\n      searchText &&\n      filteredGroups.length > 0 &&\n      filteredGroups[0].components.length > 0\n    ) {\n      handleComponentSelect(filteredGroups[0].components[0]);\n    }\n  };\n\n  return (\n    <>\n      <Header>\n        <SearchBar\n          autoFocus\n          placeholder=\"Search components...\"\n          value={searchText}\n          onChange={({ target: { value } }) =>\n            handleSearchChange(value)\n          }\n          onKeyDown={({ key }) => handleKeyDown(key)}\n        />\n        <IconButton\n          right\n          onClick={handleClose}\n          data-for=\"tooltip\"\n          data-tip=\"Close\"\n          data-place=\"left\"\n        >\n          <Close />\n        </IconButton>\n      </Header>\n\n      <Content>\n        <Scroll>\n          {filteredGroups.map(({ name, components }) => (\n            <ComponentGroup\n              name={name}\n              components={components}\n              handleComponentSelect={handleComponentSelect}\n              key={name}\n            />\n          ))}\n        </Scroll>\n      </Content>\n    </>\n  );\n};\n\nexport default ComponentSearch;\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport Modal from '../Modal/Modal';\nimport ComponentConfiguration from './ComponentConfiguration';\nimport ComponentSearch from './ComponentSearch';\n\nconst closeOnEsc = (\n  { code },\n  { handleClose, setSelectedComponent },\n) => {\n  if (code !== 'Escape') return;\n  handleClose();\n  setSelectedComponent(null);\n};\n\nconst ComponentSelect = ({\n  isOpen,\n  groups,\n  handleClose,\n  handleComponentDrop,\n}) => {\n  const [selectedComponent, setSelectedComponent] = useState(null);\n  const callback = useCallback(\n    event => closeOnEsc(event, { handleClose, setSelectedComponent }),\n    [handleClose],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', callback);\n    return () => window.removeEventListener('keydown', callback);\n  }, [callback]);\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal>\n      {selectedComponent ? (\n        <ComponentConfiguration\n          handleClose={() => {\n            handleClose();\n            setSelectedComponent(null);\n          }}\n          handleSubmit={handleComponentDrop}\n          handleBack={() => setSelectedComponent(null)}\n          component={selectedComponent}\n        />\n      ) : (\n        <ComponentSearch\n          handleClose={handleClose}\n          handleComponentSelect={setSelectedComponent}\n          groups={groups}\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default ComponentSelect;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Container = styled.span`\n  display: inline-flex;\n  align-items: center;\n\n  height: ${props => props.size}px;\n  padding: 0 ${props => props.size / 4}px;\n  margin: 2px ${props => props.size / 8}px;\n\n  font-size: ${props => props.size / 2}px;\n  font-family: monospace;\n  color: #000000c4;\n\n  background: #ececec;\n  border-radius: 4px;\n  border: 1px solid #ffffff17;\n  box-shadow: inset 0 0 ${props => props.size / 4}px #0000000a;\n`;\n\nconst Key = ({ children, size = 16 }) => (\n  <Container size={size}>{children}</Container>\n);\n\nexport default Key;\n","import styled from 'styled-components';\n\nconst ContextMenuIconContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  width: 16px;\n  height: 16px;\n  margin-right: 16px;\n`;\n\nexport default ContextMenuIconContainer;\n","import styled from 'styled-components';\n\nconst ContextMenuShortcutContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: flex-end;\n  margin-left: 8px;\n`;\n\nexport default ContextMenuShortcutContainer;\n","import React from 'react';\nimport { Menu, Item, Separator } from 'react-contexify';\n\nimport {\n  Duplicate,\n  Copy,\n  Delete,\n  Paste,\n  Redo,\n  Settings,\n  Undo,\n  Cut,\n  ZoomIn,\n  ZoomOut,\n  RotateLeft,\n  RotateRight,\n} from '../Icons';\nimport Key from '../Key/Key';\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\n\nconst ComponentContextMenu = ({\n  duplicateSelected,\n  cutSelected,\n  copySelected,\n  pasteSelected,\n  deleteSelected,\n  undo,\n  redo,\n  zoomIn,\n  zoomOut,\n  rotateLeft,\n  rotateRight,\n  configureComponent,\n}) => (\n  <Menu id=\"component\">\n    <Item onClick={duplicateSelected}>\n      <ContextMenuIconContainer>\n        <Duplicate />\n      </ContextMenuIconContainer>\n      Duplicate\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>D</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={cutSelected}>\n      <ContextMenuIconContainer>\n        <Cut />\n      </ContextMenuIconContainer>\n      Cut\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>X</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={copySelected}>\n      <ContextMenuIconContainer>\n        <Copy />\n      </ContextMenuIconContainer>\n      Copy\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>C</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={pasteSelected}>\n      <ContextMenuIconContainer>\n        <Paste />\n      </ContextMenuIconContainer>\n      Paste\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>V</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={deleteSelected}>\n      <ContextMenuIconContainer>\n        <Delete />\n      </ContextMenuIconContainer>\n      Delete\n      <ContextMenuShortcutContainer>\n        <Key>Delete</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Separator />\n\n    <Item onClick={zoomIn}>\n      <ContextMenuIconContainer>\n        <ZoomIn />\n      </ContextMenuIconContainer>\n      Zoom in\n    </Item>\n\n    <Item onClick={zoomOut}>\n      <ContextMenuIconContainer>\n        <ZoomOut />\n      </ContextMenuIconContainer>\n      Zoom out\n    </Item>\n\n    <Separator />\n\n    <Item\n      onClick={({ props }) =>\n        rotateLeft(props.component)\n      }\n      disabled={({ props }) =>\n        !props.component.canRotate\n      }\n    >\n      <ContextMenuIconContainer>\n        <RotateLeft />\n      </ContextMenuIconContainer>\n      Rotate left\n    </Item>\n\n    <Item\n      onClick={({ props }) =>\n        rotateRight(props.component)\n      }\n      disabled={({ props }) =>\n        !props.component.canRotate\n      }\n    >\n      <ContextMenuIconContainer>\n        <RotateRight />\n      </ContextMenuIconContainer>\n      Rotate right\n    </Item>\n\n    <Separator />\n\n    <Item onClick={undo}>\n      <ContextMenuIconContainer>\n        <Undo />\n      </ContextMenuIconContainer>\n      Undo\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>Z</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={redo}>\n      <ContextMenuIconContainer>\n        <Redo />\n      </ContextMenuIconContainer>\n      Redo\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>SHIFT</Key>\n        <Key>Z</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Separator />\n\n    <Item\n      onClick={({ props }) =>\n        configureComponent(props.component)\n      }\n    >\n      <ContextMenuIconContainer>\n        <Settings />\n      </ContextMenuIconContainer>\n      Edit configurations...\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>E</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n  </Menu>\n);\n\nexport default ComponentContextMenu;\n","import React from 'react';\nimport { Menu, Item, Separator } from 'react-contexify';\n\nimport { Redo, Undo, Paste, ZoomIn, ZoomOut } from '../Icons';\nimport Key from '../Key/Key';\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\n\nconst DiagramContextMenu = ({\n  pasteSelected,\n  undo,\n  redo,\n  zoomIn,\n  zoomOut,\n}) => (\n  <Menu id=\"diagram\">\n    <Item onClick={pasteSelected}>\n      <ContextMenuIconContainer>\n        <Paste />\n      </ContextMenuIconContainer>\n      Paste\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>V</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Separator />\n\n    <Item onClick={zoomIn}>\n      <ContextMenuIconContainer>\n        <ZoomIn />\n      </ContextMenuIconContainer>\n      Zoom in\n    </Item>\n    <Item onClick={zoomOut}>\n      <ContextMenuIconContainer>\n        <ZoomOut />\n      </ContextMenuIconContainer>\n      Zoom out\n    </Item>\n\n    <Separator />\n\n    <Item onClick={undo}>\n      <ContextMenuIconContainer>\n        <Undo />\n      </ContextMenuIconContainer>\n      Undo\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>Z</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={redo}>\n      <ContextMenuIconContainer>\n        <Redo />\n      </ContextMenuIconContainer>\n      Redo\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>SHIFT</Key>\n        <Key>Z</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n  </Menu>\n);\n\nexport default DiagramContextMenu;\n","import React from 'react';\n\nimport ComponentContextMenu from './ComponentContextMenu';\nimport DiagramContextMenu from './DiagramContextMenu';\n\nimport 'react-contexify/dist/ReactContexify.min.css';\n\nconst ContextMenus = ({\n  duplicateSelected,\n  cutSelected,\n  copySelected,\n  pasteSelected,\n  deleteSelected,\n  undo,\n  redo,\n  zoomIn,\n  zoomOut,\n  rotateLeft,\n  rotateRight,\n  configureComponent,\n}) => (\n  <>\n    <DiagramContextMenu\n      pasteSelected={pasteSelected}\n      undo={undo}\n      redo={redo}\n      zoomIn={zoomIn}\n      zoomOut={zoomOut}\n    />\n    <ComponentContextMenu\n      duplicateSelected={duplicateSelected}\n      cutSelected={cutSelected}\n      copySelected={copySelected}\n      pasteSelected={pasteSelected}\n      deleteSelected={deleteSelected}\n      undo={undo}\n      redo={redo}\n      zoomIn={zoomIn}\n      zoomOut={zoomOut}\n      rotateLeft={rotateLeft}\n      rotateRight={rotateRight}\n      configureComponent={configureComponent}\n    />\n  </>\n);\n\nexport default ContextMenus;\n","import React, { useEffect, useCallback } from 'react';\nimport GitHubButton from 'react-github-button';\n\nimport styled from 'styled-components';\n\nimport { version } from '../../../package.json';\nimport { Close } from '../Icons';\nimport Modal from '../Modal/Modal';\nimport {\n  Header,\n  Title,\n  Content,\n  IconButton,\n} from '../Modal/ModalContentLayout';\n\nconst Version = styled.span`\n  font-weight: bold;\n  font-size: 1.1em;\n  margin-top: -32px;\n`;\n\nconst Divider = styled.hr`\n  width: 80%;\n  margin: 24px;\n  border-color: white;\n`;\n\nconst closeOnEsc = ({ code }, handleClose) => {\n  if (code !== 'Escape') return;\n  handleClose();\n};\n\nconst HelpAbout = ({ isOpen, handleClose }) => {\n  const callback = useCallback(\n    event => closeOnEsc(event, handleClose),\n    [handleClose],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', callback);\n    return () => window.removeEventListener('keydown', callback);\n  }, [callback]);\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal>\n      <Header>\n        <Title>About</Title>\n        <IconButton\n          right\n          onClick={handleClose}\n          data-for=\"tooltip\"\n          data-tip=\"Close\"\n          data-place=\"left\"\n        >\n          <Close />\n        </IconButton>\n      </Header>\n\n      <Content\n        style={{\n          paddingTop: 0,\n          marginTop: 16,\n          overflowY: 'auto',\n          height: 'calc(100% - 70px)',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <img\n            src={`${process.env.PUBLIC_URL}/social.png`}\n            alt=\"logossim's logo\"\n            style={{ width: '75%' }}\n          />\n          <Version>Version {version}</Version>\n        </div>\n\n        <Divider />\n\n        <div style={{ margin: '0 32px' }}>\n          <p style={{ textAlign: 'center' }}>\n            If you want to know more about the project,{' '}\n            <a\n              href=\"https://github.com/renato-bohler/logossim\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              check us out on GitHub!\n            </a>\n          </p>\n          <GitHubButton\n            type=\"stargazers\"\n            namespace=\"renato-bohler\"\n            repo=\"logossim\"\n          />\n          <p style={{ textAlign: 'center' }}>\n            <strong>You can help us</strong> make logossim better! If\n            you know a little bit of web development, you can quite\n            easily develop new components to the application.\n          </p>\n        </div>\n\n        <Divider />\n\n        <div style={{ margin: '0 32px' }}>\n          <p style={{ textAlign: 'center' }}>\n            This is a project built by{' '}\n            <a\n              href=\"https://renato-bohler.github.io/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Renato Böhler\n            </a>{' '}\n            as an undegraduate thesis on Computer Engineering at{' '}\n            <a\n              href=\"http://www.utfpr.edu.br/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              UTFPR\n            </a>\n            .\n          </p>\n        </div>\n      </Content>\n    </Modal>\n  );\n};\n\nexport default HelpAbout;\n","import React, { useEffect, useCallback } from 'react';\n\nimport styled from 'styled-components';\n\nimport { Close } from '../Icons';\nimport Key from '../Key/Key';\nimport Modal from '../Modal/Modal';\nimport {\n  Header,\n  Title,\n  Subtitle,\n  Content,\n  IconButton,\n} from '../Modal/ModalContentLayout';\n\nconst closeOnEsc = ({ code }, handleClose) => {\n  if (code !== 'Escape') return;\n  handleClose();\n};\n\nconst TableContainer = styled.div`\n  display: flex;\n`;\n\nconst Table = styled.table`\n  flex: 1;\n  margin: 8px 0;\n`;\n\nconst TableColumn = styled.td`\n  padding: 8px;\n\n  border: 1px solid #5d2eb526;\n  border-radius: 8px;\n`;\n\nconst HelpKeyboardShortcuts = ({ isOpen, handleClose }) => {\n  const callback = useCallback(\n    event => closeOnEsc(event, handleClose),\n    [handleClose],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', callback);\n    return () => window.removeEventListener('keydown', callback);\n  }, [callback]);\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal>\n      <Header>\n        <Title>Keyboard shortcuts</Title>\n        <IconButton\n          right\n          onClick={handleClose}\n          data-for=\"tooltip\"\n          data-tip=\"Close\"\n          data-place=\"left\"\n        >\n          <Close />\n        </IconButton>\n      </Header>\n\n      <Content\n        style={{\n          paddingTop: 16,\n          marginTop: 16,\n          overflowY: 'auto',\n          height: 'calc(100% - 70px)',\n        }}\n      >\n        <span>\n          <strong>Note:</strong> some of the actions may have two\n          shortcuts.\n        </span>\n\n        <Subtitle style={{ marginTop: 32 }}>\n          Circuit management\n        </Subtitle>\n        <TableContainer>\n          <Table>\n            <tbody>\n              <tr>\n                <TableColumn>Save</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>S</Key>\n                </TableColumn>\n                <TableColumn />\n              </tr>\n              <tr>\n                <TableColumn>Load</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>L</Key>\n                </TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>SHIFT</Key>\n                  <Key size={32}>S</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Undo</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>Z</Key>\n                </TableColumn>\n                <TableColumn />\n              </tr>\n              <tr>\n                <TableColumn>Redo</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>SHIFT</Key>\n                  <Key size={32}>Z</Key>\n                </TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>Y</Key>\n                </TableColumn>\n              </tr>\n            </tbody>\n          </Table>\n        </TableContainer>\n\n        <Subtitle style={{ marginTop: 32 }}>\n          Component management\n        </Subtitle>\n        <TableContainer>\n          <Table>\n            <tbody>\n              <tr>\n                <TableColumn>Edit configurations</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>E</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Duplicate</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>D</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Delete</TableColumn>\n                <TableColumn>\n                  <Key size={32}>Delete</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Copy</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>C</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Paste</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>V</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Cut</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>X</Key>\n                </TableColumn>\n              </tr>\n            </tbody>\n          </Table>\n        </TableContainer>\n\n        <Subtitle style={{ marginTop: 32 }}>\n          Simulation control\n        </Subtitle>\n        <TableContainer>\n          <Table>\n            <tbody>\n              <tr>\n                <TableColumn>Play</TableColumn>\n                <TableColumn>\n                  <Key size={32}>SPACE</Key>\n                </TableColumn>\n                <TableColumn />\n              </tr>\n              <tr>\n                <TableColumn>Pause</TableColumn>\n                <TableColumn>\n                  <Key size={32}>SPACE</Key>\n                </TableColumn>\n                <TableColumn />\n              </tr>\n              <tr>\n                <TableColumn>Stop</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>SPACE</Key>\n                </TableColumn>\n                <TableColumn>\n                  <Key size={32}>ESC</Key>\n                </TableColumn>\n              </tr>\n            </tbody>\n          </Table>\n        </TableContainer>\n      </Content>\n    </Modal>\n  );\n};\n\nexport default HelpKeyboardShortcuts;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  position: absolute;\n  z-index: 10;\n\n  font-size: 2em;\n  font-weight: bold;\n  font-family: monospace;\n\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  background: #ffffff80;\n  border: 1px solid #6441a5;\n  border-radius: 16px;\n\n  padding: 16px;\n`;\n\nconst LoadingExample = () => (\n  <Container>Loading example...</Container>\n);\n\nexport default LoadingExample;\n","import React from 'react';\n\nimport styled, { keyframes } from 'styled-components';\n\nconst BACKGROUND_COLOR = {\n  error: '#f44336',\n  warning: '#ff9800',\n  info: '#2196f3',\n  success: '#4caf50',\n};\n\nconst TRANSITION_DURATION = 500;\n\nconst Container = styled.div`\n  position: absolute;\n  top: ${props => (props.open ? '5px' : '-200px')};\n  left: 50%;\n  transition: top ${TRANSITION_DURATION}ms;\n  transform: translateX(-50%);\n  overflow: hidden;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  border-radius: 10px;\n  min-width: 300px;\n  min-height: 50px;\n\n  cursor: pointer;\n\n  background: ${props => BACKGROUND_COLOR[props.type]};\n  color: white;\n  font-size: 14px;\n  font-weight: bold;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2),\n    0px 6px 10px 0px rgba(0, 0, 0, 0.14),\n    0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n  z-index: 2;\n`;\n\nconst Message = styled.span`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  width: 100%;\n  align-items: flex-start;\n  margin-top: 5px;\n  padding: 8px 16px;\n`;\n\nconst progress = keyframes`\n  0% {\n    width: 100%;\n  }\n  100% {\n    width: 0;\n  }\n`;\n\nconst ProgressBar = styled.div`\n  background: #ffffff80;\n  height: 5px;\n  border-radius: 5px;\n  align-self: flex-start;\n  width: 100%;\n\n  animation-name: ${progress};\n  animation-play-state: ${props =>\n    props.paused ? 'paused' : 'running'};\n  animation-duration: ${props =>\n    props.timeout - TRANSITION_DURATION / 2}ms;\n  animation-delay: ${TRANSITION_DURATION / 2}ms;\n  animation-timing-function: linear;\n`;\n\nconst Snackbar = ({ open, handleClose, message, type, timeout }) => {\n  return (\n    <Container\n      type={type}\n      timeout={timeout}\n      open={open}\n      onClick={handleClose}\n    >\n      <Message>\n        {message.split(`\\n`).map((string, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <div key={index}>{string}</div>\n        ))}\n      </Message>\n\n      {open && <ProgressBar timeout={timeout} />}\n    </Container>\n  );\n};\n\nexport default Snackbar;\n","import React, { useState, useRef, useEffect } from 'react';\n\nimport styled from 'styled-components';\n\nimport { Edit, Chevrons } from '../Icons';\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n\n  z-index: 2;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  background: white;\n  border-bottom: 1px solid #e5e5e5;\n  box-shadow: 0px -10px 20px 0px black;\n  padding: 12px;\n\n  transform: ${({ isHidden }) =>\n    isHidden ? 'translateY(-100%)' : 'none'};\n  transition: 0.5s ease-in-out;\n`;\n\nconst NameContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 4px;\n  border: 1px solid\n    ${({ isFocused }) => (isFocused ? '#e5e5e5' : 'transparent')};\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    border: 1px solid #e5e5e5;\n  }\n`;\n\nconst NameInput = styled.input`\n  background: none;\n  border: none;\n  cursor: pointer;\n  outline: none;\n  font-size: 20px;\n`;\n\nconst IconButton = styled.button`\n  border: none;\n  background: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n`;\n\nconst Button = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'button',\n}))`\n  border: none;\n  border-radius: 5px;\n  background: ${props => {\n    switch (props.color) {\n      case 'green':\n        return '#07d26b';\n      case 'orange':\n        return 'orange';\n      default:\n        return 'gray';\n    }\n  }};\n\n  color: white;\n  font-size: 1.2em;\n\n  min-width: 110px;\n  padding: 5px 20px;\n  margin: 5px;\n\n  transition: 0.5s ease-in-out;\n\n  &:disabled {\n    opacity: 10%;\n    cursor: not-allowed;\n    background: gray;\n  }\n`;\n\nconst FileInput = styled.input`\n  display: none;\n`;\n\nconst HelpButton = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'button',\n}))`\n  background: rgba(255, 255, 255, 0.6);\n  border-radius: 50%;\n  border: 1px solid #6441a5;\n\n  width: 34px;\n  height: 34px;\n\n  margin: 5px;\n\n  color: #6441a5;\n  font-weight: bold;\n  font-size: 1.3em;\n\n  &:focus,\n  &:hover {\n    background: #6441a5;\n    border: 1px solid rgba(255, 255, 255, 0.6);\n    color: rgba(255, 255, 255, 0.6);\n  }\n`;\n\nconst HelpButtonMenu = styled.div`\n  position: absolute;\n  top: 80px;\n  transform: translateX(calc(17px + -50%));\n\n  display: flex;\n  flex-direction: column;\n\n  background: rgba(255, 255, 255, 0.6);\n  border: 1px solid #6441a5;\n  border-radius: 10px;\n  padding: 3px;\n\n  z-index: 3;\n`;\n\nconst HelpButtonMenuItem = styled.button`\n  font-size: 14px;\n  color: #222;\n  padding: 16px;\n  border: 0;\n  background: transparent;\n  border-bottom: ${props =>\n    props.last ? 'none' : '1px solid #6441a5'};\n\n  &:focus,\n  &:hover {\n    color: #6441a5;\n  }\n`;\n\nconst HideButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 80px;\n  right: 20px;\n  background: white;\n  border: 1px solid #e5e5e5;\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  box-shadow: 0px 0px 12px 0px #6b6b6b;\n\n  svg {\n    transform: ${({ isHidden }) =>\n      isHidden ? 'rotate(180deg)' : 'none'};\n    transition: 0.5s ease-in-out;\n  }\n`;\n\nconst Titlebar = ({\n  circuitName,\n  isCircuitNameFocused,\n  handleChangeCircuitName,\n  handleFocusCircuitName,\n  handleBlurCircuitName,\n  handleClickSave,\n  handleFileLoad,\n  handleClickKeyboardShortcuts,\n  handleClickRedoTour,\n  handleClickAbout,\n  disabled,\n}) => {\n  const helpButtonRef = useRef();\n  const helpMenuRef = useRef();\n  const nameInputRef = useRef();\n  const fileInputRef = useRef();\n  const [isHelpMenuOpen, setHelpMenuOpen] = useState(false);\n  const [isHidden, setHidden] = useState(false);\n\n  const handleHideClick = () => setHidden(hidden => !hidden);\n  const handleNameConfirm = event => {\n    if (!nameInputRef.current) return;\n\n    const { key } = event;\n    if (key === 'Enter' || key === 'Escape')\n      nameInputRef.current.blur();\n  };\n  const handleNameEditClick = () => {\n    if (!nameInputRef.current) return;\n    nameInputRef.current.focus();\n  };\n  const handleToggleHelpMenu = () => setHelpMenuOpen(!isHelpMenuOpen);\n  const handleClickLoad = () => {\n    if (!fileInputRef.current) return;\n    fileInputRef.current.click();\n  };\n  const handleClickAway = event => {\n    if (\n      helpMenuRef.current &&\n      !helpMenuRef.current.contains(event.target) &&\n      helpButtonRef.current &&\n      !helpButtonRef.current.contains(event.target)\n    ) {\n      handleToggleHelpMenu();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickAway);\n    return () =>\n      document.removeEventListener('mousedown', handleClickAway);\n  });\n\n  return (\n    <Container isHidden={isHidden}>\n      <NameContainer\n        isFocused={isCircuitNameFocused}\n        data-for=\"tooltip\"\n        data-tip=\"Rename your circuit...\"\n        data-place=\"right\"\n      >\n        <NameInput\n          ref={nameInputRef}\n          value={circuitName}\n          onChange={handleChangeCircuitName}\n          onFocus={handleFocusCircuitName}\n          onBlur={handleBlurCircuitName}\n          onKeyDown={handleNameConfirm}\n          maxLength={50}\n        />\n        <IconButton onClick={handleNameEditClick}>\n          <Edit />\n        </IconButton>\n      </NameContainer>\n\n      <ButtonsContainer>\n        <HelpButton\n          id=\"help-button\"\n          ref={helpButtonRef}\n          onClick={handleToggleHelpMenu}\n          data-for=\"tooltip\"\n          data-tip=\"Get help...\"\n          data-place=\"left\"\n        >\n          <span>?</span>\n        </HelpButton>\n        {isHelpMenuOpen && (\n          <HelpButtonMenu ref={helpMenuRef}>\n            <HelpButtonMenuItem\n              onClick={() => {\n                handleClickKeyboardShortcuts();\n                handleToggleHelpMenu();\n              }}\n            >\n              Keyboard shortcuts\n            </HelpButtonMenuItem>\n            <HelpButtonMenuItem\n              onClick={() => {\n                setHidden(false);\n                handleClickRedoTour();\n                handleToggleHelpMenu();\n              }}\n            >\n              Redo the tour\n            </HelpButtonMenuItem>\n            <HelpButtonMenuItem\n              onClick={() => {\n                handleClickAbout();\n                handleToggleHelpMenu();\n              }}\n              last\n            >\n              About\n            </HelpButtonMenuItem>\n          </HelpButtonMenu>\n        )}\n\n        <div id=\"save-load-buttons\">\n          <Button\n            color=\"green\"\n            onClick={handleClickSave}\n            disabled={disabled}\n            data-for=\"tooltip\"\n            data-tip=\"Save circuit to file\"\n            data-place=\"left\"\n          >\n            Save\n          </Button>\n          <Button\n            color=\"orange\"\n            disabled={disabled}\n            onClick={handleClickLoad}\n            data-for=\"tooltip\"\n            data-tip=\"Load circuit from file...\"\n            data-place=\"left\"\n          >\n            Load\n          </Button>\n          <FileInput\n            id=\"file-input\"\n            ref={fileInputRef}\n            type=\"file\"\n            accept=\".lgsim\"\n            onChange={handleFileLoad}\n          />\n        </div>\n      </ButtonsContainer>\n\n      <HideButton\n        isHidden={isHidden}\n        onClick={handleHideClick}\n        data-for=\"tooltip\"\n        data-tip={isHidden ? 'Show titlebar' : 'Hide titlebar'}\n        data-place=\"left\"\n      >\n        <Chevrons />\n      </HideButton>\n    </Container>\n  );\n};\n\nexport default Titlebar;\n","export const DIMENSIONS = { width: 180, height: 135 };\n\n/**\n * Example circuit used to make the tour\n */\nexport default {\n  id: 'tour-circuit',\n  name: \"Logossim's tour circuit\",\n  createdAt: '2020-05-21T20:18:00.000Z',\n  updatedAt: '2020-09-08T11:47:00.000Z',\n  circuit: {\n    id: 'tour-circuit',\n    locked: false,\n    offsetX: 0,\n    offsetY: 0,\n    zoom: 100,\n    gridSize: 15,\n    layers: [\n      {\n        id: '4d94cbed-1005-4dc6-b0e3-44d71dc14380',\n        type: 'diagram-links',\n        isSvg: true,\n        transformed: true,\n        models: {\n          'clock-out-link': {\n            id: 'clock-out-link',\n            type: 'link',\n            selected: false,\n            source: 'clock',\n            sourcePort: 'clock-port',\n            target: 'and',\n            targetPort: 'and-port-in0',\n            points: [\n              {\n                id: 'bb7c0935-a272-45ea-b47a-f9b79fa7fac3',\n                type: 'point',\n                x: 30,\n                y: 15,\n              },\n              {\n                id: '2f339615-1c6c-450c-9862-06742ed3893f',\n                type: 'point',\n                x: 60,\n                y: 15,\n              },\n            ],\n            labels: [],\n            bifurcations: [],\n            bifurcationSource: null,\n            bifurcationTarget: null,\n            value: null,\n            bits: 1,\n          },\n          'and-out-link': {\n            id: 'and-out-link',\n            type: 'link',\n            selected: false,\n            source: 'and',\n            sourcePort: 'and-port-out',\n            target: null,\n            targetPort: null,\n            points: [\n              {\n                id: 'e4916002-7182-4866-9df7-46473e7de8bc',\n                type: 'point',\n                x: 150,\n                y: 45,\n              },\n              {\n                id: 'd677077d-9750-4831-be02-566294c988b1',\n                type: 'point',\n                x: 180,\n                y: 45,\n              },\n            ],\n            labels: [],\n            bifurcations: [],\n            bifurcationSource: null,\n            bifurcationTarget: null,\n            value: null,\n            bits: 1,\n          },\n          'button-out-link': {\n            id: 'button-out-link',\n            type: 'link',\n            selected: false,\n            source: 'button',\n            sourcePort: 'c241c69b-8e1a-45be-9982-4c96a537584f',\n            target: 'and',\n            targetPort: 'and-port-in1',\n            points: [\n              {\n                id: 'fbd656c6-6a36-4903-94b8-c715db34052d',\n                type: 'point',\n                x: 30,\n                y: 75,\n              },\n              {\n                id: 'f70cce22-3d5d-4257-9916-b602da9a901b',\n                type: 'point',\n                x: 60,\n                y: 75,\n              },\n            ],\n            labels: [],\n            bifurcations: ['not-in-link'],\n            bifurcationSource: null,\n            bifurcationTarget: null,\n            value: null,\n            bits: 1,\n          },\n          'not-out-link': {\n            id: 'not-out-link',\n            type: 'link',\n            selected: false,\n            source: 'not',\n            sourcePort: 'not-port-out',\n            target: null,\n            targetPort: null,\n            points: [\n              {\n                id: 'ba84ed0f-78ed-43c2-93d8-cf907b91b5fd',\n                type: 'point',\n                x: 120,\n                y: 120,\n              },\n              {\n                id: '78a6e161-97c3-4a31-a46c-244469ac75ff',\n                type: 'point',\n                x: 180,\n                y: 120,\n              },\n            ],\n            labels: [],\n            bifurcations: [],\n            bifurcationSource: null,\n            bifurcationTarget: null,\n            value: null,\n            bits: 1,\n          },\n          'not-in-link': {\n            id: 'not-in-link',\n            type: 'link',\n            selected: false,\n            source: null,\n            sourcePort: null,\n            target: 'not',\n            targetPort: '589ba5d7-8c75-4c82-9068-a67c9b023f77',\n            points: [\n              {\n                id: 'fada8e3b-4b46-4a24-a7ec-e3ca3bab77ab',\n                type: 'point',\n                x: 45,\n                y: 75,\n              },\n              {\n                id: 'f31e71e6-5d72-4f17-9af1-c23bfd257980',\n                type: 'point',\n                x: 45,\n                y: 120,\n              },\n              {\n                id: '2e747ee3-1c90-4e95-a40b-f221eb0710b3',\n                type: 'point',\n                x: 75,\n                y: 120,\n              },\n            ],\n            labels: [],\n            bifurcations: [],\n            bifurcationSource: 'button-out-link',\n            bifurcationTarget: null,\n            value: null,\n            bits: 1,\n          },\n        },\n      },\n      {\n        id: '9d30c1dd-e474-45b1-ad88-6b7739678ef3',\n        type: 'diagram-nodes',\n        isSvg: false,\n        transformed: true,\n        models: {\n          clock: {\n            id: 'clock',\n            type: 'Clock',\n            selected: false,\n            x: 0,\n            y: 0,\n            ports: [\n              {\n                id: 'clock-port',\n                type: 'Port',\n                selected: false,\n                x: 25,\n                y: 10,\n                name: 'out',\n                parentNode: 'clock',\n                links: ['clock-out-link'],\n                input: false,\n                value: null,\n                bits: 1,\n              },\n            ],\n            configurations: {\n              FREQUENCY_HZ: 0.5,\n              HIGH_DURATION: 1,\n              LOW_DURATION: 1,\n            },\n          },\n          and: {\n            id: 'and',\n            type: 'And',\n            selected: false,\n            x: 60,\n            y: 0,\n            ports: [\n              {\n                id: 'and-port-in0',\n                type: 'Port',\n                selected: false,\n                x: 55,\n                y: 10,\n                name: 'in0',\n                parentNode: 'and',\n                links: ['clock-out-link'],\n                input: true,\n                value: null,\n                bits: 1,\n              },\n              {\n                id: 'and-port-in1',\n                type: 'Port',\n                selected: false,\n                x: 55,\n                y: 70,\n                name: 'in1',\n                parentNode: 'and',\n                links: ['button-out-link'],\n                input: true,\n                value: null,\n                bits: 1,\n              },\n              {\n                id: 'and-port-out',\n                type: 'Port',\n                selected: false,\n                x: 145,\n                y: 40,\n                name: 'out',\n                parentNode: 'and',\n                links: ['and-out-link'],\n                input: false,\n                value: null,\n                bits: 1,\n              },\n            ],\n            configurations: { DATA_BITS: '1', INPUT_PORTS_NUMBER: 2 },\n          },\n          button: {\n            id: 'button',\n            type: 'Button',\n            selected: false,\n            x: 0,\n            y: 60,\n            ports: [\n              {\n                id: 'c241c69b-8e1a-45be-9982-4c96a537584f',\n                type: 'Port',\n                selected: false,\n                x: 25,\n                y: 70,\n                name: 'out',\n                parentNode: 'button',\n                links: ['button-out-link'],\n                input: false,\n                value: null,\n                bits: 1,\n              },\n            ],\n            configurations: {},\n          },\n          not: {\n            id: 'not',\n            type: 'Not',\n            selected: false,\n            x: 75,\n            y: 105,\n            ports: [\n              {\n                id: '589ba5d7-8c75-4c82-9068-a67c9b023f77',\n                type: 'Port',\n                selected: false,\n                x: 70,\n                y: 115,\n                name: 'in',\n                parentNode: 'not',\n                links: ['not-in-link'],\n                input: true,\n                value: null,\n                bits: 1,\n              },\n              {\n                id: 'not-port-out',\n                type: 'Port',\n                selected: false,\n                x: 115,\n                y: 115,\n                name: 'out',\n                parentNode: 'not',\n                links: ['not-out-link'],\n                input: false,\n                value: null,\n                bits: 1,\n              },\n            ],\n            configurations: {\n              DATA_BITS: '1',\n            },\n          },\n        },\n      },\n    ],\n  },\n};\n","import React, { Component } from 'react';\nimport GitHubButton from 'react-github-button';\nimport Joyride, { ACTIONS, EVENTS } from 'react-joyride';\n\nimport styled, { keyframes } from 'styled-components';\n\nimport Key from '../Key/Key';\nimport bifurcation from './images/bifurcation.gif';\nimport contextMenu from './images/context-menu.gif';\nimport simulation from './images/simulation.gif';\nimport wire from './images/wire.gif';\nimport { DIMENSIONS } from './tourCircuit';\n\nconst pulse = keyframes`\n  0% {\n    transform: scale(1);\n  }\n\n  55% {\n    background-color: rgba(42, 8, 69, 0.5);\n    transform: scale(1.2);\n  }\n`;\n\nconst Pulse = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  animation: ${pulse} 1s ease-in-out infinite;\n  background-color: ${props => props.color};\n  border: 1px solid rgba(42, 8, 69, 0.7);\n  border-radius: 50%;\n\n  height: ${props => props.size}px;\n  width: ${props => props.size}px;\n`;\n\nconst Beacon = React.forwardRef((props, ref) => (\n  <Pulse\n    size={30}\n    color=\"rgba(100, 65, 165, 0.3)\"\n    ref={ref}\n    {...props}\n  >\n    <Pulse size={20} color=\"rgba(100, 65, 165, 0.5)\" />\n  </Pulse>\n));\n\nconst imageStyle = {\n  alignSelf: 'center',\n  borderRadius: 25,\n  boxShadow: 'rgba(171, 171, 171, 0.38) 0px 13px 20px 0px',\n  marginBottom: 16,\n};\n\nexport default class Tour extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentStep: 0,\n      steps: [\n        {\n          title: 'Welcome!',\n          content: (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <img\n                src={`${process.env.PUBLIC_URL}/social.png`}\n                alt=\"logossim's logo\"\n                style={{\n                  width: 300,\n                  height: 158,\n                  alignSelf: 'center',\n                }}\n              />\n              <p>\n                This is <strong>logossim</strong>: an open source\n                digital logic simulator, built for the web and to be\n                extensible.\n              </p>\n              <p>Would you like to take a quick tour?</p>\n            </div>\n          ),\n          target: 'body',\n          placement: 'center',\n          showProgress: false,\n          disableOverlayClose: false,\n          locale: {\n            skip: 'No, thanks',\n            next: 'Yes, please!',\n          },\n        },\n        {\n          target: '#tour-circuit-area-wrapper',\n          title: 'This is the circuit workstation',\n          content: (\n            <p>\n              Here&apos;s where you are going to draw your circuits\n            </p>\n          ),\n        },\n        {\n          target: '#component-select-button',\n          title: 'Adding components',\n          content: (\n            <span>\n              <p>And you&apos;ll start by adding some components.</p>\n              <p>\n                You can do it by clicking on this button, then\n                you&apos;ll see all available components, so you can\n                create awesome circuits...\n              </p>\n              <p>\n                <strong>Hint:</strong> use the\n                <Key size={24}>CTRL</Key>\n                <Key size={24}>A</Key> shortcut.\n              </p>\n            </span>\n          ),\n          placement: 'top',\n        },\n        {\n          target: '#tour-circuit-wrapper',\n          title: 'Adding components',\n          content: <p>... like this one, for example!</p>,\n          spotlightPadding: 30,\n        },\n        {\n          target: '#tour-circuit-wrapper',\n          title: 'Managing components',\n          content: (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <p>\n                Notice that you can right click anywhere on the canvas\n                to access some handy commands, like duplicate, undo\n                &amp; redo and component configuration editing.\n              </p>\n              <img\n                src={contextMenu}\n                alt=\"Context menu example video\"\n                style={{\n                  ...imageStyle,\n                  width: 268,\n                  height: 132,\n                }}\n              />\n            </div>\n          ),\n          spotlightPadding: 30,\n        },\n        {\n          target: '[data-linkid=\"clock-out-link\"]',\n          title: 'Wiring components',\n          content: (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <p>\n                To wire components together, you can drag a\n                component&apos;s port onto another port.\n              </p>\n              <img\n                src={wire}\n                alt=\"Wiring components example video\"\n                style={{\n                  ...imageStyle,\n                  width: 268,\n                  height: 178,\n                }}\n              />\n              <p>\n                <strong>Oh! Important note:</strong> you can select a\n                wire by clicking it, and delete it using the Delete\n                key.\n              </p>\n            </div>\n          ),\n          placement: 'top',\n          spotlightPadding: 45,\n        },\n        {\n          target: '[data-linkid=\"not-in-link\"]',\n          title: 'Wiring components',\n          content: (\n            <span\n              style={{ display: 'flex', flexDirection: 'column' }}\n            >\n              <p>\n                You can also drag a new wire from an existing wire.\n              </p>\n              <img\n                src={bifurcation}\n                alt=\"Bifurcating wires example video\"\n                style={{\n                  ...imageStyle,\n                  width: 268,\n                  height: 160,\n                }}\n              />\n              <p>\n                <strong>Another important note:</strong> you can leave\n                the wire with a loose end and connect it afterwards.\n              </p>\n            </span>\n          ),\n          placement: 'top',\n          spotlightPadding: 45,\n        },\n        {\n          target: '#simulation-control-buttons',\n          title: 'Simulation control',\n          content: (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <p>\n                After wiring it all together, you just need to run the\n                simulation to test your ideas!\n              </p>\n              <img\n                src={simulation}\n                alt=\"Simulation execution example video\"\n                style={{\n                  ...imageStyle,\n                  width: 254,\n                  height: 194,\n                }}\n              />\n              <p>Useful shortcuts:</p>\n              <ul style={{ margin: 0 }}>\n                <li>\n                  <strong>Play/pause:</strong>\n                  <Key size={24}>SPACE</Key>\n                </li>\n                <li>\n                  <strong>Stop:</strong>\n                  <Key size={24}>CTRL</Key>\n                  <Key size={24}>SPACE</Key>\n                </li>\n              </ul>\n            </div>\n          ),\n          placement: 'top',\n        },\n        {\n          target: '#help-button',\n          title: 'Still need help?',\n          content: (\n            <span>\n              <p>\n                In case you need any assistance in the future, come\n                back to this help button. Here you&apos;ll find:\n              </p>\n              <ol style={{ lineHeight: '200%' }}>\n                <li>All keyboard shortcuts</li>\n                <li>More about the project</li>\n                <li>\n                  And this tour, if you feel like doing it another\n                  time\n                </li>\n              </ol>\n            </span>\n          ),\n        },\n        {\n          target: '#save-load-buttons',\n          title: 'By the way...',\n          content: (\n            <span>\n              <p>\n                After you&apos;ve done your amazing circuit,\n                don&apos;t forget that you can save it and reload it\n                later!\n              </p>\n              <p>Useful shortcuts:</p>\n              <ul style={{ margin: 0 }}>\n                <li>\n                  <strong>Save:</strong>\n                  <Key size={24}>CTRL</Key>\n                  <Key size={24}>S</Key>\n                </li>\n                <li>\n                  <strong>Load:</strong>\n                  <Key size={24}>CTRL</Key>\n                  <Key size={24}>L</Key>\n                </li>\n              </ul>\n            </span>\n          ),\n        },\n        {\n          target: 'body',\n          title: \"And that's all folks!\",\n          content: (\n            <div>\n              <p>\n                If you want to know more about the project,{' '}\n                <a\n                  href=\"https://github.com/renato-bohler/logossim\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  check us out on GitHub!\n                </a>\n              </p>\n              <GitHubButton\n                type=\"stargazers\"\n                namespace=\"renato-bohler\"\n                repo=\"logossim\"\n              />\n              <p>\n                <strong>You can help us</strong> make logossim better!\n                If you know a little bit of web development, you can\n                quite easily develop new components to the\n                application.\n              </p>\n            </div>\n          ),\n          placement: 'center',\n          showProgress: false,\n          showSkipButton: false,\n          disableOverlayClose: false,\n        },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.recenterTourCircuit);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.recenterTourCircuit);\n  }\n\n  recenterTourCircuit = () => {\n    const { currentStep } = this.state;\n    const { run } = this.props;\n\n    if (!run) return;\n    if (currentStep < 3) return;\n\n    const { recenterCircuit } = this.props;\n    recenterCircuit();\n  };\n\n  callback = ({ type, action, index }) => {\n    const { setTourRunning, loadCircuit, clearCircuit } = this.props;\n\n    // Next step\n    if (type === EVENTS.STEP_AFTER) {\n      if (index === 2 && action === ACTIONS.NEXT) loadCircuit();\n      if (index === 3 && action === ACTIONS.PREV) clearCircuit();\n\n      this.setState({\n        currentStep: index + (action === ACTIONS.NEXT ? 1 : -1),\n      });\n    }\n\n    // Dismiss (skipping, closing or ending tour)\n    if (type === EVENTS.TOUR_END || action === ACTIONS.CLOSE) {\n      clearCircuit();\n      localStorage.setItem('tour-done', true);\n      setTourRunning(false);\n      this.setState({ currentStep: 0 });\n    }\n  };\n\n  render() {\n    const { steps, currentStep } = this.state;\n    const { run } = this.props;\n\n    return (\n      <>\n        <Joyride\n          run={run}\n          steps={steps}\n          stepIndex={currentStep}\n          continuous\n          scrollToFirstStep\n          showProgress\n          showSkipButton\n          disableOverlayClose\n          styles={{\n            tooltip: {\n              borderRadius: 10,\n            },\n            tooltipContent: {\n              fontSize: 14,\n              textAlign: 'left',\n            },\n            buttonBack: {\n              color: 'black',\n              fontSize: 12,\n            },\n            buttonNext: {\n              background: '#6441a5',\n              fontSize: 12,\n              borderRadius: 5,\n            },\n            buttonSkip: {\n              color: '#6441a5',\n              fontSize: 12,\n              border: '1px solid #6441a5',\n              borderRadius: 5,\n            },\n          }}\n          locale={{\n            back: 'Back',\n            close: 'Close',\n            last: 'Got it!',\n            next: 'Next',\n            open: 'Open',\n            skip: 'Skip',\n          }}\n          beaconComponent={Beacon}\n          callback={this.callback}\n        />\n        <div\n          style={{\n            display: run ? 'block' : 'none',\n            position: 'absolute',\n            width: window.innerWidth * 0.75,\n            height: window.innerHeight * 0.5,\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n          id=\"tour-circuit-area-wrapper\"\n        />\n        <div\n          style={{\n            display: run ? 'block' : 'none',\n            position: 'absolute',\n            width: DIMENSIONS.width,\n            height: DIMENSIONS.height,\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n          id=\"tour-circuit-wrapper\"\n        />\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Tooltip from 'react-tooltip';\n\nimport components, { groupedComponents } from '@logossim/components';\nimport {\n  SimulationEngine,\n  DiagramEngine,\n  Diagram,\n} from '@logossim/core';\n\nimport FileSaver from 'file-saver';\n\nimport {\n  Titlebar,\n  SimulationControlButtons,\n  ComponentSelectButton,\n  ComponentSelect,\n  ComponentEdit,\n  ContextMenus,\n  HelpKeyboardShortcuts,\n  LoadingExample,\n  HelpAbout,\n  Snackbar,\n  Tour,\n} from './ui-components';\nimport tourCircuit, {\n  DIMENSIONS,\n} from './ui-components/Tour/tourCircuit';\n\nimport './App.css';\n\nconst DEFAULT_CIRCUIT_NAME = 'Untitled circuit';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isComponentSelectOpen: false,\n      isComponentEditOpen: false,\n      isHelpKeyboardOpen: false,\n      isHelpAboutOpen: false,\n      componentEdit: null,\n      isTourAvailable: false,\n      isTourRunning: !JSON.parse(localStorage.getItem('tour-done')),\n      circuitName: DEFAULT_CIRCUIT_NAME,\n      circuitCreatedAt: null,\n      isCircuitNameFocused: false,\n      isLoadingExample: false,\n      snackbar: {\n        open: false,\n        message: '',\n        type: 'success',\n        timeout: 0,\n        timeoutID: null,\n      },\n    };\n\n    this.diagram = new DiagramEngine(\n      components,\n      this.areShortcutsAllowed,\n      this.showSnackbar,\n    );\n    this.simulation = new SimulationEngine(components);\n  }\n\n  componentDidMount() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const example = urlParams.get('example');\n\n    if (example === null) {\n      window.addEventListener('load', this.loadHandler);\n    } else {\n      this.loadExample(example);\n    }\n\n    window.addEventListener('keydown', this.shortcutHandler);\n    window.addEventListener('beforeunload', this.unloadHandler);\n\n    this.autoSaveInterval = setInterval(this.autoSave, 5000);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.shortcutHandler);\n    window.addEventListener('load', this.loadHandler);\n    window.removeEventListener('beforeunload', this.unloadHandler);\n\n    clearInterval(this.autoSaveInterval);\n  }\n\n  areShortcutsAllowed = () => {\n    const {\n      isComponentSelectOpen,\n      isComponentEditOpen,\n      isHelpKeyboardOpen,\n      isHelpAboutOpen,\n      isCircuitNameFocused,\n      isTourRunning,\n    } = this.state;\n\n    return !(\n      isComponentSelectOpen ||\n      isComponentEditOpen ||\n      isHelpKeyboardOpen ||\n      isHelpAboutOpen ||\n      isCircuitNameFocused ||\n      isTourRunning\n    );\n  };\n\n  shortcutHandler = event => {\n    const { ctrlKey, shiftKey, code } = event;\n\n    if (!this.areShortcutsAllowed()) return;\n\n    // Add component\n    if (ctrlKey && code === 'KeyA') {\n      event.preventDefault();\n      if (!this.simulation.isStopped()) return;\n\n      this.showAddComponent();\n    }\n\n    // Component configuration\n    if (ctrlKey && code === 'KeyE') {\n      event.preventDefault();\n      if (!this.simulation.isStopped()) return;\n\n      const selectedNodes = this.diagram.getSelectedNodes();\n      if (selectedNodes.length !== 1) return;\n      const node = selectedNodes[0];\n      this.showEditComponent(node);\n    }\n\n    // Play/pause toggle simulation\n    if (!ctrlKey && code === 'Space') {\n      event.preventDefault();\n      if (this.simulation.isRunning()) this.handleClickPause();\n      else this.handleClickStart();\n    }\n\n    // Stop simulation\n    if ((ctrlKey && code === 'Space') || code === 'Escape') {\n      event.preventDefault();\n\n      if (!this.simulation.isStopped()) this.handleClickStop();\n    }\n\n    // Save circuit\n    if (ctrlKey && !shiftKey && code === 'KeyS') {\n      event.preventDefault();\n      this.handleClickSave();\n    }\n\n    // Load circuit\n    if (\n      (ctrlKey && code === 'KeyL') ||\n      (ctrlKey && shiftKey && code === 'KeyS')\n    ) {\n      event.preventDefault();\n      this.handleClickLoad();\n    }\n  };\n\n  isCircuitEmpty = circuit => {\n    if (!circuit) return true;\n\n    return Object.keys(circuit.layers[1].models).length === 0;\n  };\n\n  loadFile = file => {\n    this.setState({\n      circuitName: file.name,\n      circuitCreatedAt: file.createdAt,\n    });\n    this.diagram.load(file.circuit);\n  };\n\n  loadExample = async name => {\n    this.setState({ isLoadingExample: true });\n    const response = await window.fetch(`./examples/${name}.lgsim`);\n    const circuit = await response.json();\n    this.loadFile(circuit);\n    this.setState({ isLoadingExample: false });\n  };\n\n  loadHandler = () => {\n    const lastSaved = JSON.parse(\n      localStorage.getItem('circuit-autosave'),\n    );\n\n    if (this.isCircuitEmpty(lastSaved?.circuit)) {\n      this.setState({ isTourAvailable: true });\n      return;\n    }\n\n    // eslint-disable-next-line no-alert\n    const reload = window.confirm('Reload last unsaved circuit?');\n    if (reload) {\n      this.loadFile(lastSaved);\n    } else {\n      this.setState({ isTourAvailable: true });\n      localStorage.removeItem('circuit-autosave');\n    }\n  };\n\n  shouldWarnUnload = (currentCircuit, lastSavedCircuit) => {\n    if (this.isCircuitEmpty(currentCircuit)) return false;\n\n    return (\n      JSON.stringify(lastSavedCircuit.layers) !==\n      JSON.stringify(currentCircuit.layers)\n    );\n  };\n\n  unloadHandler = event => {\n    const lastSaved = JSON.parse(\n      localStorage.getItem('last-saved-circuit'),\n    );\n    const file = this.generateFile();\n\n    if (this.shouldWarnUnload(file.circuit, lastSaved.circuit)) {\n      if (this.simulation.isStopped()) {\n        localStorage.setItem(\n          'circuit-autosave',\n          JSON.stringify(file),\n        );\n      }\n      // eslint-disable-next-line no-param-reassign\n      event.returnValue =\n        'You have unsaved changes. Sure you want to leave?';\n    }\n  };\n\n  generateFile = () => {\n    const { circuitName, circuitCreatedAt } = this.state;\n    const circuit = this.diagram.serialize();\n\n    return {\n      id: circuit.id,\n      name: circuitName,\n      createdAt: circuitCreatedAt || new Date(),\n      updatedAt: new Date(),\n      circuit,\n    };\n  };\n\n  autoSave = () => {\n    const file = this.generateFile();\n\n    if (file.circuit.id === 'tour-circuit') return;\n    if (this.isCircuitEmpty(file.circuit)) return;\n    if (!this.simulation.isStopped()) return;\n\n    localStorage.setItem('circuit-autosave', JSON.stringify(file));\n  };\n\n  synchronizeSimulation = () => {\n    const diff = this.simulation.getDiff();\n\n    // Handles components diff\n    Object.entries(diff.components).forEach(([id, componentDiff]) =>\n      this.diagram.synchronizeComponent(id, componentDiff),\n    );\n\n    // Handles link value diff\n    Object.entries(diff.links).forEach(([id, value]) =>\n      this.diagram.synchronizeLink(id, value),\n    );\n\n    this.simulation.clearDiff();\n    this.diagram.repaint();\n  };\n\n  renderSimulation = () => {\n    if (!this.simulation.isRunning()) return;\n\n    this.synchronizeSimulation();\n\n    requestAnimationFrame(this.renderSimulation);\n  };\n\n  handleCircuitNameChange = event => {\n    event.stopPropagation();\n    event.preventDefault();\n    this.setState({ circuitName: event.target.value });\n  };\n\n  handleCircuitNameFocus = event => {\n    this.setState({ isCircuitNameFocused: true });\n    if (event.target.value === DEFAULT_CIRCUIT_NAME)\n      event.target.select();\n  };\n\n  handleCircuitNameBlur = () =>\n    this.setState({ isCircuitNameFocused: false });\n\n  handleClickSave = () => {\n    const { circuitCreatedAt } = this.state;\n    if (!circuitCreatedAt)\n      this.setState({ circuitCreatedAt: new Date() });\n\n    const file = JSON.stringify(this.generateFile(), null, 2);\n    const blob = new Blob([file], {\n      type: 'application/json',\n    });\n\n    const { circuitName } = this.state;\n    const filename = circuitName.replace(/[/|\\\\:*?\"<>]/g, '');\n    localStorage.setItem('last-saved-circuit', file);\n\n    FileSaver.saveAs(blob, `${filename}.lgsim`);\n  };\n\n  handleClickLoad = () =>\n    document.getElementById('file-input').click();\n\n  handleFileLoad = event => {\n    const {\n      target: { files },\n    } = event;\n\n    if (files.length !== 1) return;\n\n    const handleError = () =>\n      this.showSnackbar(\n        `Error loading circuit file:\\n${files[0].name}`,\n      );\n\n    const fr = new FileReader();\n    fr.onerror = handleError;\n    fr.onload = e => {\n      try {\n        const file = JSON.parse(e.target.result);\n        this.loadFile(file);\n      } catch (exception) {\n        handleError();\n      }\n    };\n    fr.readAsText(files.item(0));\n  };\n\n  handleClickStart = () => {\n    const serialized = JSON.stringify(this.diagram.serialize());\n    localStorage.setItem('circuit-autosave', serialized);\n\n    this.diagram.clearSelection();\n    this.diagram.setLocked(true);\n\n    this.simulation.start(this.diagram.getModel());\n    this.renderSimulation();\n    this.forceUpdate();\n  };\n\n  handleClickPause = () => {\n    this.simulation.pause();\n    this.forceUpdate();\n  };\n\n  handleClickStop = async () => {\n    await this.simulation.stop();\n    this.diagram.clearAllValues();\n    this.diagram.setLocked(false);\n    this.forceUpdate();\n    this.simulation.clearDiff();\n  };\n\n  showAddComponent = () =>\n    this.setState({\n      isComponentSelectOpen: true,\n    });\n\n  hideAddComponent = () =>\n    this.setState({\n      isComponentSelectOpen: false,\n    });\n\n  showEditComponent = componentEdit => {\n    this.diagram.clearSelection();\n\n    this.setState({\n      isComponentEditOpen: true,\n      componentEdit,\n    });\n  };\n\n  hideEditComponent = () =>\n    this.setState({\n      isComponentEditOpen: false,\n      componentEdit: null,\n    });\n\n  rotateComponentBy = (component, increment) => {\n    if (component.canRotate) {\n      const configurations = { ...component.configurations };\n      configurations.ORIENTATION = (((configurations.ORIENTATION + increment) % 4) + 4) % 4;\n      this.diagram.handleComponentEdit(component, configurations)\n    }\n  }\n\n  rotateComponentLeft = component => this.rotateComponentBy(component, -1)\n\n  rotateComponentRight = component => this.rotateComponentBy(component, 1)\n\n  setTourRunning = isTourRunning => this.setState({ isTourRunning });\n\n  showHelpTour = () => this.setTourRunning(true);\n\n  showHelpKeyboard = () =>\n    this.setState({ isHelpKeyboardOpen: true });\n\n  hideHelpKeyboard = () =>\n    this.setState({ isHelpKeyboardOpen: false });\n\n  showHelpAbout = () => this.setState({ isHelpAboutOpen: true });\n\n  hideHelpAbout = () => this.setState({ isHelpAboutOpen: false });\n\n  showSnackbar = async (message, type = 'error') => {\n    const { snackbar } = this.state;\n    const timeout = 3000 + message.split(' ').length * 50;\n\n    if (snackbar.open) {\n      clearTimeout(snackbar.timeoutID);\n      this.hideSnackbar();\n      await new Promise(res => setTimeout(res, 500));\n    }\n\n    this.setState({\n      snackbar: {\n        open: true,\n        message,\n        type,\n        timeout,\n        timeoutID: setTimeout(this.hideSnackbar, timeout),\n      },\n    });\n  };\n\n  hideSnackbar = () => {\n    const { snackbar } = this.state;\n    clearTimeout(snackbar.timeoutID);\n\n    this.setState(state => ({\n      snackbar: {\n        ...state.snackbar,\n        open: false,\n      },\n    }));\n  };\n\n  handleLoadTourCircuit = () => {\n    this.circuitBeforeTour = this.generateFile();\n    this.loadFile(tourCircuit);\n    this.handleCenterTourCircuitOffset();\n  };\n\n  handleUnloadTourCircuit = () => {\n    if (!this.circuitBeforeTour) return;\n\n    this.loadFile(this.circuitBeforeTour);\n    this.circuitBeforeTour = null;\n  };\n\n  handleCenterTourCircuitOffset = () => {\n    this.diagram\n      .getModel()\n      .setOffset(\n        (window.innerWidth - DIMENSIONS.width) / 2,\n        (window.innerHeight - DIMENSIONS.height) / 2,\n      );\n    this.diagram.realignGrid();\n    this.diagram.repaint();\n  };\n\n  render() {\n    const {\n      isComponentSelectOpen,\n      isComponentEditOpen,\n      isHelpKeyboardOpen,\n      isHelpAboutOpen,\n      componentEdit,\n      isTourAvailable,\n      isTourRunning,\n      circuitName,\n      isCircuitNameFocused,\n      isLoadingExample,\n      snackbar,\n    } = this.state;\n\n    return (\n      <>\n        <Titlebar\n          circuitName={circuitName}\n          isCircuitNameFocused={isCircuitNameFocused}\n          handleChangeCircuitName={this.handleCircuitNameChange}\n          handleFocusCircuitName={this.handleCircuitNameFocus}\n          handleBlurCircuitName={this.handleCircuitNameBlur}\n          handleClickSave={this.handleClickSave}\n          handleFileLoad={this.handleFileLoad}\n          handleClickKeyboardShortcuts={this.showHelpKeyboard}\n          handleClickRedoTour={this.showHelpTour}\n          handleClickAbout={this.showHelpAbout}\n          disabled={!this.simulation.isStopped()}\n        />\n        <SimulationControlButtons\n          state={this.simulation.getState()}\n          handleClickStart={this.handleClickStart}\n          handleClickPause={this.handleClickPause}\n          handleClickStop={this.handleClickStop}\n        />\n        <ComponentSelectButton\n          handleClick={this.showAddComponent}\n          disabled={!this.simulation.isStopped()}\n        />\n\n        <ComponentSelect\n          isOpen={isComponentSelectOpen}\n          groups={groupedComponents}\n          handleClose={this.hideAddComponent}\n          handleComponentDrop={this.diagram.handleComponentDrop}\n        />\n        <ComponentEdit\n          isOpen={isComponentEditOpen}\n          components={components}\n          component={componentEdit}\n          handleClose={this.hideEditComponent}\n          handleComponentEdit={this.diagram.handleComponentEdit}\n        />\n\n        <HelpKeyboardShortcuts\n          isOpen={isHelpKeyboardOpen}\n          handleClose={this.hideHelpKeyboard}\n        />\n        <HelpAbout\n          isOpen={isHelpAboutOpen}\n          handleClose={this.hideHelpAbout}\n        />\n        {isTourAvailable && (\n          <Tour\n            run={isTourRunning}\n            setTourRunning={this.setTourRunning}\n            loadCircuit={this.handleLoadTourCircuit}\n            clearCircuit={this.handleUnloadTourCircuit}\n            recenterCircuit={this.handleCenterTourCircuitOffset}\n          />\n        )}\n\n        {isLoadingExample && <LoadingExample />}\n        <Diagram engine={this.diagram} />\n\n        <ContextMenus\n          duplicateSelected={this.diagram.duplicateSelected}\n          cutSelected={this.diagram.cutSelected}\n          copySelected={this.diagram.copySelected}\n          pasteSelected={this.diagram.pasteSelected}\n          deleteSelected={this.diagram.deleteSelected}\n          undo={this.diagram.undo}\n          redo={this.diagram.redo}\n          zoomIn={this.diagram.zoomIn}\n          zoomOut={this.diagram.zoomOut}\n          rotateLeft={this.rotateComponentLeft}\n          rotateRight={this.rotateComponentRight}\n          configureComponent={this.showEditComponent}\n        />\n\n        <Tooltip id=\"tooltip\" globalEventOff=\"click\" />\n        <Snackbar\n          open={snackbar.open}\n          type={snackbar.type}\n          message={snackbar.message}\n          timeout={snackbar.timeout}\n          handleClose={this.hideSnackbar}\n        />\n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator\n  ) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\n        'Error during service worker registration:',\n        error,\n      );\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null &&\n          contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable no-extend-native */\nArray.prototype.asArray = function arrayAsArray() {\n  return this;\n};\n\nArray.prototype.asNumber = function arrayAsNumber() {\n  if (this.some(bit => bit === 'e')) return 'e';\n  if (this.some(bit => bit === 'x')) return 'x';\n\n  if (this.some(bit => bit !== 0 && bit !== 1))\n    throw new Error(\n      '[logossim] Array cannot be converted to number because it contains invalid values',\n    );\n\n  return this.slice()\n    .reverse()\n    .reduce((acc, curr, index) => acc + curr * 2 ** index, 0);\n};\n\nArray.prototype.transpose = function transpose() {\n  return this[0].map((x1, i) => this.map(x2 => x2[i]));\n};\n\nNumber.prototype.asNumber = function numberAsNumber() {\n  return Number(this);\n};\n\nNumber.prototype.asArray = function numberAsArray(dataBits) {\n  if (!dataBits)\n    throw new Error(\n      '[logossim] To transform a number to array, you need to pass as argument the length of the array',\n    );\n\n  const result = [...this.toString(2)].map(Number);\n\n  return Array(dataBits)\n    .fill(0)\n    .concat(result)\n    .slice(result.length);\n};\n\nString.prototype.asArray = function stringAsArray(dataBits) {\n  if (!dataBits)\n    throw new Error(\n      '[logossim] To transform a number to array, you need to pass as argument the length of the array',\n    );\n\n  return [...this.padStart(dataBits, 0)].map(char => {\n    if (char === '0') return 0;\n    if (char === '1') return 1;\n    return char;\n  });\n};\n\nString.prototype.parseBinary = function parseBinary(\n  dataBits,\n  arrayLength,\n  fillWith = 0,\n) {\n  if (!dataBits)\n    throw new Error(\n      '[logossim] To parse a binary, you need to pass the value length in bits as first argument.',\n    );\n\n  if (!arrayLength)\n    throw new Error(\n      '[logossim] To parse a binary, you need to pass the result array length as second argument.',\n    );\n\n  const sanitize = /[^01]/g;\n  const chunk = new RegExp(`.{1,${dataBits}}`, 'g');\n\n  const content = (\n    this.replace(sanitize, '').match(chunk) || []\n  ).map(value => parseInt(value, 2));\n\n  return Array(arrayLength)\n    .fill(fillWith)\n    .map((original, i) => {\n      const value = content[i];\n      if (!value) return original;\n      return value;\n    });\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport '@logossim/core/common/prototype';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}