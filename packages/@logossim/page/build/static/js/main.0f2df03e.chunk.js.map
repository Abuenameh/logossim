{"version":3,"sources":["../../core/Simulation/simulation.worker.js","ui-components/Tour/images/bifurcation.gif","ui-components/Tour/images/context-menu.gif","ui-components/Tour/images/simulation.gif","ui-components/Tour/images/wire.gif","../../core/Diagram/states/common.js","../../core/Simulation/utils.js","../../core/Link/LinkModel.js","../../core/Port/PortModel.js","../../core/Simulation/AudioEngine.js","../../core/Simulation/serialize.js","../../core/Simulation/SimulationEngine.js","../../core/BaseModel.js","../../core/ComponentContext.jsx","../../core/Component.jsx","../../core/Diagram/DiagramContext.jsx","../../core/Diagram/DroppableLayer.jsx","../../core/Diagram/Diagram.jsx","../../core/Link/LinkWidget.jsx","../../core/Link/LinkFactory.jsx","../../core/Port/PortFactory.js","../../core/Diagram/actions/ClipboardAction.js","../../core/Diagram/actions/DeleteAction.js","../../core/Diagram/actions/DuplicateAction.js","../../core/Diagram/actions/UndoRedoAction.js","../../core/Diagram/actions/ZoomAction.js","../../core/Diagram/Command/commandHandlers.js","../../core/Diagram/Command/Command.js","../../core/Diagram/Command/CommandManager.js","../../core/Diagram/states/handleLinkDrag.js","../../core/Port/Port.jsx","../../core/Diagram/states/BifurcateLinkState.js","../../core/Diagram/states/DragCanvasState.js","../../core/Diagram/states/DragNewLinkState.js","../../core/Diagram/states/MoveItemsState.js","../../core/Diagram/states/SelectionBoxState.js","../../core/Diagram/states/SelectingState.js","../../core/Diagram/states/States.js","../../core/Diagram/DiagramEngine.js","../../components/portExtendUtils.js","../../components/And/AndWidget.jsx","../../components/And/AndIcon.jsx","../../components/And/AndModel.js","../../components/And/AndRegister.js","../../components/Buffer/BufferWidget.jsx","../../components/Buffer/BufferIcon.jsx","../../components/Buffer/BufferModel.js","../../components/Buffer/BufferRegister.js","../../components/Button/ButtonWidget.jsx","../../components/Button/ButtonIcon.jsx","../../components/Button/ButtonModel.js","../../components/Button/ButtonRegister.js","../../components/Buzzer/BuzzerWidget.jsx","../../components/Buzzer/BuzzerIcon.jsx","../../components/Buzzer/BuzzerModel.js","../../components/Buzzer/BuzzerRegister.js","../../components/Clock/ClockWidget.jsx","../../components/Clock/ClockIcon.jsx","../../components/Clock/ClockModel.js","../../components/Clock/ClockRegister.js","../../components/ControlledBuffer/ControlledBufferWidget.jsx","../../components/ControlledBuffer/ControlledBufferIcon.jsx","../../components/ControlledBuffer/ControlledBufferModel.js","../../components/ControlledBuffer/ControlledBufferRegister.js","../../components/ControlledInverter/ControlledInverterWidget.jsx","../../components/ControlledInverter/ControlledInverterIcon.jsx","../../components/ControlledInverter/ControlledInverterModel.js","../../components/ControlledInverter/ControlledInverterRegister.js","../../components/Counter/CounterWidget.jsx","../../components/Counter/CounterIcon.jsx","../../components/Counter/CounterModel.js","../../components/Counter/CounterRegister.js","../../components/Demux/DemuxWidget.jsx","../../components/Demux/DemuxIcon.jsx","../../components/Demux/DemuxModel.js","../../components/Demux/DemuxRegister.js","../../components/Ground/GroundWidget.jsx","../../components/Ground/GroundIcon.jsx","../../components/Ground/GroundModel.js","../../components/Ground/GroundRegister.js","../../components/Input/InputWidget.jsx","../../components/Input/InputIcon.jsx","../../components/Input/InputModel.js","../../components/Input/InputRegister.js","../../components/Joiner/JoinerWidget.jsx","../../components/Joiner/JoinerIcon.jsx","../../components/Joiner/JoinerModel.js","../../components/Joiner/JoinerRegister.js","../../components/Led/LedWidget.jsx","../../components/Led/LedIcon.jsx","../../components/Led/LedModel.js","../../components/Led/LedRegister.js","../../components/Mux/MuxWidget.jsx","../../components/Mux/MuxIcon.jsx","../../components/Mux/MuxModel.js","../../components/Mux/MuxRegister.js","../../components/Nand/NandWidget.jsx","../../components/Nand/NandIcon.jsx","../../components/Nand/NandModel.js","../../components/Nand/NandRegister.js","../../components/Nor/NorWidget.jsx","../../components/Nor/NorIcon.jsx","../../components/Nor/NorModel.js","../../components/Nor/NorRegister.js","../../components/Not/NotWidget.jsx","../../components/Not/NotIcon.jsx","../../components/Not/NotModel.js","../../components/Not/NotRegister.js","../../components/Or/OrWidget.jsx","../../components/Or/OrIcon.jsx","../../components/Or/OrModel.js","../../components/Or/OrRegister.js","../../components/Output/OutputWidget.jsx","../../components/Output/OutputIcon.jsx","../../components/Output/OutputModel.js","../../components/Output/OutputRegister.js","../../components/Power/PowerWidget.jsx","../../components/Power/PowerIcon.jsx","../../components/Power/PowerModel.js","../../components/Power/PowerRegister.js","../../components/Ram/RamIcon.jsx","../../components/Ram/RamModel.js","../../components/Ram/RamWidget.jsx","../../components/Ram/RamRegister.js","../../components/Rom/RomIcon.jsx","../../components/Rom/RomModel.js","../../components/Rom/RomWidget.jsx","../../components/Rom/RomRegister.js","../../components/Splitter/SplitterWidget.jsx","../../components/Splitter/SplitterIcon.jsx","../../components/Splitter/SplitterModel.js","../../components/Splitter/SplitterRegister.js","../../components/Ssd/SsdWidget.jsx","../../components/Ssd/SsdIcon.jsx","../../components/Ssd/SsdModel.js","../../components/Ssd/SsdRegister.js","../../components/Switch/SwitchWidget.jsx","../../components/Switch/SwitchIcon.jsx","../../components/Switch/SwitchModel.js","../../components/Switch/SwitchRegister.js","../../components/Xnor/XnorWidget.jsx","../../components/Xnor/XnorIcon.jsx","../../components/Xnor/XnorModel.js","../../components/Xnor/XnorRegister.js","../../components/Xor/XorWidget.jsx","../../components/Xor/XorIcon.jsx","../../components/Xor/XorModel.js","../../components/Xor/XorRegister.js","../../components/index.js","ui-components/Buttons/ComponentSelectButton.jsx","ui-components/Icons/ArrowLeft.jsx","ui-components/Icons/Chevron.jsx","ui-components/Icons/Chevrons.jsx","ui-components/Icons/Close.jsx","ui-components/Icons/Copy.jsx","ui-components/Icons/Cut.jsx","ui-components/Icons/Delete.jsx","ui-components/Icons/Duplicate.jsx","ui-components/Icons/Edit.jsx","ui-components/Icons/Paste.jsx","ui-components/Icons/Pause.jsx","ui-components/Icons/Play.jsx","ui-components/Icons/Redo.jsx","ui-components/Icons/Settings.jsx","ui-components/Icons/Stop.jsx","ui-components/Icons/Undo.jsx","ui-components/Icons/ZoomIn.jsx","ui-components/Icons/ZoomOut.jsx","ui-components/Buttons/SimulationControlButtons.jsx","ui-components/Modal/Modal.jsx","ui-components/Modal/ModalContentLayout.jsx","ui-components/ComponentSelect/ComponentConfigurationInput.jsx","ui-components/ComponentSelect/DraggableComponent.jsx","ui-components/ComponentSelect/ComponentConfiguration.jsx","ui-components/ComponentSelect/ComponentEdit.jsx","ui-components/ComponentSelect/ComponentGroup.jsx","ui-components/ComponentSelect/ComponentSearch.jsx","ui-components/ComponentSelect/ComponentSelect.jsx","ui-components/Key/Key.jsx","ui-components/ContextMenus/ContextMenuIconContainer.jsx","ui-components/ContextMenus/ContextMenuShortcutContainer.jsx","ui-components/ContextMenus/ComponentContextMenu.jsx","ui-components/ContextMenus/DiagramContextMenu.jsx","ui-components/ContextMenus/ContextMenus.jsx","ui-components/Help/HelpAbout.jsx","ui-components/Help/HelpKeyboardShortcuts.jsx","ui-components/LoadingExample/LoadingExample.jsx","ui-components/Snackbar/Snackbar.jsx","ui-components/Titlebar/Titlebar.jsx","ui-components/Tour/tourCircuit.js","ui-components/Tour/Tour.jsx","App.jsx","serviceWorker.js","../../core/common/prototype.js","index.js"],"names":["module","exports","Worker","snap","position","gridSize","Point","Math","round","x","y","samePosition","p1","p2","sameX","points","map","p","every","i","arr","sameY","sameAxis","closestPointToLink","P","link","distance","A","B","hypot","closestPointOnSegment","Q","segment","v","u","t","closest","point","distanceToA","distanceToB","hasMiddlePoint","getFirstPosition","getLastPosition","firstSegment","getMiddlePosition","lastSegment","isPointOverSegment","max","min","isPointOverLink","getSecondPosition","isPointOverFirstLinkSegment","isPointOverSecondLinkSegment","getLandingLink","engine","getLastPoint","getPosition","Object","values","getModel","getLinkLayers","getLinks","find","target","getID","getIncompatibleWidthsErrorMessage","source","getBits","MAX_VALUE","1","2","4","8","16","isValueValid","value","Array","isArray","isValueError","some","LinkModel","options","type","bifurcations","bifurcationSource","bifurcationTarget","bits","this","getParent","getOptions","label","LabelModel","newLabel","DefaultLabelModel","setLabel","getBifurcationSource","getBifurcationTarget","bifurcation","push","filter","b","result","forEach","getAllBifurcations","flat","Infinity","selected","setSelected","getSourcePort","getTargetPort","remove","removeBifurcation","event","registerModel","data","requestAnimationFrame","PointModel","then","addBifurcation","setBifurcationSource","setBifurcationTarget","repaintCanvas","pointModel","index","setPosition","getGridSize","getPoints","length","getFirstPoint","getSecondPoint","getMiddlePoint","getSecondLastPoint","first","middle","last","includes","Error","isSelected","asNumber","getComputedStyle","document","body","getPropertyValue","RDLinkModel","validateDefaultValue","portName","PortModel","maximumLinks","input","defaultFloatingValue","defaultErrorValue","getName","fill","bit","getDefaultFloatingValue","getDefaultErrorValue","keys","getMaximumLinks","port","isNewLinkAllowed","setBits","links","getMainLink","getColor","RDPortModel","AudioEngine","context","AudioContext","destination","audios","id","frequency","waveform","gainNode","createGain","gain","oscillator","createOscillator","connect","start","getGainNode","e","disconnect","getOscillator","payload","command","create","play","pause","setFrequency","setWaveform","getAudio","audio","stop","serializeComponents","components","component","getType","configurations","ports","name","isInput","properties","instance","key","reduce","obj","getPortInfo","componentId","getLinkId","serialize","diagram","models","Class","Model","methods","getOwnPropertyNames","prototype","methodName","toString","getActiveLinkLayer","getModels","getBifurcations","isBifurcation","getActiveNodeLayer","worker","SimulationWorker","SimulationEngine","onSimulationMessage","appendDiff","audioEngine","handlePayload","cleanUp","addEventListener","state","clearDiff","postMessage","undefined","a","Promise","resolve","waitForEnd","removeEventListener","diff","getPort","nameOrInstance","BaseModel","initialize","floating","error","setAsInput","setDefaultFloatingValue","setDefaultErrorValue","setAsOutput","configuration","addInputPort","isOutput","addOutputPort","fromEntries","entries","getPorts","args","clone","getX","getY","from","emitted","emit","NodeModel","ComponentContext","React","createContext","Component","description","group","model","widget","icon","Widget","Icon","storeRef","Provider","initialConfig","AbstractReactFactory","DiagramContext","DroppableLayer","styled","div","attrs","disabled","props","onDragOver","preventDefault","onDrop","JSON","parse","dataTransfer","getData","handleComponentDrop","FullscreenCanvas","CanvasWidget","Diagram","test","isLocked","getEngine","LinkWidget","refPaths","updateRenderedPaths","clearRenderedPaths","setRenderedPaths","ref","current","to","tuple","path","factory","createRef","cloneElement","generateLinkSegment","loose","color","r","getPointRadius","stroke","strokeWidth","cx","cy","bifurcationOrigin","lastSourcePoint","renderPoint","bifurcationTargetPosition","data-default-link-test","testName","generatePathPoints","renderSegment","generateLinePath","renderBifurcationSourcePoint","renderBifurcationTargetPoint","renderLooseLinkPoint","Path","LinkFactory","diagramEngine","getLineWidth","d","DefaultLinkFactory","PortFactory","AbstractModelFactory","ClipboardAction","areShortcutsAllowed","InputType","KEY_DOWN","fire","matchesInput","code","handleCut","handleCopy","handlePaste","ctrlKey","getSelectedComponents","getSelectedEntities","entity","copies","fireEvent","nodes","node","getAllLinks","localStorage","setItem","stringify","clipboard","getItem","clearSelection","serialized","modelInstance","getChildModelFactoryBank","getFactory","generateModel","deserialize","addNode","Action","DeleteAction","handleAction","entities","nodesLinks","DuplicateAction","clones","UndoRedoAction","shiftKey","handleUndo","handleRedo","commands","undo","redo","ZOOM_LEVELS","ZoomAction","MOUSE_WHEEL","stopPropagation","getLayers","layer","allowRepaint","nextZoomLevelIndex","zoomDirection","sign","deltaY","currentZoomLevelIndex","indexOf","getZoomLevel","oldZoomFactor","setZoomLevel","zoomFactor","boundingRect","getCanvas","getBoundingClientRect","clientWidth","width","clientHeight","height","widthDiff","heightDiff","clientX","left","clientY","top","xFactor","getOffsetX","yFactor","getOffsetY","setOffset","commandHandlers","editComponentConfiguration","adjustLink","nodeList","sourcePort","n","setSourcePort","addLink","targetPort","setTargetPort","componentsAdded","add","execute","componentEdited","after","before","linkAdded","linkChanged","handleLinkChanged","getLink","setPoints","oldTarget","entitiesRemoved","sort","l1","l2","entitiesMoved","handleEntitiesMoved","getNode","Command","CommandManager","clear","stack","nextLinkPosition","initialRelative","sourcePosition","zoomLevelPercentage","engineOffsetX","engineOffsetY","getRelativePoint","initialXRelative","initialYRelative","linkNextX","virtualDisplacementX","linkNextY","virtualDisplacementY","handleLinkDrag","next","hasStartedMoving","removePoint","moveDirection","addPoint","generatePoint","WrappedComponent","BifurcateLinkState","showSnackbar","sourceEdited","sourceBefore","getLinkPoints","registerAction","MOUSE_DOWN","getMouseElement","snapPointToSourceLink","getRelativeMousePoint","eject","getLinkFactories","MOUSE_UP","isNearbySourcePosition","reportPosition","adjustBifurcationOverlayingSource","landing","mergeWithBifurcation","sourcePoints","closestCorner","getClosestCornerToPosition","closestPath","getClosestPathToPosition","snappedPosition","axis","sourcePoint","getPathPoints","pathPosition","getPathDirections","abs","secondLast","getSecondLastPosition","bifurcationToMerge","newMiddle","newLast","isStraight","adjustBifurcationPoints","newSource","call","AbstractDisplacementState","DragCanvasState","prev","initialCanvasX","initialCanvasY","nativeEvent","which","targetTouches","displacementX","displacementY","DragNewLinkState","createLinkModel","getPrototypeOf","isNearbySourcePort","canLinkToPort","reverse","getFactoryForLink","tolerance","sourcePortSize","sourcePortPosition","MoveItemsState","getNodesPositions","getLinksPoints","adjustLinkPoints","linkDirections","adjustLinkBifurcations","lastDisplacement","element","getActionEventBus","getModelForEvent","getLinkDirections","nodesBefore","linksBefore","previous","initialPositions","entry","getBifurcatedLinks","getLinksFromNode","acc","getLinkDirection","currentDisplacement","moveEntity","adjustNodeLinks","item","initial","getGridPosition","adjustFirstAndLastPoints","closestToFirst","closestToLast","SelectionBoxState","SelectionLayerModel","addLayer","rel","right","bottom","setBox","getBoxDimensions","relative","initialX","initialY","rect","Rectangle","getSelectionEntities","getBoundingBox","allowSelection","bounds","containsPoint","getTopLeft","getBottomRight","SelectingState","transitionWithEvent","State","States","childStates","dragCanvas","dragNewLink","bifurcateLink","dragItems","TOUCH_START","DiagramEngine","initializeEngine","createEngine","registerDefaultDeleteItemsAction","registerDefaultZoomCanvasAction","registerListener","getStateMachine","pushState","getPortFactories","registerFactory","registerComponents","initializeModel","DiagramModel","setGridSize","setLocked","eventDidFire","function","adjustGridOffset","adjustGridZoom","realignGrid","setModel","getNodeFactories","load","circuit","deserializeModel","locked","repaint","offsetX","offsetY","zoom","style","setProperty","c","getSnappedRelativeMousePoint","window","innerWidth","innerHeight","getSnappedWindowCenter","handleComponentEdit","configurationsBefore","portsBefore","hasNewPort","newPort","hasRemovedPort","oldPort","portBefore","getSelectedNodes","fireAction","duplicateSelected","cutSelected","copySelected","pasteSelected","deleteSelected","zoomIn","zoomOut","synchronizeLink","setValue","synchronizeComponent","output","clearAllValues","clearLinkValues","clearPortValues","getNodes","Circle","Port","className","data-name","data-nodeid","title","PortWidget","withProps","useContext","distributePorts","numPorts","isNumberOfPortsEven","closestEven","startAt","floor","splice","PortExtensionBar","size","place","PortExtension","portPositions","lastPortPosition","Wrapper","PositionedPort","Shape","viewBox","transform","AndWidget","inputPorts","getInputPorts","AndIcon","AndModel","INPUT_PORTS_NUMBER","Number","dataBits","DATA_BITS","out","asArray","transpose","executeBit","step","default","validate","BufferWidget","BufferIcon","BufferModel","in","Button","button","ButtonWidget","buttonRef","useRef","handleReleaseAway","contains","onRelease","useEffect","onMouseDown","onClick","onMouseUp","ButtonIcon","as","ButtonModel","Body","isActive","Hole","children","data-testid","BuzzerWidget","BuzzerIcon","BuzzerModel","frequencyHz","FREQUENCY_HZ","WAVEFORM","createAudio","getInput","getValue","Decoration","periodMs","animateTransition","transformOrigin","transition","ClockWidget","ClockIcon","ClockModel","emitInterval","highCount","lowCount","setInterval","lastOutput","getNextOutput","HIGH_DURATION","LOW_DURATION","clearInterval","getOutput","x1","y1","x2","y2","ControlledBufferWidget","ControlledBufferIcon","ControlledBufferModel","control","stepFloating","ControlledInverterWidget","ControlledInverterIcon","ControlledInverterModel","PositionedChevron","strokeLinecap","CounterWidget","CounterIcon","CounterModel","countOnRising","COUNT_ON","START_AT","wrapAt","WRAP_AT","stepValue","STEP_VALUE","meta","risingEdge","fallingEdge","isRisingEdge","outputNumber","DemuxWidget","outputPorts","getOutputPorts","DemuxIcon","DemuxModel","OUTPUT_NUMBER","log2","_","selection","strokeLinejoin","GroundWidget","GroundIcon","GroundModel","SHAPE_SIZES","PIN_BACKGROUND","0","PIN_BORDER","PinContainer","Pin","InputWidget","getBitAt","InputIcon","InputModel","threeState","THREE_STATE","nextValue","bitHeight","JoinerWidget","JoinerIcon","JoinerModel","LedWidget","LedIcon","LedModel","activeWhen","ACTIVE_WHEN","colors","on","ON_COLOR","off","OFF_COLOR","inputNumber","MuxWidget","MuxIcon","MuxModel","INPUT_NUMBER","NandWidget","NandIcon","NandModel","PortExtensionConnector","NorWidget","NorIcon","NorModel","NotWidget","NotIcon","NotModel","OrWidget","OrIcon","OrModel","format","span","ErrorMessage","FloatingMessage","OutputWidget","OUTPUT_FORMAT","mapBits","number","padStart","showAsNumber","OutputIcon","OutputModel","fillOpacity","PowerWidget","PowerIcon","PowerModel","RamIcon","RamModel","dataWidth","DATA_WIDTH","addressWidth","ADDRESS_WIDTH","memory","CONTENT","parseBinary","select","currentAddress","address","clearMemory","clock","getWireValue","Memory","Cell","ActiveAddress","AddressValueContainer","Address","Value","RamWidget","getMemory","selectedAddress","getAddress","range","getMemoryDisplayRange","slice","formattedAddress","RomIcon","RomModel","RomWidget","SplitterWidget","SplitterIcon","SplitterModel","SEGMENTS","horizontal","vertical","segments","opacity","f","g","dp","getPositionForSegment","SsdIcon","Switch","SwitchValue","SwitchWidget","SwitchIcon","SwitchModel","mask","XnorWidget","XnorIcon","XnorModel","behavior","MULTIPLE_INPUT_BEHAVIOR","executeOne","executeEven","bind","XorWidget","XorIcon","XorModel","executeOdd","Input","Output","Clock","Led","Ssd","Buzzer","And","Nand","Or","Nor","Xor","Xnor","Buffer","Not","ControlledBuffer","ControlledInverter","Splitter","Joiner","Power","Ground","Mux","Demux","Ram","Rom","Counter","groupedComponents","Container","ComponentSelectButton","handleClick","data-for","data-tip","data-place","ArrowLeft","Chevron","Chevrons","Close","Copy","rx","ry","Cut","Delete","Duplicate","Edit","Paste","Pause","Play","Redo","Settings","Stop","Undo","ZoomIn","ZoomOut","SimulationControlButtons","handleClickStart","handleClickPause","handleClickStop","Overlay","Window","Modal","Header","Title","h1","Subtitle","h2","Content","IconButton","form","field","componentType","innerRef","htmlFor","option","accept","onChange","files","handleError","fr","FileReader","onerror","onload","file","setFieldValue","exception","readAsText","ComponentConfigurationInput","errors","diagramEngineStub","getPortCoords","getWidth","getHeight","getTooltip","ErrorWidget","DraggableComponent","handleClose","draggable","onDragStart","setDragImage","currentTarget","setData","Tooltip","hide","DragArea","FormScroll","Form","BaseForm","Footer","Hint","SubmitButton","getInitialValues","ComponentConfiguration","editMode","handleBack","handleSubmit","firstInputRef","focus","rebuild","initialValues","onSubmit","isValid","autoComplete","getFormSubmitLabel","ComponentEdit","isOpen","callback","useCallback","closeOnEsc","edit","HorizontalSeparator","hr","ComponentsGrid","ComponentButton","ComponentTitle","ComponentIcon","ComponentGroup","handleComponentSelect","useState","setOpen","SearchBar","Scroll","ComponentSearch","groups","filteredGroups","setFilteredGroups","searchText","setSearchText","autoFocus","placeholder","like","RegExp","newFilteredGroups","match","handleSearchChange","onKeyDown","handleKeyDown","ComponentSelect","selectedComponent","setSelectedComponent","Key","ContextMenuIconContainer","ContextMenuShortcutContainer","ComponentContextMenu","configureComponent","DiagramContextMenu","ContextMenus","Version","Divider","HelpAbout","paddingTop","marginTop","overflowY","display","flexDirection","alignItems","src","process","alt","version","margin","textAlign","href","namespace","repo","TableContainer","Table","table","TableColumn","td","HelpKeyboardShortcuts","LoadingExample","BACKGROUND_COLOR","warning","info","success","open","Message","progress","keyframes","ProgressBar","paused","timeout","TRANSITION_DURATION","Snackbar","message","split","string","isHidden","NameContainer","isFocused","NameInput","ButtonsContainer","FileInput","HelpButton","HelpButtonMenu","HelpButtonMenuItem","HideButton","Titlebar","circuitName","isCircuitNameFocused","handleChangeCircuitName","handleFocusCircuitName","handleBlurCircuitName","handleClickSave","handleFileLoad","handleClickKeyboardShortcuts","handleClickRedoTour","handleClickAbout","helpButtonRef","helpMenuRef","nameInputRef","fileInputRef","isHelpMenuOpen","setHelpMenuOpen","setHidden","handleToggleHelpMenu","handleClickAway","onFocus","onBlur","blur","maxLength","click","hidden","DIMENSIONS","createdAt","updatedAt","layers","isSvg","transformed","labels","parentNode","and","not","pulse","Pulse","Beacon","forwardRef","imageStyle","alignSelf","borderRadius","boxShadow","marginBottom","Tour","recenterTourCircuit","currentStep","run","recenterCircuit","action","setTourRunning","loadCircuit","clearCircuit","EVENTS","STEP_AFTER","ACTIONS","NEXT","PREV","setState","TOUR_END","CLOSE","steps","content","placement","showProgress","disableOverlayClose","locale","skip","spotlightPadding","contextMenu","wire","simulation","lineHeight","showSkipButton","stepIndex","continuous","scrollToFirstStep","styles","tooltip","tooltipContent","fontSize","buttonBack","buttonNext","background","buttonSkip","border","back","close","beaconComponent","App","isComponentSelectOpen","isComponentEditOpen","isHelpKeyboardOpen","isHelpAboutOpen","isTourRunning","shortcutHandler","isStopped","showAddComponent","selectedNodes","showEditComponent","isRunning","handleClickLoad","isCircuitEmpty","loadFile","circuitCreatedAt","loadExample","isLoadingExample","fetch","response","json","loadHandler","lastSaved","isTourAvailable","confirm","removeItem","shouldWarnUnload","currentCircuit","lastSavedCircuit","unloadHandler","generateFile","returnValue","Date","autoSave","synchronizeSimulation","getDiff","componentDiff","renderSimulation","handleCircuitNameChange","handleCircuitNameFocus","handleCircuitNameBlur","blob","Blob","filename","replace","FileSaver","saveAs","getElementById","forceUpdate","hideAddComponent","componentEdit","hideEditComponent","showHelpTour","showHelpKeyboard","hideHelpKeyboard","showHelpAbout","hideHelpAbout","snackbar","clearTimeout","timeoutID","hideSnackbar","res","setTimeout","handleLoadTourCircuit","circuitBeforeTour","tourCircuit","handleCenterTourCircuitOffset","handleUnloadTourCircuit","example","URLSearchParams","location","search","get","autoSaveInterval","getState","globalEventOff","Boolean","hostname","curr","concat","String","char","arrayLength","fillWith","sanitize","chunk","parseInt","original","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f2df03e.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"SimulationWorker.8dc31bd963cb3fcf908e.js\");\n};","module.exports = __webpack_public_path__ + \"static/media/bifurcation.e3ec32b9.gif\";","module.exports = __webpack_public_path__ + \"static/media/context-menu.94343183.gif\";","module.exports = __webpack_public_path__ + \"static/media/simulation.2d0f910c.gif\";","module.exports = __webpack_public_path__ + \"static/media/wire.e7e521da.gif\";","import { Point } from '@projectstorm/geometry';\r\n\r\n/**\r\n * Returns a position, but snapped to the grid.\r\n */\r\nexport const snap = (position, gridSize = 15) => {\r\n  if (position instanceof Point) {\r\n    return new Point(\r\n      Math.round(position.x / gridSize) * gridSize,\r\n      Math.round(position.y / gridSize) * gridSize,\r\n    );\r\n  }\r\n\r\n  return Math.round(position / gridSize) * gridSize;\r\n};\r\n\r\n/**\r\n * Checks if two points are on the same position.\r\n */\r\nexport const samePosition = (p1, p2) =>\r\n  p1 &&\r\n  p2 &&\r\n  Math.round(p1.x) === Math.round(p2.x) &&\r\n  Math.round(p1.y) === Math.round(p2.y);\r\n\r\n/**\r\n * Checks if all given points share the same X position.\r\n */\r\nexport const sameX = (...points) =>\r\n  points.map(p => Math.round(p.x)).every((p, i, arr) => p === arr[0]);\r\n\r\n/**\r\n * Checks if all given points share the same Y position.\r\n */\r\nexport const sameY = (...points) =>\r\n  points.map(p => Math.round(p.y)).every((p, i, arr) => p === arr[0]);\r\n\r\n/**\r\n * Checks if all given points share positions on any axis.\r\n */\r\nexport const sameAxis = (...points) =>\r\n  sameX(...points) || sameY(...points);\r\n\r\n/**\r\n * Checks if two points are nearby each other, given a tolerance.\r\n */\r\nexport const nearby = (p1, p2, tolerance) =>\r\n  Math.abs(p1.x - p2.x) <= tolerance &&\r\n  Math.abs(p1.y - p2.y) <= tolerance;\r\n\r\n/**\r\n * Finds the closest position to a link from a given point.\r\n */\r\nexport const closestPointToLink = (P, link) => {\r\n  const distance = (A, B) => Math.hypot(A.x - B.x, A.y - B.y);\r\n\r\n  const closestPointOnSegment = (Q, segment) => {\r\n    const { A, B } = segment;\r\n\r\n    const v = new Point(B.x - A.x, B.y - A.y);\r\n    const u = new Point(A.x - Q.x, A.y - Q.y);\r\n\r\n    const vu = v.x * u.x + v.y * u.y;\r\n    const vv = v.x ** 2 + v.y ** 2;\r\n\r\n    const t = -vu / vv;\r\n\r\n    // Closest point lies between A and B\r\n    if (t >= 0 && t <= 1) {\r\n      const closest = new Point(\r\n        (1 - t) * A.x + t * B.x,\r\n        (1 - t) * A.y + t * B.y,\r\n      );\r\n      return {\r\n        point: closest,\r\n        distance: distance(Q, closest),\r\n      };\r\n    }\r\n\r\n    // Closest point is either A or B\r\n    const distanceToA = distance(Q, A);\r\n    const distanceToB = distance(Q, B);\r\n\r\n    return distanceToA <= distanceToB\r\n      ? { point: A, distance: distanceToA }\r\n      : { point: B, distance: distanceToB };\r\n  };\r\n\r\n  if (!link.hasMiddlePoint()) {\r\n    return closestPointOnSegment(P, {\r\n      A: link.getFirstPosition(),\r\n      B: link.getLastPosition(),\r\n    }).point;\r\n  }\r\n\r\n  const firstSegment = closestPointOnSegment(P, {\r\n    A: link.getFirstPosition(),\r\n    B: link.getMiddlePosition(),\r\n  });\r\n\r\n  const lastSegment = closestPointOnSegment(P, {\r\n    A: link.getMiddlePosition(),\r\n    B: link.getLastPosition(),\r\n  });\r\n\r\n  if (firstSegment.distance <= lastSegment.distance) {\r\n    return firstSegment.point;\r\n  }\r\n  return lastSegment.point;\r\n};\r\n\r\n/**\r\n * Determines is a point is over a given segment.\r\n */\r\nconst isPointOverSegment = (point, segment) => {\r\n  const { A, B } = segment;\r\n\r\n  if (sameX(A, point, B)) {\r\n    const max = Math.max(A.y, B.y);\r\n    const min = Math.min(A.y, B.y);\r\n\r\n    return min <= point.y && point.y <= max;\r\n  }\r\n\r\n  if (sameY(A, point, B)) {\r\n    const max = Math.max(A.x, B.x);\r\n    const min = Math.min(A.x, B.x);\r\n\r\n    return min <= point.x && point.x <= max;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n/**\r\n * Determines if a point is over a given link's first segment.\r\n */\r\nexport const isPointOverFirstLinkSegment = (point, link) =>\r\n  isPointOverSegment(point, {\r\n    A: link.getFirstPosition(),\r\n    B: link.getSecondPosition(),\r\n  });\r\n\r\n/**\r\n * Determines if a point is over a given link's second segment.\r\n */\r\nexport const isPointOverSecondLinkSegment = (point, link) => {\r\n  if (!link.hasMiddlePoint()) return false;\r\n\r\n  return isPointOverSegment(point, {\r\n    A: link.getSecondPosition(),\r\n    B: link.getLastPosition(),\r\n  });\r\n};\r\n\r\n/**\r\n * Determines if a point is over a given link.\r\n */\r\nexport const isPointOverLink = (point, link) =>\r\n  isPointOverFirstLinkSegment(point, link) ||\r\n  isPointOverSecondLinkSegment(point, link);\r\n\r\n/**\r\n * Searches for any link that the given link might be landing on.\r\n */\r\nexport const getLandingLink = (link, engine) => {\r\n  const point = link.getLastPoint().getPosition();\r\n\r\n  return Object.values(\r\n    engine\r\n      .getModel()\r\n      .getLinkLayers()[0]\r\n      .getLinks(),\r\n  ).find(target => {\r\n    if (target.getID() === link.getID()) return false;\r\n    return isPointOverLink(point, target);\r\n  });\r\n};\r\n\r\n/**\r\n * Generates the error message displayed to the user for incompatible\r\n * display widths.\r\n */\r\nexport const getIncompatibleWidthsErrorMessage = (\r\n  source,\r\n  target,\r\n) => `Incompatible bit widths!\r\n\\nSource: ${source.getBits()} bit${source.getBits() > 1 ? 's' : ''}\r\n\\nTarget: ${target.getBits()} bit${target.getBits() > 1 ? 's' : ''}`;\r\n","/* eslint-disable no-restricted-globals */\r\nexport const MIN_VALUE = 0;\r\nexport const MAX_VALUE = {\r\n  1: 0b1,\r\n  2: 0b11,\r\n  4: 0b1111,\r\n  8: 0b1111_1111,\r\n  16: 0b1111_1111_1111_1111,\r\n};\r\n\r\nexport const adjustValueToBits = (value, dataBits = 1) => {\r\n  if (typeof value !== 'number') return value;\r\n\r\n  const allBitsSet = 0b1111_1111_1111_1111_1111_1111_1111_1111;\r\n  const mask = allBitsSet >>> (32 - dataBits);\r\n\r\n  return value & mask;\r\n};\r\n\r\nexport const isValueEqual = (value1, value2) => {\r\n  return value1\r\n    .map((v1, index) => v1 === value2[index])\r\n    .every(Boolean);\r\n};\r\n\r\nexport const isValueValid = value =>\r\n  value === null ||\r\n  (Array.isArray(value) && value.every(v => typeof v === 'number'));\r\n\r\nexport const isInputValid = input =>\r\n  input.every(item => isValueValid(item.value, item.bits));\r\n\r\nexport const isValueError = value =>\r\n  value === 'e' ||\r\n  (Array.isArray(value) && value.some(v => v === 'e'));\r\n\r\nexport const isInputError = input =>\r\n  input.some(item => isValueError(item.value));\r\n\r\nexport const isValueFloating = value =>\r\n  value === 'x' ||\r\n  (Array.isArray(value) && value.some(v => v === 'x'));\r\n\r\nexport const isInputFloating = input =>\r\n  input.some(item => isValueFloating(item.value));\r\n\r\nexport const getCleanDiff = () => ({\r\n  components: {},\r\n  links: {},\r\n});\r\n\r\nexport const getComponent = id => {\r\n  if (!self.circuit) return null;\r\n\r\n  return (\r\n    self.circuit.components.find(component => component.id === id) ||\r\n    null\r\n  );\r\n};\r\n\r\n/**\r\n * Find all meshes that are affected by an emitted change.\r\n */\r\nexport const getAffectedMeshes = emitted =>\r\n  self.circuit.meshes.filter(mesh =>\r\n    mesh.inputs.some(\r\n      meshInput =>\r\n        emitted.from.id === meshInput.componentId &&\r\n        Object.keys(emitted.value).includes(meshInput.name),\r\n    ),\r\n  );\r\n\r\n/**\r\n * Finds all components that are connected on a given mesh's Input.\r\n */\r\nexport const getMeshInputComponents = mesh =>\r\n  [\r\n    ...new Set(mesh.inputs.map(meshInput => meshInput.componentId)),\r\n  ].map(componentId => getComponent(componentId));\r\n\r\n/**\r\n * Finds all components that are connected on a given mesh's output.\r\n */\r\nexport const getMeshOutputComponents = mesh =>\r\n  [\r\n    ...new Set(\r\n      mesh.outputs.map(meshOutput => meshOutput.componentId),\r\n    ),\r\n  ].map(componentId => getComponent(componentId));\r\n\r\n/**\r\n * Determines the mesh input value.\r\n */\r\nexport const getMeshInputValue = mesh => {\r\n  const allInputValues = mesh.inputs\r\n    .map(portInfo => {\r\n      const component = getComponent(portInfo.componentId);\r\n\r\n      /**\r\n       * From the mesh's perspective, a component's output port is an\r\n       * input.\r\n       */\r\n      const port = component.getOutputPort(portInfo.name);\r\n\r\n      return port ? port.value : null;\r\n    })\r\n    .filter(value => value !== null);\r\n\r\n  return [...Array(allInputValues[0].length).keys()]\r\n    .map(index => allInputValues.map(v => v[index]))\r\n    .map(arr => {\r\n      const firstDefinedValue = arr.find(\r\n        value => typeof value === 'number',\r\n      );\r\n\r\n      const areBitsCompatible = arr.every(\r\n        item => item === firstDefinedValue || item === 'x',\r\n      );\r\n\r\n      if (!areBitsCompatible) return 'e';\r\n      if (typeof firstDefinedValue === 'number')\r\n        return firstDefinedValue;\r\n      return 'x';\r\n    });\r\n};\r\n\r\n/**\r\n * Initialize all links and ports with the floating value.\r\n */\r\nexport const initializeDiffAndValues = () => {\r\n  self.circuit.components.forEach(component => {\r\n    component.setInputValues(\r\n      Object.fromEntries(\r\n        component.ports.input.map(port => [\r\n          port.id,\r\n          new Array(port.bits || 1).fill('x'),\r\n        ]),\r\n      ),\r\n    );\r\n    component.setOutputValues(\r\n      Object.fromEntries(\r\n        component.ports.output.map(port => [\r\n          port.id,\r\n          new Array(port.bits || 1).fill('x'),\r\n        ]),\r\n      ),\r\n    );\r\n  });\r\n\r\n  const diffLinks = self.circuit.meshes\r\n    .map(mesh => mesh.links)\r\n    .flat()\r\n    .reduce((obj, link) => {\r\n      const { bits } = self.circuit.meshes.find(mesh =>\r\n        mesh.links.includes(link),\r\n      );\r\n\r\n      return { ...obj, [link]: Array(bits).fill('x') };\r\n    }, {});\r\n\r\n  const diffComponents = Object.fromEntries(\r\n    self.circuit.components.map(component => [\r\n      component.id,\r\n      {\r\n        output: Object.fromEntries(\r\n          [\r\n            ...component.ports.input,\r\n            ...component.ports.output,\r\n          ].map(port => [\r\n            port.name,\r\n            new Array(port.bits || 1).fill('x'),\r\n          ]),\r\n        ),\r\n        properties: component.getProperties(),\r\n      },\r\n    ]),\r\n  );\r\n\r\n  postMessage({\r\n    type: 'diff',\r\n    payload: { links: diffLinks, components: diffComponents },\r\n  });\r\n};\r\n\r\nexport const appendComponentDiff = (component, output) => {\r\n  if (!self.diff.components[component.id]) {\r\n    self.diff.components[component.id] = {\r\n      output: {},\r\n      properties: {},\r\n    };\r\n  }\r\n  self.diff.components[component.id] = {\r\n    ...self.diff.components[component.id],\r\n    output: self.diff.components[component.id].output\r\n      ? {\r\n          ...self.diff.components[component.id].output,\r\n          ...(output || {}),\r\n        }\r\n      : output || {},\r\n    properties: component.getProperties(),\r\n  };\r\n};\r\n","import { Point } from '@projectstorm/geometry';\r\nimport {\r\n  PointModel,\r\n  LabelModel,\r\n  LinkModel as RDLinkModel,\r\n} from '@projectstorm/react-diagrams';\r\nimport { DefaultLabelModel } from '@projectstorm/react-diagrams-defaults';\r\n\r\nimport { snap, sameAxis } from '../Diagram/states/common';\r\nimport {\r\n  isValueError,\r\n  isValueValid,\r\n  MAX_VALUE,\r\n} from '../Simulation/utils';\r\n\r\nexport default class LinkModel extends RDLinkModel {\r\n  constructor(options) {\r\n    super({\r\n      type: 'link',\r\n      ...options,\r\n    });\r\n\r\n    this.bifurcations = [];\r\n    this.bifurcationSource = null;\r\n    this.bifurcationTarget = null;\r\n\r\n    this.value = null;\r\n    this.bits = null;\r\n  }\r\n\r\n  getGridSize() {\r\n    return this.getParent()\r\n      .getParent()\r\n      .getOptions().gridSize;\r\n  }\r\n\r\n  addLabel(label) {\r\n    if (label instanceof LabelModel) {\r\n      return super.addLabel(label);\r\n    }\r\n\r\n    const newLabel = new DefaultLabelModel();\r\n    newLabel.setLabel(label);\r\n    return super.addLabel(newLabel);\r\n  }\r\n\r\n  setBifurcationSource(link) {\r\n    this.bifurcationSource = link;\r\n  }\r\n\r\n  getBifurcationSource() {\r\n    return this.bifurcationSource;\r\n  }\r\n\r\n  setBifurcationTarget(link) {\r\n    this.bifurcationTarget = link;\r\n  }\r\n\r\n  getBifurcationTarget() {\r\n    return this.bifurcationTarget;\r\n  }\r\n\r\n  isBifurcation() {\r\n    return !!(\r\n      this.getBifurcationSource() || this.getBifurcationTarget()\r\n    );\r\n  }\r\n\r\n  addBifurcation(link) {\r\n    if (\r\n      this.bifurcations.find(\r\n        bifurcation => bifurcation.getID() === link.getID(),\r\n      )\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.bifurcations.push(link);\r\n  }\r\n\r\n  removeBifurcation(link) {\r\n    this.bifurcations = this.bifurcations.filter(\r\n      b => b.getID() !== link.getID(),\r\n    );\r\n  }\r\n\r\n  getBifurcations() {\r\n    return this.bifurcations;\r\n  }\r\n\r\n  getAllBifurcations() {\r\n    const result = [...this.bifurcations];\r\n    this.bifurcations.forEach(bifurcation =>\r\n      result.push(bifurcation.getAllBifurcations()),\r\n    );\r\n    return result.flat(Infinity);\r\n  }\r\n\r\n  getSelectionEntities() {\r\n    return [...super.getSelectionEntities(), ...this.bifurcations];\r\n  }\r\n\r\n  setSelected(selected) {\r\n    super.setSelected(selected);\r\n    this.bifurcations.forEach(b => b.setSelected(selected));\r\n\r\n    if (this.getSourcePort()) {\r\n      this.getSourcePort().setSelected(selected);\r\n    }\r\n    if (this.getTargetPort()) {\r\n      this.getTargetPort().setSelected(selected);\r\n    }\r\n  }\r\n\r\n  remove() {\r\n    this.bifurcations.forEach(bifurcation => bifurcation.remove());\r\n\r\n    if (this.bifurcationSource) {\r\n      this.bifurcationSource.removeBifurcation(this);\r\n    }\r\n\r\n    if (this.bifurcationTarget) {\r\n      this.bifurcationTarget.removeBifurcation(this);\r\n    }\r\n\r\n    super.remove();\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      ...super.serialize(),\r\n      bifurcations: this.bifurcations.map(b => b.getID()),\r\n      bifurcationSource: this.bifurcationSource\r\n        ? this.bifurcationSource.getID()\r\n        : null,\r\n      bifurcationTarget: this.bifurcationTarget\r\n        ? this.bifurcationTarget.getID()\r\n        : null,\r\n      value: this.value,\r\n      bits: this.bits,\r\n    };\r\n  }\r\n\r\n  deserialize(event) {\r\n    super.deserialize(event);\r\n\r\n    const {\r\n      getModel,\r\n      registerModel,\r\n      data: {\r\n        bifurcationSource,\r\n        bifurcationTarget,\r\n        bifurcations,\r\n        bits,\r\n      },\r\n    } = event;\r\n\r\n    registerModel(this);\r\n\r\n    requestAnimationFrame(() => {\r\n      this.bits = bits;\r\n\r\n      this.points = event.data.points.map(\r\n        point =>\r\n          new PointModel({\r\n            link: this,\r\n            position: new Point(point.x, point.y),\r\n          }),\r\n      );\r\n\r\n      bifurcations.forEach(b =>\r\n        getModel(b).then(bifurcation =>\r\n          this.addBifurcation(bifurcation),\r\n        ),\r\n      );\r\n\r\n      if (bifurcationSource) {\r\n        getModel(bifurcationSource).then(source =>\r\n          this.setBifurcationSource(source),\r\n        );\r\n      }\r\n\r\n      if (bifurcationTarget) {\r\n        getModel(bifurcationTarget).then(target =>\r\n          this.setBifurcationTarget(target),\r\n        );\r\n      }\r\n\r\n      event.engine.repaintCanvas();\r\n    });\r\n  }\r\n\r\n  addPoint(pointModel, index = 1) {\r\n    super.addPoint(pointModel, index);\r\n\r\n    return pointModel;\r\n  }\r\n\r\n  generatePoint(x, y) {\r\n    const point = super.generatePoint(x, y);\r\n    point.setPosition(\r\n      snap(x, this.getGridSize()),\r\n      snap(y, this.getGridSize()),\r\n    );\r\n\r\n    return point;\r\n  }\r\n\r\n  getMiddlePoint() {\r\n    if (!this.hasMiddlePoint()) return null;\r\n\r\n    return this.getPoints()[1];\r\n  }\r\n\r\n  getSecondPoint() {\r\n    return this.getPoints()[1];\r\n  }\r\n\r\n  getSecondLastPoint() {\r\n    const points = this.getPoints();\r\n    return points[points.length - 2];\r\n  }\r\n\r\n  getFirstPosition() {\r\n    return snap(\r\n      this.getFirstPoint().getPosition(),\r\n      this.getGridSize(),\r\n    );\r\n  }\r\n\r\n  getSecondPosition() {\r\n    return snap(\r\n      this.getSecondPoint().getPosition(),\r\n      this.getGridSize(),\r\n    );\r\n  }\r\n\r\n  getMiddlePosition() {\r\n    if (!this.hasMiddlePoint()) return null;\r\n\r\n    return snap(\r\n      this.getMiddlePoint().getPosition(),\r\n      this.getGridSize(),\r\n    );\r\n  }\r\n\r\n  getSecondLastPosition() {\r\n    return snap(\r\n      this.getSecondLastPoint().getPosition(),\r\n      this.getGridSize(),\r\n    );\r\n  }\r\n\r\n  getLastPosition() {\r\n    return snap(\r\n      this.getLastPoint().getPosition(),\r\n      this.getGridSize(),\r\n    );\r\n  }\r\n\r\n  hasMiddlePoint() {\r\n    return this.getPoints().length === 3;\r\n  }\r\n\r\n  isStraight() {\r\n    if (!this.hasMiddlePoint()) return true;\r\n\r\n    const first = this.getFirstPosition();\r\n    const middle = this.getMiddlePosition();\r\n    const last = this.getLastPosition();\r\n\r\n    if (sameAxis(first, middle, last)) return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  getBits() {\r\n    return this.bits;\r\n  }\r\n\r\n  setBits(bits) {\r\n    if (![1, 2, 4, 8, 16].includes(bits))\r\n      throw new Error(\r\n        '[logossim] Number of bits should be one of: 1, 2, 4, 8 or 16',\r\n      );\r\n\r\n    this.bits = bits;\r\n  }\r\n\r\n  getValue() {\r\n    return this.value;\r\n  }\r\n\r\n  setValue(value) {\r\n    this.value = value;\r\n  }\r\n\r\n  getColor() {\r\n    if (this.isSelected()) return 'var(--link-selected)';\r\n\r\n    if (!isValueValid(this.value, this.bits)) {\r\n      if (isValueError(this.value)) return 'var(--value-error)';\r\n      return 'var(--value-floating)';\r\n    }\r\n    if (this.value === null)\r\n      return `var(--link-${this.bits || 1}-bit-color)`;\r\n\r\n    return `var(--value-${Math.round(\r\n      (this.value.asNumber() / MAX_VALUE[this.bits]) * 10,\r\n    )})`;\r\n  }\r\n\r\n  getLineWidth() {\r\n    return `var(--link-${this.bits || 1}-bit-width)`;\r\n  }\r\n\r\n  getPointRadius() {\r\n    return getComputedStyle(document.body).getPropertyValue(\r\n      `--link-${this.bits || 1}-bit-join-radius`,\r\n    );\r\n  }\r\n}\r\n","import { PortModel as RDPortModel } from '@projectstorm/react-diagrams';\r\n\r\nimport LinkModel from '../Link/LinkModel';\r\n\r\nconst validateDefaultValue = (value, type, portName) => {\r\n  if (value === 0) return;\r\n  if (value === 1) return;\r\n  if (value === 'x') return;\r\n  if (value === 'e') return;\r\n\r\n  throw new Error(\r\n    `[logossim] Invalid default ${type} value provided for port \\`${portName}\\`. Should be either 0, 1, 'x' or 'e'.`,\r\n  );\r\n};\r\n\r\nexport default class PortModel extends RDPortModel {\r\n  constructor(options = {}) {\r\n    super({\r\n      type: 'Port',\r\n      maximumLinks: 1,\r\n      ...options,\r\n    });\r\n\r\n    this.value = null;\r\n    this.input = null;\r\n    this.bits = null;\r\n    this.defaultFloatingValue = null;\r\n    this.defaultErrorValue = null;\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      ...super.serialize(),\r\n      input: this.input,\r\n      value: this.value,\r\n      bits: this.bits,\r\n      defaultFloatingValue: this.defaultFloatingValue,\r\n      defaultErrorValue: this.defaultErrorValue,\r\n    };\r\n  }\r\n\r\n  deserialize(event, engine) {\r\n    super.deserialize(event, engine);\r\n    this.value = event.data.value;\r\n    this.input = event.data.input;\r\n    this.bits = event.data.bits;\r\n    this.defaultFloatingValue = event.data.defaultFloatingValue;\r\n    this.defaultErrorValue = event.data.defaultErrorValue;\r\n  }\r\n\r\n  setAsInput() {\r\n    this.input = true;\r\n  }\r\n\r\n  setAsOutput() {\r\n    this.input = false;\r\n  }\r\n\r\n  isInput() {\r\n    return this.input === true;\r\n  }\r\n\r\n  isOutput() {\r\n    return this.input === false;\r\n  }\r\n\r\n  getBits() {\r\n    return this.bits;\r\n  }\r\n\r\n  setBits(bits) {\r\n    if (![1, 2, 4, 8, 16].includes(bits))\r\n      throw new Error(\r\n        '[logossim] Number of bits should be one of: 1, 2, 4, 8 or 16',\r\n      );\r\n\r\n    this.bits = bits;\r\n  }\r\n\r\n  setDefaultFloatingValue(defaultFloatingValue) {\r\n    validateDefaultValue(\r\n      defaultFloatingValue,\r\n      'floating',\r\n      this.getName(),\r\n    );\r\n\r\n    this.defaultFloatingValue = defaultFloatingValue;\r\n  }\r\n\r\n  getDefaultFloatingValue() {\r\n    return this.defaultFloatingValue;\r\n  }\r\n\r\n  setDefaultErrorValue(defaultErrorValue) {\r\n    validateDefaultValue(defaultErrorValue, 'error', this.getName());\r\n\r\n    this.defaultErrorValue = defaultErrorValue;\r\n  }\r\n\r\n  getDefaultErrorValue() {\r\n    return this.defaultErrorValue;\r\n  }\r\n\r\n  getValue() {\r\n    if (this.value === null) return Array(this.bits).fill(0);\r\n\r\n    return this.value.map(bit => {\r\n      if (bit === 'x') return this.getDefaultFloatingValue();\r\n      if (bit === 'e') return this.getDefaultErrorValue();\r\n      return bit;\r\n    });\r\n  }\r\n\r\n  setValue(value) {\r\n    this.value = value;\r\n  }\r\n\r\n  isNewLinkAllowed() {\r\n    return (\r\n      Object.keys(this.getLinks()).length < this.getMaximumLinks()\r\n    );\r\n  }\r\n\r\n  canLinkToPort(port) {\r\n    return port.isNewLinkAllowed() && this.getID() !== port.getID();\r\n  }\r\n\r\n  createLinkModel() {\r\n    if (this.isNewLinkAllowed()) {\r\n      const link = new LinkModel();\r\n      link.setBits(this.bits);\r\n      return link;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getMainLink() {\r\n    const links = Object.values(this.getLinks());\r\n    return links.length > 0 ? links[0] : null;\r\n  }\r\n\r\n  getColor() {\r\n    const link = this.getMainLink();\r\n    if (link) return link.getColor();\r\n\r\n    return 'var(--port-unconnected)';\r\n  }\r\n}\r\n","export default class AudioEngine {\r\n  constructor() {\r\n    this.context = new AudioContext();\r\n    this.destination = this.context.destination;\r\n    this.audios = {};\r\n  }\r\n\r\n  create({ id, frequency = 1000, waveform = 'sine' }) {\r\n    const gainNode = this.context.createGain();\r\n    gainNode.gain.value = 0.5;\r\n\r\n    const oscillator = this.context.createOscillator();\r\n    oscillator.type = waveform;\r\n    oscillator.frequency.value = frequency;\r\n    oscillator.connect(gainNode);\r\n    oscillator.start();\r\n\r\n    this.audios[id] = { gainNode, oscillator };\r\n  }\r\n\r\n  play({ id }) {\r\n    try {\r\n      this.getGainNode(id).connect(this.destination);\r\n    } catch (e) {\r\n      // Suppress\r\n    }\r\n  }\r\n\r\n  pause({ id }) {\r\n    try {\r\n      this.getGainNode(id).disconnect(this.destination);\r\n    } catch (e) {\r\n      // Suppress\r\n    }\r\n  }\r\n\r\n  setFrequency({ id, frequency }) {\r\n    this.getOscillator(id).frequency.value = frequency;\r\n  }\r\n\r\n  setWaveform({ id, waveform }) {\r\n    this.getOscillator(id).type = waveform;\r\n  }\r\n\r\n  handlePayload(payload) {\r\n    switch (payload.command) {\r\n      case 'create':\r\n        this.create(payload);\r\n        break;\r\n      case 'play':\r\n        this.play(payload);\r\n        break;\r\n      case 'pause':\r\n        this.pause(payload);\r\n        break;\r\n      case 'setFrequency':\r\n        this.setFrequency(payload);\r\n        break;\r\n      case 'setWaveform':\r\n        this.setWaveform(payload);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  getOscillator(id) {\r\n    return this.getAudio(id).oscillator;\r\n  }\r\n\r\n  getGainNode(id) {\r\n    return this.getAudio(id).gainNode;\r\n  }\r\n\r\n  getAudio(id) {\r\n    const audio = this.audios[id];\r\n\r\n    if (!audio)\r\n      throw new Error(\r\n        `[logossim] Audio with id ${id} was not found.`,\r\n      );\r\n\r\n    return audio;\r\n  }\r\n\r\n  cleanUp() {\r\n    Object.values(this.audios).forEach(audio =>\r\n      audio.oscillator.stop(),\r\n    );\r\n    this.audios = [];\r\n  }\r\n}\r\n","/**\r\n * In order to execute the simulation workload on a Web Worker, we\r\n * need to serialize some component properties and methods to send\r\n * them to the worker.\r\n */\r\n\r\n/* ---------------------------------------------------------------- */\r\n\r\n/**\r\n * Receives a component instance and returns the name of all custom\r\n * properties.\r\n */\r\nconst getComponentPropertyNames = instance =>\r\n  Object.keys(instance).filter(\r\n    key =>\r\n      ![\r\n        'listeners',\r\n        'options',\r\n        'position',\r\n        'ports',\r\n        'width',\r\n        'height',\r\n        'configurations',\r\n        'parent',\r\n      ].includes(key),\r\n  );\r\n\r\n/**\r\n * Receives a component class and returns the name of all custom\r\n * methods.\r\n */\r\nconst getModelMethodNames = Class =>\r\n  Object.getOwnPropertyNames(Class.prototype).filter(\r\n    methodName => !['constructor'].includes(methodName),\r\n  );\r\n\r\nconst serializeModels = components =>\r\n  components.map(component => {\r\n    const { type, Model } = component;\r\n\r\n    return {\r\n      type,\r\n      methods: getModelMethodNames(Model).reduce(\r\n        (obj, name) => ({\r\n          ...obj,\r\n          [name]: Model.prototype[name].toString(),\r\n        }),\r\n        {},\r\n      ),\r\n    };\r\n  });\r\n\r\nconst serializePorts = ports =>\r\n  Object.values(ports).map(port => ({\r\n    id: port.getID(),\r\n    name: port.getName(),\r\n    input: port.isInput(),\r\n    bits: port.getBits(),\r\n    defaultFloatingValue: port.getDefaultFloatingValue(),\r\n    defaultErrorValue: port.getDefaultErrorValue(),\r\n  }));\r\n\r\n/**\r\n * Prepares a list of component instances to transfer, including\r\n * configuration and instance properties.\r\n */\r\nconst serializeComponents = components =>\r\n  components.map(component => ({\r\n    id: component.getID(),\r\n    type: component.getType(),\r\n    configurations: component.configurations,\r\n    ports: serializePorts(component.ports),\r\n    properties: getComponentPropertyNames(component).reduce(\r\n      (obj, key) => ({ ...obj, [key]: component[key] }),\r\n      {},\r\n    ),\r\n  }));\r\n\r\nconst getPortInfo = port =>\r\n  port\r\n    ? {\r\n        componentId: port.getParent().getID(),\r\n        name: port.getName(),\r\n        input: port.isInput(),\r\n      }\r\n    : null;\r\n\r\nconst getLinkId = link => (link ? link.getID() : null);\r\n\r\nconst serializeLinks = links =>\r\n  links.map(link => ({\r\n    id: link.getID(),\r\n    source: getPortInfo(link.getSourcePort()),\r\n    target: getPortInfo(link.getTargetPort()),\r\n    bifurcations: link\r\n      .getBifurcations()\r\n      .map(bifurcation => bifurcation.getID()),\r\n    bifurcation: {\r\n      source: getLinkId(link.getBifurcationSource()),\r\n      target: getLinkId(link.getBifurcationTarget()),\r\n    },\r\n    isBifurcation: link.isBifurcation(),\r\n    bits: link.getBits(),\r\n  }));\r\n\r\n/**\r\n * Prepares the whole diagram to be transferred.\r\n */\r\nconst serialize = (diagram, models) => ({\r\n  models: serializeModels(models),\r\n  links: serializeLinks(\r\n    Object.values(diagram.getActiveLinkLayer().getModels()),\r\n  ),\r\n  components: serializeComponents(\r\n    Object.values(diagram.getActiveNodeLayer().getModels()),\r\n  ),\r\n});\r\n\r\nexport default serialize;\r\n","import AudioEngine from './AudioEngine';\r\nimport serialize from './serialize';\r\nimport SimulationWorker from './simulation.worker';\r\nimport { getCleanDiff } from './utils';\r\n\r\nconst worker = new SimulationWorker();\r\n\r\n/**\r\n * SimulationEngine encapsulates SimulationWorker to act as an\r\n * interface to the application. It handles messaging with the worker,\r\n * keeping track of the `diff` being generated so the application can\r\n * use it to update itself.\r\n */\r\nexport default class SimulationEngine {\r\n  constructor(components) {\r\n    this.components = components;\r\n\r\n    this.worker = worker;\r\n    this.worker.addEventListener('message', this.onSimulationMessage);\r\n\r\n    this.audioEngine = new AudioEngine();\r\n\r\n    this.state = 'stopped';\r\n    this.clearDiff();\r\n  }\r\n\r\n  onSimulationMessage = ({ data: { type, payload } }) => {\r\n    if (type === 'diff') {\r\n      this.appendDiff(payload);\r\n    }\r\n\r\n    if (type === 'audio') {\r\n      this.audioEngine.handlePayload(payload);\r\n    }\r\n\r\n    if (type === 'clear') {\r\n      this.audioEngine.cleanUp();\r\n    }\r\n  };\r\n\r\n  start(diagram) {\r\n    this.worker.postMessage({\r\n      command: 'start',\r\n      diagram:\r\n        this.state === 'stopped'\r\n          ? serialize(diagram, this.components)\r\n          : undefined,\r\n    });\r\n    this.state = 'started';\r\n  }\r\n\r\n  pause() {\r\n    this.worker.postMessage({ command: 'pause' });\r\n    this.state = 'paused';\r\n  }\r\n\r\n  async stop() {\r\n    return new Promise(resolve => {\r\n      const waitForEnd = ({ data: { type } }) => {\r\n        if (type === 'clear') {\r\n          this.worker.removeEventListener('message', waitForEnd);\r\n          this.state = 'stopped';\r\n          resolve();\r\n        }\r\n      };\r\n      this.worker.addEventListener('message', waitForEnd);\r\n\r\n      this.worker.postMessage({ command: 'stop' });\r\n    });\r\n  }\r\n\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  isRunning() {\r\n    return this.state === 'started';\r\n  }\r\n\r\n  isPaused() {\r\n    return this.state === 'paused';\r\n  }\r\n\r\n  isStopped() {\r\n    return this.state === 'stopped';\r\n  }\r\n\r\n  getDiff() {\r\n    return this.diff;\r\n  }\r\n\r\n  clearDiff() {\r\n    this.diff = getCleanDiff();\r\n  }\r\n\r\n  appendDiff(diff) {\r\n    this.diff = {\r\n      components: { ...this.diff.components, ...diff.components },\r\n      links: { ...this.diff.links, ...diff.links },\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Emit is exported as a separate function so it can be used on\r\n * `BaseModel`.\r\n */\r\nexport const emit = (from, value) =>\r\n  worker.postMessage({\r\n    command: 'emit',\r\n    emitted: { from, value },\r\n  });\r\n","import { Point } from '@projectstorm/geometry';\r\nimport { NodeModel } from '@projectstorm/react-diagrams';\r\n\r\nimport PortModel from './Port/PortModel';\r\nimport { emit } from './Simulation/SimulationEngine';\r\n\r\nconst getPort = nameOrInstance => {\r\n  if (nameOrInstance instanceof PortModel) return nameOrInstance;\r\n  return new PortModel({ name: nameOrInstance });\r\n};\r\n\r\nexport default class BaseModel extends NodeModel {\r\n  constructor(configurations = {}, type = 'generic') {\r\n    super({ type });\r\n\r\n    this.initialize(configurations);\r\n\r\n    this.configurations = configurations;\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      ...super.serialize(),\r\n      configurations: this.configurations,\r\n    };\r\n  }\r\n\r\n  addInputPort(nameOrInstance, { bits, floating, error } = {}) {\r\n    const port = getPort(nameOrInstance);\r\n    port.setAsInput();\r\n    if (typeof nameOrInstance === 'string') {\r\n      port.setBits(bits || 1);\r\n      port.setDefaultFloatingValue(floating ?? 'x');\r\n      port.setDefaultErrorValue(error ?? 'e');\r\n    }\r\n    super.addPort(port);\r\n  }\r\n\r\n  addOutputPort(nameOrInstance, { bits } = {}) {\r\n    const port = getPort(nameOrInstance);\r\n    port.setAsOutput();\r\n    if (typeof nameOrInstance === 'string') {\r\n      port.setBits(bits || 1);\r\n      port.setDefaultFloatingValue('x');\r\n      port.setDefaultErrorValue('e');\r\n    }\r\n    super.addPort(port);\r\n  }\r\n\r\n  addPort(nameOrInstance, configuration) {\r\n    const port = getPort(nameOrInstance);\r\n\r\n    if (port.isInput()) {\r\n      this.addInputPort(port, configuration);\r\n      return;\r\n    }\r\n\r\n    if (port.isOutput()) {\r\n      this.addOutputPort(port, configuration);\r\n      return;\r\n    }\r\n\r\n    throw new Error(\r\n      '[logossim] Use either `addInputPort` or `addOutputPort`',\r\n    );\r\n  }\r\n\r\n  removePort(name) {\r\n    const port = getPort(name);\r\n    super.removePort(port);\r\n  }\r\n\r\n  getInputPorts() {\r\n    return Object.fromEntries(\r\n      Object.entries(this.getPorts()).filter(([, port]) =>\r\n        port.isInput(),\r\n      ),\r\n    );\r\n  }\r\n\r\n  getOutputPorts() {\r\n    return Object.fromEntries(\r\n      Object.entries(this.getPorts()).filter(\r\n        ([, port]) => !port.isInput(),\r\n      ),\r\n    );\r\n  }\r\n\r\n  getAllLinks() {\r\n    return Object.values(this.getPorts())\r\n      .map(port => port.getMainLink())\r\n      .filter(link => !!link)\r\n      .reduce(\r\n        (arr, link) => [...arr, link, ...link.getAllBifurcations()],\r\n        [],\r\n      );\r\n  }\r\n\r\n  clone(...args) {\r\n    const clone = super.clone(...args);\r\n    clone.setPosition(new Point(this.getX() + 15, this.getY() + 15));\r\n    return clone;\r\n  }\r\n\r\n  initialize() {}\r\n\r\n  onSimulationStart() {}\r\n\r\n  onSimulationPause() {}\r\n\r\n  onSimulationStop() {}\r\n\r\n  step() {}\r\n\r\n  emit(value) {\r\n    emit(this.getID(), value);\r\n  }\r\n\r\n  createAudio() {}\r\n}\r\n","import React from 'react';\r\n\r\nconst ComponentContext = React.createContext();\r\n\r\nexport default ComponentContext;\r\n","import React from 'react';\r\nimport { MenuProvider } from 'react-contexify';\r\n\r\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\r\n\r\nimport ComponentContext from './ComponentContext';\r\n\r\nexport default class Component extends AbstractReactFactory {\r\n  constructor({\r\n    type,\r\n    name,\r\n    description,\r\n    group,\r\n    configurations = [],\r\n    model,\r\n    widget,\r\n    icon,\r\n  }) {\r\n    super(type);\r\n    this.name = name;\r\n    this.description = description;\r\n    this.group = group;\r\n    this.configurations = configurations;\r\n    this.Model = model;\r\n    this.Widget = widget;\r\n    this.Icon = icon;\r\n  }\r\n\r\n  generateReactWidget(event) {\r\n    const { Widget } = this;\r\n    const { model } = event;\r\n\r\n    return (\r\n      <MenuProvider id=\"component\" storeRef={false} data={{component: model}}>\r\n        <ComponentContext.Provider value={model}>\r\n          <Widget model={model} />\r\n        </ComponentContext.Provider>\r\n      </MenuProvider>\r\n    );\r\n  }\r\n\r\n  generateModel(event) {\r\n    const { Model } = this;\r\n    const { configurations, type } = event.initialConfig;\r\n\r\n    return new Model(configurations, type);\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst DiagramContext = React.createContext();\r\n\r\nexport default DiagramContext;\r\n","import styled from 'styled-components';\r\n\r\nconst DroppableLayer = styled.div.attrs(({ disabled, ...props }) => ({\r\n  ...props,\r\n  onDragOver: event => event.preventDefault(),\r\n  onDrop: event => {\r\n    if (disabled) return;\r\n\r\n    const component = JSON.parse(\r\n      event.dataTransfer.getData('component'),\r\n    );\r\n\r\n    props.handleComponentDrop(event, component);\r\n  },\r\n}))`\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n\r\nexport default DroppableLayer;\r\n","import React from 'react';\r\nimport { MenuProvider } from 'react-contexify';\r\n\r\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport DiagramContext from './DiagramContext';\r\nimport DroppableLayer from './DroppableLayer';\r\n\r\nconst FullscreenCanvas = styled(CanvasWidget)`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Diagram = ({ engine }) => (\r\n  <MenuProvider id=\"diagram\" storeRef={false} data={{ test: 1 }}>\r\n    <DroppableLayer\r\n      handleComponentDrop={(...args) =>\r\n        engine.handleComponentDrop(...args)\r\n      }\r\n      disabled={engine.isLocked()}\r\n    >\r\n      <DiagramContext.Provider value={engine}>\r\n        <FullscreenCanvas engine={engine.getEngine()} />\r\n      </DiagramContext.Provider>\r\n    </DroppableLayer>\r\n  </MenuProvider>\r\n);\r\n\r\nexport default Diagram;\r\n","import React, { Component } from 'react';\r\n\r\nimport { samePosition } from '../Diagram/states/common';\r\n\r\nexport default class LinkWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.refPaths = [];\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updateRenderedPaths();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateRenderedPaths();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.clearRenderedPaths();\r\n  }\r\n\r\n  updateRenderedPaths() {\r\n    const { link } = this.props;\r\n\r\n    link.setRenderedPaths(\r\n      this.refPaths.map(ref => {\r\n        return ref.current;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clearRenderedPaths() {\r\n    const { link } = this.props;\r\n\r\n    link.setRenderedPaths([]);\r\n  }\r\n\r\n  generatePathPoints() {\r\n    const { link } = this.props;\r\n\r\n    const points = link.getPoints();\r\n\r\n    return points\r\n      .map((point, i) => ({ from: points[i], to: points[i + 1] }))\r\n      .filter(tuple => tuple.to);\r\n  }\r\n\r\n  generateLinePath({ from, to }) {\r\n    return `M${from.getX()},${from.getY()} L${to.getX()},${to.getY()}`;\r\n  }\r\n\r\n  renderSegment(path, key) {\r\n    const { link, factory, options = {} } = this.props;\r\n\r\n    const { selected } = options;\r\n\r\n    const ref = React.createRef();\r\n    this.refPaths.push(ref);\r\n\r\n    return React.cloneElement(\r\n      factory.generateLinkSegment(link, selected, path),\r\n      { key, ref },\r\n    );\r\n  }\r\n\r\n  renderPoint(position, loose = false) {\r\n    const { link } = this.props;\r\n    const color = link.getColor();\r\n\r\n    return (\r\n      <circle\r\n        r={loose ? 6 : link.getPointRadius()}\r\n        fill={loose ? 'var(--background)' : color}\r\n        stroke={loose ? color : 'none'}\r\n        strokeWidth={3}\r\n        cx={position.x}\r\n        cy={position.y}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderBifurcationSourcePoint() {\r\n    const { link } = this.props;\r\n\r\n    const bifurcationSource = link.getBifurcationSource();\r\n    if (!bifurcationSource) return null;\r\n\r\n    const bifurcationOrigin = link.getFirstPoint().getPosition();\r\n    const lastSourcePoint = bifurcationSource\r\n      .getLastPoint()\r\n      .getPosition();\r\n\r\n    if (samePosition(bifurcationOrigin, lastSourcePoint)) {\r\n      return null;\r\n    }\r\n\r\n    return this.renderPoint(bifurcationOrigin);\r\n  }\r\n\r\n  renderBifurcationTargetPoint() {\r\n    const { link } = this.props;\r\n\r\n    const bifurcationTarget = link.getBifurcationTarget();\r\n    if (!bifurcationTarget) return null;\r\n\r\n    const bifurcationTargetPosition = link\r\n      .getLastPoint()\r\n      .getPosition();\r\n    const lastSourcePoint = bifurcationTarget\r\n      .getLastPoint()\r\n      .getPosition();\r\n\r\n    if (samePosition(bifurcationTargetPosition, lastSourcePoint)) {\r\n      return null;\r\n    }\r\n\r\n    return this.renderPoint(bifurcationTargetPosition);\r\n  }\r\n\r\n  renderLooseLinkPoint() {\r\n    const { link } = this.props;\r\n\r\n    if (link.getTargetPort()) return null;\r\n    if (link.getBifurcationTarget()) return null;\r\n\r\n    const bifurcations = link.getBifurcations();\r\n    const lastSourcePoint = link.getLastPoint().getPosition();\r\n\r\n    const isContinued = bifurcations.some(\r\n      bifurcation =>\r\n        samePosition(\r\n          bifurcation.getFirstPosition(),\r\n          lastSourcePoint,\r\n        ) ||\r\n        samePosition(bifurcation.getLastPosition(), lastSourcePoint),\r\n    );\r\n\r\n    if (isContinued) return null;\r\n\r\n    return this.renderPoint(lastSourcePoint, true);\r\n  }\r\n\r\n  render() {\r\n    const { link } = this.props;\r\n\r\n    this.refPaths = [];\r\n\r\n    return (\r\n      <>\r\n        <g data-default-link-test={link.getOptions().testName}>\r\n          {this.generatePathPoints().map((tuple, index) =>\r\n            this.renderSegment(this.generateLinePath(tuple), index),\r\n          )}\r\n        </g>\r\n        {this.renderBifurcationSourcePoint()}\r\n        {this.renderBifurcationTargetPoint()}\r\n        {this.renderLooseLinkPoint()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { DefaultLinkFactory } from '@projectstorm/react-diagrams-defaults';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport LinkModel from './LinkModel';\r\nimport LinkWidget from './LinkWidget';\r\n\r\nconst Path = styled.path`\r\n  pointer-events: all;\r\n  stroke-linecap: round;\r\n`;\r\n\r\nexport default class LinkFactory extends DefaultLinkFactory {\r\n  constructor() {\r\n    super('link');\r\n  }\r\n\r\n  generateModel() {\r\n    return new LinkModel();\r\n  }\r\n\r\n  generateReactWidget(event) {\r\n    return (\r\n      <LinkWidget\r\n        diagramEngine={this.engine}\r\n        link={event.model}\r\n        factory={this}\r\n      />\r\n    );\r\n  }\r\n\r\n  generateLinkSegment(model, selected, path) {\r\n    return (\r\n      <>\r\n        <Path\r\n          stroke={model.getColor()}\r\n          strokeWidth={model.getLineWidth()}\r\n          d={path}\r\n        />\r\n        {/* This path is to facilitate link selection */}\r\n        <Path stroke=\"none\" strokeWidth={20} d={path} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { AbstractModelFactory } from '@projectstorm/react-canvas-core';\r\n\r\nimport PortModel from './PortModel';\r\n\r\nexport default class PortFactory extends AbstractModelFactory {\r\n  constructor() {\r\n    super('Port');\r\n  }\r\n\r\n  generateModel() {\r\n    return new PortModel();\r\n  }\r\n}\r\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\r\n\r\nimport BaseModel from '../../BaseModel';\r\n\r\n/**\r\n * Handles clipboard actions.\r\n */\r\nexport default class ClipboardAction extends Action {\r\n  constructor(areShortcutsAllowed) {\r\n    super({\r\n      type: InputType.KEY_DOWN,\r\n      fire: ({ event }) => {\r\n        if (!areShortcutsAllowed()) return;\r\n        if (this.engine.getModel().isLocked()) return;\r\n\r\n        if (this.matchesInput(event)) {\r\n          event.preventDefault();\r\n\r\n          const { code } = event;\r\n          if (code === 'KeyX') this.handleCut();\r\n          if (code === 'KeyC') this.handleCopy();\r\n          if (code === 'KeyV') this.handlePaste();\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  matchesInput = ({ ctrlKey, code }) =>\r\n    ctrlKey &&\r\n    (code === 'KeyX' || code === 'KeyC' || code === 'KeyV');\r\n\r\n  getSelectedComponents = () =>\r\n    this.engine\r\n      .getModel()\r\n      .getSelectedEntities()\r\n      .filter(entity => entity instanceof BaseModel)\r\n      .filter(entity => !entity.isLocked());\r\n\r\n  /** Cut */\r\n  handleCut = () => {\r\n    const selected = this.getSelectedComponents();\r\n    const copies = selected.map(entity => entity.clone().serialize());\r\n\r\n    this.engine.fireEvent(\r\n      {\r\n        nodes: selected,\r\n        links: selected.reduce(\r\n          (arr, node) => [...arr, ...node.getAllLinks()],\r\n          [],\r\n        ),\r\n      },\r\n      'entitiesRemoved',\r\n    );\r\n    selected.forEach(node => node.remove());\r\n    this.engine.repaintCanvas();\r\n\r\n    localStorage.setItem('clipboard', JSON.stringify(copies));\r\n  };\r\n\r\n  /** Copy */\r\n  handleCopy = () => {\r\n    const copies = this.getSelectedComponents().map(entity =>\r\n      entity.clone().serialize(),\r\n    );\r\n\r\n    localStorage.setItem('clipboard', JSON.stringify(copies));\r\n  };\r\n\r\n  /** Paste */\r\n  handlePaste = () => {\r\n    const model = this.engine.getModel();\r\n\r\n    const clipboard = JSON.parse(localStorage.getItem('clipboard'));\r\n    if (!clipboard) return;\r\n\r\n    model.clearSelection();\r\n\r\n    const models = clipboard.map(serialized => {\r\n      const modelInstance = model\r\n        .getActiveNodeLayer()\r\n        .getChildModelFactoryBank(this.engine)\r\n        .getFactory(serialized.type)\r\n        .generateModel({ initialConfig: serialized });\r\n\r\n      modelInstance.deserialize({\r\n        engine: this.engine,\r\n        data: serialized,\r\n        registerModel: () => {},\r\n      });\r\n\r\n      return modelInstance;\r\n    });\r\n\r\n    models.forEach(modelInstance => {\r\n      model.addNode(modelInstance);\r\n      modelInstance.setSelected(true);\r\n    });\r\n\r\n    localStorage.setItem(\r\n      'clipboard',\r\n      JSON.stringify(\r\n        models.map(modelInstance =>\r\n          modelInstance.clone().serialize(),\r\n        ),\r\n      ),\r\n    );\r\n\r\n    this.engine.fireEvent({ nodes: models }, 'componentsAdded');\r\n\r\n    this.engine.repaintCanvas();\r\n  };\r\n}\r\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\r\n\r\nimport BaseModel from '../../BaseModel';\r\nimport LinkModel from '../../Link/LinkModel';\r\n\r\n/**\r\n * Handles delete actions.\r\n */\r\nexport default class DeleteAction extends Action {\r\n  constructor(areShortcutsAllowed) {\r\n    super({\r\n      type: InputType.KEY_DOWN,\r\n      fire: ({ event }) => {\r\n        if (!areShortcutsAllowed()) return;\r\n        if (this.engine.getModel().isLocked()) return;\r\n\r\n        if (this.matchesInput(event)) {\r\n          event.preventDefault();\r\n          this.handleAction();\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  matchesInput = event => event.code === 'Delete';\r\n\r\n  handleAction = () => {\r\n    const entities = this.engine\r\n      .getModel()\r\n      .getSelectedEntities()\r\n      .filter(model => !model.isLocked());\r\n\r\n    this.fireEvent(entities);\r\n\r\n    entities.forEach(model => model.remove());\r\n\r\n    this.engine.repaintCanvas();\r\n  };\r\n\r\n  /**\r\n   * Event is fired to be on the command manager, so the user can undo\r\n   * and redo it.\r\n   */\r\n  fireEvent = entities => {\r\n    // All selected nodes\r\n    const nodes = entities.filter(\r\n      model => model instanceof BaseModel,\r\n    );\r\n\r\n    // All selected links\r\n    const links = entities.filter(\r\n      model => model instanceof LinkModel,\r\n    );\r\n\r\n    // All links from selected nodes\r\n    const nodesLinks = nodes.reduce(\r\n      (arr, node) => [...arr, ...node.getAllLinks()],\r\n      [],\r\n    );\r\n\r\n    this.engine.fireEvent(\r\n      { nodes, links: [...nodesLinks, ...links] },\r\n      'entitiesRemoved',\r\n    );\r\n  };\r\n}\r\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\r\n\r\nimport BaseModel from '../../BaseModel';\r\n\r\n/**\r\n * Handle duplication (clone) actions.\r\n */\r\nexport default class DuplicateAction extends Action {\r\n  constructor(areShortcutsAllowed) {\r\n    super({\r\n      type: InputType.KEY_DOWN,\r\n      fire: ({ event }) => {\r\n        if (!areShortcutsAllowed()) return;\r\n        if (this.engine.getModel().isLocked()) return;\r\n\r\n        if (this.matchesInput(event)) {\r\n          event.preventDefault();\r\n          this.handleAction();\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  matchesInput = event => event.ctrlKey && event.code === 'KeyD';\r\n\r\n  handleAction = () => {\r\n    const model = this.engine.getModel();\r\n\r\n    const clones = model\r\n      .getSelectedEntities()\r\n      .filter(entity => entity instanceof BaseModel)\r\n      .filter(entity => !entity.isLocked())\r\n      .map(entity => entity.clone());\r\n\r\n    model.clearSelection();\r\n\r\n    clones.forEach(clone => {\r\n      model.addNode(clone);\r\n      clone.setSelected(true);\r\n    });\r\n\r\n    this.engine.fireEvent({ nodes: clones }, 'componentsAdded');\r\n\r\n    this.engine.repaintCanvas();\r\n  };\r\n}\r\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\r\n\r\n/**\r\n * Handles undo/redo actions.\r\n */\r\nexport default class UndoRedoAction extends Action {\r\n  constructor(areShortcutsAllowed) {\r\n    super({\r\n      type: InputType.KEY_DOWN,\r\n      fire: ({ event }) => {\r\n        if (!areShortcutsAllowed()) return;\r\n        if (this.engine.getModel().isLocked()) return;\r\n\r\n        if (this.matchesInput(event)) {\r\n          event.preventDefault();\r\n\r\n          const { ctrlKey, shiftKey, code } = event;\r\n          if (ctrlKey && !shiftKey && code === 'KeyZ')\r\n            this.handleUndo();\r\n          else this.handleRedo();\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  matchesInput = ({ ctrlKey, shiftKey, code }) =>\r\n    (ctrlKey && (code === 'KeyZ' || code === 'KeyY')) ||\r\n    (ctrlKey && shiftKey && code === 'KeyZ');\r\n\r\n  /** Undo */\r\n  handleUndo = () => {\r\n    this.engine.commands.undo();\r\n    this.engine.repaintCanvas();\r\n  };\r\n\r\n  /** Redo */\r\n  handleRedo = () => {\r\n    this.engine.commands.redo();\r\n    this.engine.repaintCanvas();\r\n  };\r\n}\r\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\r\n\r\nconst ZOOM_LEVELS = [15, 25, 50, 75, 100, 150, 200, 300];\r\n\r\n/**\r\n * Handles zoom in/out actions.\r\n */\r\nexport default class ZoomAction extends Action {\r\n  constructor() {\r\n    super({\r\n      type: InputType.MOUSE_WHEEL,\r\n      fire: ({ event }) => {\r\n        event.stopPropagation();\r\n\r\n        const model = this.engine.getModel();\r\n\r\n        // We can block layer rendering because we are only targeting the transforms\r\n        model.getLayers().forEach(layer => layer.allowRepaint(false));\r\n\r\n        const zoomDirection =\r\n          Math.sign(event.deltaY) > 0 ? 'in' : 'out';\r\n\r\n        const currentZoomLevelIndex = ZOOM_LEVELS.indexOf(\r\n          ZOOM_LEVELS.includes(model.getZoomLevel())\r\n            ? model.getZoomLevel()\r\n            : 100,\r\n        );\r\n\r\n        let nextZoomLevelIndex;\r\n        if (zoomDirection === 'in') {\r\n          nextZoomLevelIndex = Math.min(\r\n            currentZoomLevelIndex + 1,\r\n            ZOOM_LEVELS.length - 1,\r\n          );\r\n        } else {\r\n          nextZoomLevelIndex = Math.max(currentZoomLevelIndex - 1, 0);\r\n        }\r\n\r\n        const oldZoomFactor = model.getZoomLevel() / 100;\r\n        model.setZoomLevel(ZOOM_LEVELS[nextZoomLevelIndex]);\r\n        const zoomFactor = model.getZoomLevel() / 100;\r\n\r\n        const boundingRect = this.engine\r\n          .getCanvas()\r\n          .getBoundingClientRect();\r\n        const clientWidth = boundingRect.width;\r\n        const clientHeight = boundingRect.height;\r\n\r\n        // Compute difference between rect before and after scroll\r\n        const widthDiff =\r\n          clientWidth * zoomFactor - clientWidth * oldZoomFactor;\r\n        const heightDiff =\r\n          clientHeight * zoomFactor - clientHeight * oldZoomFactor;\r\n\r\n        // Compute mouse coords relative to canvas\r\n        const clientX = event.clientX - boundingRect.left;\r\n        const clientY = event.clientY - boundingRect.top;\r\n\r\n        // Compute width and height increment factor\r\n        const xFactor =\r\n          (clientX - model.getOffsetX()) /\r\n          oldZoomFactor /\r\n          clientWidth;\r\n        const yFactor =\r\n          (clientY - model.getOffsetY()) /\r\n          oldZoomFactor /\r\n          clientHeight;\r\n\r\n        model.setOffset(\r\n          model.getOffsetX() - widthDiff * xFactor,\r\n          model.getOffsetY() - heightDiff * yFactor,\r\n        );\r\n        this.engine.repaintCanvas();\r\n\r\n        // Re-enable rendering\r\n        model.getLayers().forEach(layer => layer.allowRepaint(true));\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { PointModel } from '@projectstorm/react-diagrams';\r\n\r\nconst commandHandlers = ({ engine, editComponentConfiguration }) => {\r\n  const adjustLink = (link, nodes = []) => {\r\n    const nodeList = [\r\n      ...Object.values(\r\n        engine\r\n          .getModel()\r\n          .getActiveNodeLayer()\r\n          .getModels(),\r\n      ),\r\n      ...nodes,\r\n    ];\r\n\r\n    /**\r\n     * Port instance could have changed in consequence of component\r\n     * configuration edit.\r\n     */\r\n    let sourcePort = link.getSourcePort();\r\n    if (sourcePort) {\r\n      const node = nodeList.find(\r\n        n =>\r\n          n.getID() ===\r\n          link\r\n            .getSourcePort()\r\n            .getParent()\r\n            .getID(),\r\n      );\r\n\r\n      sourcePort = node.getPort(sourcePort.getName());\r\n\r\n      link.setSourcePort(sourcePort);\r\n      sourcePort.addLink(link);\r\n    }\r\n\r\n    let targetPort = link.getTargetPort();\r\n    if (targetPort) {\r\n      const node = nodeList.find(\r\n        n =>\r\n          n.getID() ===\r\n          link\r\n            .getTargetPort()\r\n            .getParent()\r\n            .getID(),\r\n      );\r\n\r\n      targetPort = node.getPort(targetPort.getName());\r\n\r\n      link.setTargetPort(targetPort);\r\n      targetPort.addLink(link);\r\n    }\r\n\r\n    if (link.getBifurcationSource())\r\n      link.getBifurcationSource().addBifurcation(link);\r\n\r\n    if (link.getBifurcationTarget())\r\n      link.getBifurcationTarget().addBifurcation(link);\r\n\r\n    return link;\r\n  };\r\n\r\n  return {\r\n    /**\r\n     * Componend added handler. Occurs when a component is added or\r\n     * pasted.\r\n     */\r\n    componentsAdded: ({ nodes }) => {\r\n      engine.commands.add({\r\n        execute: () => {\r\n          nodes.forEach(node => engine.getModel().addNode(node));\r\n        },\r\n        undo: () => {\r\n          nodes.forEach(node => node.remove());\r\n        },\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Component configuration edit handler.\r\n     */\r\n    componentEdited: ({ node, configurations, links }) => {\r\n      engine.commands.add({\r\n        execute: () => {\r\n          editComponentConfiguration(node, configurations.after);\r\n        },\r\n        undo: () => {\r\n          editComponentConfiguration(node, configurations.before);\r\n\r\n          links.before.forEach(link =>\r\n            engine.getModel().addLink(adjustLink(link)),\r\n          );\r\n        },\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Link added handler. Occurs on new links or bifurcations.\r\n     */\r\n    linkAdded: ({ link }) => {\r\n      engine.commands.add({\r\n        execute: () => {\r\n          engine.getModel().addLink(adjustLink(link));\r\n        },\r\n        undo: () => {\r\n          link.remove();\r\n        },\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Link changed handler. Occurs when a link is extended.\r\n     */\r\n    linkChanged: ({ before, after }) => {\r\n      const handleLinkChanged = (from, to) => {\r\n        const link = engine.getModel().getLink(from.id);\r\n\r\n        // Update link points\r\n        link.setPoints(\r\n          from.points.map(position => {\r\n            const point = new PointModel({ link });\r\n            point.setPosition(position);\r\n            return point;\r\n          }),\r\n        );\r\n\r\n        // Updates bifurcation target\r\n        if (from.bifurcationTarget) {\r\n          const target = engine\r\n            .getModel()\r\n            .getLink(from.bifurcationTarget);\r\n          link.setBifurcationTarget(target);\r\n          target.addBifurcation(link);\r\n        } else if (to.bifurcationTarget) {\r\n          const oldTarget = engine\r\n            .getModel()\r\n            .getLink(to.bifurcationTarget);\r\n          link.setBifurcationTarget(null);\r\n          oldTarget.removeBifurcation(link);\r\n        }\r\n      };\r\n\r\n      engine.commands.add({\r\n        execute: () => {\r\n          handleLinkChanged(after, before);\r\n        },\r\n        undo: () => {\r\n          handleLinkChanged(before, after);\r\n        },\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Components and links removal handler.\r\n     */\r\n    entitiesRemoved: ({ nodes, links }) => {\r\n      engine.commands.add({\r\n        execute: () => {\r\n          // Removes all nodes\r\n          nodes.forEach(node => node.remove());\r\n\r\n          // Removes all links\r\n          links.forEach(link => link.remove());\r\n        },\r\n        undo: () => {\r\n          /**\r\n           * Adds all links in the correct order. Bifurcations should be\r\n           * added before, otherwise links on the diagram are incorretly\r\n           * rendered.\r\n           */\r\n          links\r\n            .map(link => adjustLink(link, nodes))\r\n            .sort((l1, l2) => {\r\n              if (\r\n                l1.getBifurcationSource() === l2 ||\r\n                l1.getBifurcationTarget() === l2\r\n              )\r\n                return 1;\r\n\r\n              if (\r\n                l2.getBifurcationSource() === l1 ||\r\n                l2.getBifurcationTarget() === l1\r\n              )\r\n                return -1;\r\n\r\n              return 0;\r\n            })\r\n            .forEach(link => engine.getModel().addLink(link));\r\n\r\n          // Adds all nodes\r\n          nodes.forEach(node => engine.getModel().addNode(node));\r\n        },\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Components and links move handler.\r\n     */\r\n    entitiesMoved: ({ nodes, links }) => {\r\n      const handleEntitiesMoved = state => {\r\n        // Updates all moved nodes position\r\n        nodes[state].forEach(({ id, position }) => {\r\n          const node = engine.getModel().getNode(id);\r\n          node.setPosition(position.x, position.y);\r\n        });\r\n\r\n        // Updates all moved links points\r\n        links[state].forEach(({ id, points }) => {\r\n          const link = engine.getModel().getLink(id);\r\n          link.setPoints(\r\n            points.map(position => {\r\n              const point = new PointModel({ link });\r\n              point.setPosition(position);\r\n              return point;\r\n            }),\r\n          );\r\n        });\r\n      };\r\n\r\n      engine.commands.add({\r\n        execute: () => {\r\n          handleEntitiesMoved('after');\r\n        },\r\n        undo: () => {\r\n          handleEntitiesMoved('before');\r\n        },\r\n      });\r\n    },\r\n  };\r\n};\r\n\r\nexport default commandHandlers;\r\n","export default class Command {\r\n  constructor(execute, undo) {\r\n    this.execute = execute;\r\n    this.undo = undo;\r\n  }\r\n\r\n  execute(engine) {\r\n    this.execute(engine);\r\n  }\r\n\r\n  undo(engine) {\r\n    this.undo(engine);\r\n  }\r\n}\r\n","import Command from './Command';\r\n\r\n/**\r\n * This class manages the undo/redo stack.\r\n */\r\nexport default class CommandManager {\r\n  constructor() {\r\n    this.clear();\r\n  }\r\n\r\n  clear() {\r\n    this.stack = [];\r\n    this.index = 0;\r\n  }\r\n\r\n  add({ execute, undo }) {\r\n    const command = new Command(execute, undo);\r\n    this.stack.length = this.index;\r\n    this.stack.push(command);\r\n    this.index += 1;\r\n  }\r\n\r\n  undo() {\r\n    if (this.index > 0) {\r\n      this.index -= 1;\r\n      const command = this.stack[this.index];\r\n      command.undo();\r\n    }\r\n  }\r\n\r\n  redo() {\r\n    if (this.index < this.stack.length) {\r\n      const command = this.stack[this.index];\r\n      command.execute();\r\n      this.index += 1;\r\n    }\r\n  }\r\n}\r\n","import { Point } from '@projectstorm/geometry';\r\n\r\nimport { snap, samePosition } from './common';\r\n\r\nconst getRelativePoint = (point, model) => {\r\n  const zoomLevelPercentage = model.getZoomLevel() / 100;\r\n  const engineOffsetX = model.getOffsetX() / zoomLevelPercentage;\r\n  const engineOffsetY = model.getOffsetY() / zoomLevelPercentage;\r\n\r\n  return new Point(point.x - engineOffsetX, point.y - engineOffsetY);\r\n};\r\n\r\nconst nextLinkPosition = (\r\n  event,\r\n  model,\r\n  initialRelative,\r\n  sourcePosition,\r\n) => {\r\n  const point = getRelativePoint(sourcePosition, model);\r\n\r\n  const zoomLevelPercentage = model.getZoomLevel() / 100;\r\n  const initialXRelative = initialRelative.x / zoomLevelPercentage;\r\n  const initialYRelative = initialRelative.y / zoomLevelPercentage;\r\n\r\n  const linkNextX =\r\n    point.x +\r\n    (initialXRelative - sourcePosition.x) +\r\n    event.virtualDisplacementX;\r\n  const linkNextY =\r\n    point.y +\r\n    (initialYRelative - sourcePosition.y) +\r\n    event.virtualDisplacementY;\r\n\r\n  return snap(\r\n    new Point(linkNextX, linkNextY),\r\n    model.options.gridSize,\r\n  );\r\n};\r\n\r\n/**\r\n * Handles mouse move on link or bifurcation creation, creating and\r\n * moving link points according to user input.\r\n *\r\n * This implementation mimics logisim link creation behavior.\r\n */\r\nexport default function handleLinkDrag(event, link) {\r\n  const first = link.getFirstPosition();\r\n  const last = link.getLastPosition();\r\n\r\n  const next = nextLinkPosition(\r\n    event,\r\n    this.engine.getModel(),\r\n    { x: this.initialXRelative, y: this.initialYRelative },\r\n    first,\r\n  );\r\n\r\n  if (!this.hasStartedMoving && samePosition(first, last)) {\r\n    /**\r\n     * For some reason, inputs are only valid after the first and last\r\n     * position are equals once. Before that, the last position is\r\n     * (0, 0).\r\n     */\r\n    this.hasStartedMoving = true;\r\n  }\r\n\r\n  if (this.hasStartedMoving) {\r\n    if (!link.hasMiddlePoint()) {\r\n      if (last.x !== next.x) {\r\n        if (!this.moveDirection) {\r\n          this.moveDirection = 'horizontal';\r\n        }\r\n\r\n        if (this.moveDirection === 'vertical') {\r\n          link.addPoint(link.generatePoint(last.x, next.y), 1);\r\n        }\r\n      } else if (last.y !== next.y) {\r\n        if (!this.moveDirection) {\r\n          this.moveDirection = 'vertical';\r\n        }\r\n\r\n        if (this.moveDirection === 'horizontal') {\r\n          link.addPoint(link.generatePoint(next.x, last.y), 1);\r\n        }\r\n      }\r\n    } else {\r\n      const middle = link.getMiddlePosition();\r\n      if (samePosition(middle, last)) {\r\n        link.removePoint(link.getMiddlePoint());\r\n      } else if (samePosition(first, middle)) {\r\n        link.removePoint(link.getMiddlePoint());\r\n        this.moveDirection =\r\n          this.moveDirection === 'horizontal'\r\n            ? 'vertical'\r\n            : 'horizontal';\r\n      } else if (this.moveDirection === 'horizontal') {\r\n        if (last.x !== next.x) {\r\n          link.getMiddlePoint().setPosition(next.x, first.y);\r\n        }\r\n      } else if (this.moveDirection === 'vertical') {\r\n        if (last.y !== next.y) {\r\n          link.getMiddlePoint().setPosition(first.x, next.y);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sometimes, user input may be fast enough to skip the creation of\r\n   * a middle point. If this happens, we add it here.\r\n   */\r\n  if (\r\n    !link.hasMiddlePoint() &&\r\n    first.x !== next.x &&\r\n    first.y !== next.y\r\n  ) {\r\n    if (samePosition(first, last)) {\r\n      link.addPoint(link.generatePoint(next.x, first.y), 1);\r\n    } else if (this.moveDirection === 'horizontal') {\r\n      link.addPoint(link.generatePoint(next.x, first.y), 1);\r\n    } else {\r\n      link.addPoint(link.generatePoint(first.x, next.y), 1);\r\n    }\r\n  }\r\n\r\n  link.getLastPoint().setPosition(next.x, next.y);\r\n\r\n  this.engine.repaintCanvas();\r\n}\r\n","import React, { useContext } from 'react';\r\n\r\nimport { PortWidget } from '@projectstorm/react-diagrams';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport ComponentContext from '../ComponentContext';\r\nimport DiagramContext from '../Diagram/DiagramContext';\r\n\r\nconst Circle = styled.div`\r\n  width: 10px;\r\n  height: 10px;\r\n  border: var(--port-width) solid\r\n    ${props =>\r\n      props.link\r\n        ? 'var(--port-connected-border)'\r\n        : 'var(--port-unconnected-border)'};\r\n  border-radius: 100%;\r\n  background: ${props => props.port.getColor()};\r\n\r\n  &:hover {\r\n    background: var(--port-hover);\r\n  }\r\n`;\r\n\r\nclass Port extends PortWidget {\r\n  report() {\r\n    if (this.props.port) super.report();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.port) super.componentDidUpdate();\r\n  }\r\n\r\n  render() {\r\n    const { name, port, model, className = '' } = this.props;\r\n\r\n    if (!port) return null;\r\n\r\n    return (\r\n      <Circle\r\n        className={`port ${className}`}\r\n        data-name={name}\r\n        data-nodeid={model.getID()}\r\n        port={port}\r\n        link={port.getMainLink()}\r\n        title={name}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * React Diagrams PortWidget implementation needs us to forward some\r\n * props in order to function properly. We have this HOC so that\r\n * component widgets don't need to pass them every time.\r\n */\r\nconst withProps = WrappedComponent => ({ ...props }) => {\r\n  const diagram = useContext(DiagramContext);\r\n  const model = useContext(ComponentContext);\r\n\r\n  return (\r\n    <WrappedComponent\r\n      {...props}\r\n      port={model.getPort(props.name)}\r\n      engine={diagram.getEngine()}\r\n      model={model}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withProps(Port);\r\n","import { Point } from '@projectstorm/geometry';\r\nimport {\r\n  AbstractDisplacementState,\r\n  Action,\r\n  InputType,\r\n} from '@projectstorm/react-canvas-core';\r\nimport {\r\n  NodeModel,\r\n  PortModel,\r\n} from '@projectstorm/react-diagrams-core';\r\n\r\nimport {\r\n  snap,\r\n  samePosition,\r\n  getLandingLink,\r\n  isPointOverLink,\r\n  sameX,\r\n  sameAxis,\r\n  closestPointToLink,\r\n  getIncompatibleWidthsErrorMessage,\r\n} from './common';\r\nimport handleLinkDrag from './handleLinkDrag';\r\n\r\n/**\r\n * This State is responsible for handling bifurcation events.\r\n *\r\n * A bifurcation is just like a normal link, but instead of having a\r\n * source port, it has a source link (its `bifurcationSource`).\r\n *\r\n * There are three ways the user can create bifurcations:\r\n *\r\n * 1. By dragging an existing link into another existing link\r\n *    (link-to-link bifurcation)\r\n * 2. By dragging an existing link to any other point on the canvas,\r\n *    except on top of nodes\r\n *\r\n * If the drag start and end points are near each other, this action\r\n * will behave as a link selection.\r\n */\r\nexport default class BifurcateLinkState extends AbstractDisplacementState {\r\n  constructor(showSnackbar) {\r\n    super({ name: 'bifurcate-link' });\r\n\r\n    this.registerAction(\r\n      new Action({\r\n        type: InputType.MOUSE_DOWN,\r\n        fire: event => {\r\n          this.moveDirection = undefined;\r\n          this.hasStartedMoving = false;\r\n\r\n          this.source = this.engine.getMouseElement(event.event);\r\n          this.sourceBefore = this.getLinkPoints(this.source);\r\n          this.sourceEdited = false;\r\n\r\n          const position = this.snapPointToSourceLink(\r\n            this.engine.getRelativeMousePoint(event.event),\r\n            this.source,\r\n          );\r\n\r\n          if (this.source.isLocked()) {\r\n            this.eject();\r\n            return;\r\n          }\r\n\r\n          this.bifurcation = this.engine\r\n            .getLinkFactories()\r\n            .getFactory(this.source.getType())\r\n            .generateModel();\r\n          this.bifurcation.setBits(this.source.getBits());\r\n\r\n          if (!this.bifurcation) {\r\n            this.eject();\r\n            return;\r\n          }\r\n\r\n          this.bifurcation.setBifurcationSource(this.source);\r\n          this.bifurcation.getFirstPoint().setPosition(position);\r\n          this.bifurcation.getLastPoint().setPosition(position);\r\n\r\n          this.bifurcation.setSelected(true);\r\n          this.engine.getModel().clearSelection();\r\n\r\n          this.source.setSelected(false);\r\n          this.source.addBifurcation(this.bifurcation);\r\n          this.engine.getModel().addLink(this.bifurcation);\r\n        },\r\n      }),\r\n    );\r\n\r\n    this.registerAction(\r\n      new Action({\r\n        type: InputType.MOUSE_UP,\r\n        fire: event => {\r\n          // Link selection\r\n          if (this.isNearbySourcePosition()) {\r\n            this.cleanUp();\r\n            this.engine.getModel().clearSelection();\r\n            this.source.setSelected(true);\r\n            this.engine.repaintCanvas();\r\n            return;\r\n          }\r\n\r\n          const model = this.engine.getMouseElement(event.event);\r\n\r\n          // Disallows creation under nodes\r\n          if (model instanceof NodeModel) {\r\n            this.cleanUp();\r\n            this.engine.repaintCanvas();\r\n            return;\r\n          }\r\n\r\n          // Bifurcation connected to port\r\n          if (\r\n            model instanceof PortModel &&\r\n            model.isNewLinkAllowed()\r\n          ) {\r\n            // Disallows connecting ports with different bit numbers\r\n            if (this.source.getBits() !== model.getBits()) {\r\n              this.cleanUp();\r\n              this.engine.repaintCanvas();\r\n              showSnackbar(\r\n                getIncompatibleWidthsErrorMessage(this.source, model),\r\n              );\r\n              return;\r\n            }\r\n\r\n            this.bifurcation.setTargetPort(model);\r\n\r\n            model.reportPosition();\r\n            this.adjustBifurcationOverlayingSource(this.bifurcation);\r\n            this.engine.repaintCanvas();\r\n            this.fireEvent();\r\n            return;\r\n          }\r\n\r\n          // Bifurcation landing on another existing link\r\n          const landing = getLandingLink(\r\n            this.bifurcation,\r\n            this.engine,\r\n          );\r\n          if (landing) {\r\n            // Disallows connecting links with different bit numbers\r\n            if (landing.getBits() !== this.bifurcation.getBits()) {\r\n              this.cleanUp();\r\n              this.engine.repaintCanvas();\r\n              showSnackbar(\r\n                getIncompatibleWidthsErrorMessage(\r\n                  this.bifurcation,\r\n                  landing,\r\n                ),\r\n              );\r\n              return;\r\n            }\r\n\r\n            this.bifurcation.setBifurcationTarget(landing);\r\n            landing.addBifurcation(this.bifurcation);\r\n            landing.setSelected(true);\r\n          }\r\n\r\n          this.mergeWithBifurcation(\r\n            this.bifurcation.getBifurcationSource(),\r\n          );\r\n          this.adjustBifurcationOverlayingSource(this.bifurcation);\r\n          this.fireEvent();\r\n        },\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Event is fired to be on the command manager, so the user can undo\r\n   * and redo it.\r\n   */\r\n  fireEvent = () => {\r\n    if (this.sourceEdited) {\r\n      this.engine.fireEvent(\r\n        {\r\n          before: this.sourceBefore,\r\n          after: this.getLinkPoints(this.source),\r\n        },\r\n        'linkChanged',\r\n      );\r\n    } else {\r\n      this.engine.fireEvent({ link: this.bifurcation }, 'linkAdded');\r\n    }\r\n  };\r\n\r\n  getLinkPoints(link) {\r\n    return {\r\n      id: link.getID(),\r\n      points: link.getPoints().map(point => point.getPosition()),\r\n      bifurcationTarget: link.getBifurcationTarget()\r\n        ? link.getBifurcationTarget().getID()\r\n        : null,\r\n    };\r\n  }\r\n\r\n  cleanUp() {\r\n    this.source.removeBifurcation(this.bifurcation);\r\n    this.bifurcation.remove();\r\n  }\r\n\r\n  /**\r\n   * Snaps a point to a point which is over the source link.\r\n   */\r\n  snapPointToSourceLink(position, source) {\r\n    const { gridSize } = this.engine.getModel().getOptions();\r\n    const sourcePoints = source.getPoints();\r\n\r\n    const closestCorner = this.getClosestCornerToPosition(\r\n      sourcePoints,\r\n      position,\r\n    );\r\n\r\n    if (closestCorner.distance < gridSize - 1) {\r\n      return new Point(\r\n        closestCorner.position.x,\r\n        closestCorner.position.y,\r\n      );\r\n    }\r\n\r\n    const closestPath = this.getClosestPathToPosition(\r\n      sourcePoints,\r\n      position,\r\n    );\r\n\r\n    const snappedPosition = snap(position, gridSize);\r\n\r\n    return new Point(\r\n      closestPath.axis === 'x'\r\n        ? closestPath.position\r\n        : snappedPosition.x,\r\n      closestPath.axis === 'y'\r\n        ? closestPath.position\r\n        : snappedPosition.y,\r\n    );\r\n  }\r\n\r\n  getClosestCornerToPosition(points, position) {\r\n    return points\r\n      .map(sourcePoint => ({\r\n        distance: Math.hypot(\r\n          position.x - sourcePoint.position.x,\r\n          position.y - sourcePoint.position.y,\r\n        ),\r\n        ...sourcePoint,\r\n      }))\r\n      .reduce((closest, point) =>\r\n        point.distance < closest.distance ? point : closest,\r\n      );\r\n  }\r\n\r\n  getPathPoints(points) {\r\n    return points\r\n      .map((point, i) => ({ from: points[i], to: points[i + 1] }))\r\n      .filter(tuple => tuple.to);\r\n  }\r\n\r\n  getPathDirections(points) {\r\n    return this.getPathPoints(points).map(pathPosition =>\r\n      sameX(pathPosition.from.position, pathPosition.to.position)\r\n        ? {\r\n            axis: 'x',\r\n            position: pathPosition.from.position.x,\r\n          }\r\n        : {\r\n            axis: 'y',\r\n            position: pathPosition.from.position.y,\r\n          },\r\n    );\r\n  }\r\n\r\n  getClosestPathToPosition(points, position) {\r\n    return this.getPathDirections(points)\r\n      .map(path => ({\r\n        distance: Math.abs(position[path.axis] - path.position),\r\n        ...path,\r\n      }))\r\n      .reduce((closest, path) =>\r\n        path.distance < closest.distance ? path : closest,\r\n      );\r\n  }\r\n\r\n  isNearbySourcePosition() {\r\n    return samePosition(\r\n      this.bifurcation.getFirstPosition(),\r\n      this.bifurcation.getLastPosition(),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Removes the bifurcation points which are causing the bifurcation\r\n   * to overlay its source link. Removes the whole bifurcation, in\r\n   * case it is completely overlayed by its source link.\r\n   */\r\n  adjustBifurcationOverlayingSource() {\r\n    const source = this.bifurcation.getBifurcationSource();\r\n\r\n    if (\r\n      samePosition(\r\n        this.bifurcation.getFirstPosition(),\r\n        source.getLastPosition(),\r\n      )\r\n    ) {\r\n      if (\r\n        isPointOverLink(this.bifurcation.getSecondPosition(), source)\r\n      ) {\r\n        this.bifurcation.removePoint(\r\n          this.bifurcation.getFirstPoint(),\r\n        );\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (\r\n      isPointOverLink(this.bifurcation.getFirstPosition(), source) &&\r\n      isPointOverLink(this.bifurcation.getSecondPosition(), source)\r\n    ) {\r\n      if (!this.bifurcation.hasMiddlePoint()) {\r\n        this.bifurcation.remove();\r\n        source.removeBifurcation(this.bifurcation);\r\n        return;\r\n      }\r\n\r\n      this.bifurcation.removePoint(this.bifurcation.getFirstPoint());\r\n\r\n      if (\r\n        samePosition(\r\n          this.bifurcation.getFirstPosition(),\r\n          source.getMiddlePosition(),\r\n        )\r\n      ) {\r\n        if (\r\n          isPointOverLink(this.bifurcation.getLastPosition(), source)\r\n        ) {\r\n          this.bifurcation.remove();\r\n          source.removeBifurcation(this.bifurcation);\r\n          return;\r\n        }\r\n\r\n        this.bifurcation\r\n          .getFirstPoint()\r\n          .setPosition(source.getLastPosition());\r\n\r\n        this.mergeWithBifurcation(source);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (source.hasMiddlePoint()) {\r\n      if (\r\n        sameAxis(\r\n          this.bifurcation.getFirstPosition(),\r\n          source.getMiddlePosition(),\r\n          this.bifurcation.getSecondPosition(),\r\n        )\r\n      ) {\r\n        this.bifurcation\r\n          .getFirstPoint()\r\n          .setPosition(source.getMiddlePosition());\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Merges a link with its bifurcations, when possible.\r\n   */\r\n  mergeWithBifurcation(link) {\r\n    const source = {\r\n      first: link.getFirstPosition(),\r\n      middle: link.getMiddlePosition(),\r\n      last: link.getLastPosition(),\r\n      secondLast: link.getSecondLastPosition(),\r\n    };\r\n\r\n    link.getBifurcations().forEach(b => {\r\n      if (isPointOverLink(link.getLastPosition(), b)) {\r\n        b.getFirstPoint().setPosition(link.getLastPosition());\r\n      }\r\n    });\r\n\r\n    const elegibleBifurcations = link.getBifurcations().filter(b => {\r\n      if (!samePosition(b.getFirstPosition(), source.last))\r\n        return false;\r\n\r\n      if (!link.hasMiddlePoint() && !b.hasMiddlePoint()) return true;\r\n\r\n      if (link.hasMiddlePoint() && b.hasMiddlePoint()) {\r\n        if (samePosition(source.middle, b.getMiddlePosition())) {\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      if (\r\n        sameAxis(\r\n          source.last,\r\n          source.secondLast,\r\n          b.getSecondPosition(),\r\n        )\r\n      )\r\n        return true;\r\n\r\n      return false;\r\n    });\r\n\r\n    const bifurcationToMerge = elegibleBifurcations[0];\r\n\r\n    if (!bifurcationToMerge) return;\r\n\r\n    const newMiddle = bifurcationToMerge.getSecondLastPosition();\r\n    const newLast = bifurcationToMerge.getLastPosition();\r\n\r\n    if (!link.hasMiddlePoint()) {\r\n      link.addPoint(link.generatePoint(newMiddle.x, newMiddle.y), 1);\r\n    }\r\n\r\n    link.getLastPoint().setPosition(newLast.x, newLast.y);\r\n\r\n    if (link.isStraight() && link.hasMiddlePoint()) {\r\n      link.removePoint(link.getMiddlePoint());\r\n    }\r\n\r\n    link.removeBifurcation(bifurcationToMerge);\r\n    const bifurcationTarget = bifurcationToMerge.getBifurcationTarget();\r\n    if (bifurcationTarget) {\r\n      link.setBifurcationTarget(bifurcationTarget);\r\n      bifurcationTarget.addBifurcation(link);\r\n    }\r\n    this.sourceEdited = true;\r\n    bifurcationToMerge.remove();\r\n\r\n    if (\r\n      samePosition(link.getFirstPosition(), link.getLastPosition())\r\n    ) {\r\n      link.remove();\r\n    } else {\r\n      link.setSelected(true);\r\n    }\r\n\r\n    this.adjustBifurcationPoints(link);\r\n  }\r\n\r\n  /**\r\n   * Adjusts points for bifurcations on which its first point is not\r\n   * over its source link.\r\n   */\r\n  adjustBifurcationPoints(link) {\r\n    const { gridSize } = this.engine.getModel().getOptions();\r\n\r\n    link\r\n      .getBifurcations()\r\n      .filter(b => !isPointOverLink(b.getFirstPosition(), link))\r\n      .forEach(b => {\r\n        const newSource = snap(\r\n          closestPointToLink(b.getFirstPosition(), link),\r\n          gridSize,\r\n        );\r\n\r\n        b.getFirstPoint().setPosition(newSource.x, newSource.y);\r\n\r\n        if (sameAxis(b.getFirstPosition(), b.getLastPosition()))\r\n          return;\r\n\r\n        // Adjust middle point aswell\r\n        if (b.hasMiddlePoint()) {\r\n          b.removePoint(b.getMiddlePoint());\r\n        }\r\n\r\n        if (\r\n          sameX(link.getFirstPosition(), link.getSecondPosition())\r\n        ) {\r\n          b.addPoint(\r\n            b.generatePoint(\r\n              b.getLastPosition().x,\r\n              b.getFirstPosition().y,\r\n            ),\r\n            1,\r\n          );\r\n        } else {\r\n          b.addPoint(\r\n            b.generatePoint(\r\n              b.getFirstPosition().x,\r\n              b.getLastPosition().y,\r\n            ),\r\n            1,\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Updates bifurcation's points upon mouse move.\r\n   */\r\n  fireMouseMoved(event) {\r\n    handleLinkDrag.call(this, event, this.bifurcation);\r\n  }\r\n}\r\n","import { AbstractDisplacementState } from '@projectstorm/react-canvas-core';\r\n\r\nexport default class DragCanvasState extends AbstractDisplacementState {\r\n  constructor() {\r\n    super({\r\n      name: 'drag-canvas',\r\n    });\r\n  }\r\n\r\n  async activated(prev) {\r\n    super.activated(prev);\r\n    this.engine.getModel().clearSelection();\r\n    await this.engine.repaintCanvas(true);\r\n\r\n    // We can block layer rendering because we are only targeting the transforms\r\n    this.engine\r\n      .getModel()\r\n      .getLayers()\r\n      .forEach(layer => layer.allowRepaint(false));\r\n\r\n    this.initialCanvasX = this.engine.getModel().getOffsetX();\r\n    this.initialCanvasY = this.engine.getModel().getOffsetY();\r\n  }\r\n\r\n  deactivated(next) {\r\n    super.deactivated(next);\r\n\r\n    this.engine\r\n      .getModel()\r\n      .getLayers()\r\n      .forEach(layer => layer.allowRepaint(true));\r\n  }\r\n\r\n  fireMouseMoved(event) {\r\n    // Allow moving only with left clicks\r\n    if (\r\n      event.event.nativeEvent.which !== 1 &&\r\n      !event.event.nativeEvent.targetTouches\r\n    )\r\n      return;\r\n\r\n    this.engine\r\n      .getModel()\r\n      .setOffset(\r\n        this.initialCanvasX + event.displacementX,\r\n        this.initialCanvasY + event.displacementY,\r\n      );\r\n    this.engine.repaintCanvas();\r\n  }\r\n}\r\n","import {\r\n  AbstractDisplacementState,\r\n  Action,\r\n  InputType,\r\n} from '@projectstorm/react-canvas-core';\r\n\r\nimport BaseModel from '../../BaseModel';\r\nimport PortModel from '../../Port/PortModel';\r\nimport {\r\n  nearby,\r\n  getLandingLink,\r\n  getIncompatibleWidthsErrorMessage,\r\n} from './common';\r\nimport handleLinkDrag from './handleLinkDrag';\r\n\r\n/**\r\n * This State is responsible for handling link creation events.\r\n */\r\nexport default class DragNewLinkState extends AbstractDisplacementState {\r\n  constructor(showSnackbar) {\r\n    super({ name: 'drag-new-link' });\r\n\r\n    this.registerAction(\r\n      new Action({\r\n        type: InputType.MOUSE_DOWN,\r\n        fire: event => {\r\n          this.moveDirection = undefined;\r\n          this.hasStartedMoving = false;\r\n\r\n          this.port = this.engine.getMouseElement(event.event);\r\n\r\n          if (\r\n            !(this.port instanceof PortModel) ||\r\n            this.port.isLocked()\r\n          ) {\r\n            this.eject();\r\n            return;\r\n          }\r\n\r\n          this.link = this.port.createLinkModel();\r\n\r\n          if (!this.link) {\r\n            this.eject();\r\n            return;\r\n          }\r\n\r\n          this.link.setSelected(true);\r\n          this.link.setSourcePort(this.port);\r\n          this.engine.getModel().clearSelection();\r\n          this.engine.getModel().addLink(this.link);\r\n          this.port.reportPosition();\r\n        },\r\n      }),\r\n    );\r\n\r\n    this.registerAction(\r\n      new Action({\r\n        type: InputType.MOUSE_UP,\r\n        fire: event => {\r\n          const model = this.engine.getMouseElement(event.event);\r\n\r\n          // Disallows creation under nodes\r\n          if (\r\n            Object.getPrototypeOf(model) instanceof BaseModel ||\r\n            this.isNearbySourcePort(event.event)\r\n          ) {\r\n            this.link.remove();\r\n            this.engine.repaintCanvas();\r\n          }\r\n\r\n          // Link connecting to port\r\n          if (\r\n            model instanceof PortModel &&\r\n            this.port.canLinkToPort(model)\r\n          ) {\r\n            // Disallows connecting ports with different bit numbers\r\n            if (this.port.getBits() !== model.getBits()) {\r\n              this.link.remove();\r\n              this.engine.repaintCanvas();\r\n              showSnackbar(\r\n                getIncompatibleWidthsErrorMessage(this.port, model),\r\n              );\r\n              return;\r\n            }\r\n\r\n            this.link.setTargetPort(model);\r\n            model.reportPosition();\r\n            this.engine.repaintCanvas();\r\n            this.fireEvent();\r\n            return;\r\n          }\r\n\r\n          // Link landing on another link\r\n          const landing = getLandingLink(this.link, this.engine);\r\n          if (landing) {\r\n            // Disallows connecting links with different bit numbers\r\n            if (landing.getBits() !== this.link.getBits()) {\r\n              this.link.remove();\r\n              this.engine.repaintCanvas();\r\n              showSnackbar(\r\n                getIncompatibleWidthsErrorMessage(this.link, landing),\r\n              );\r\n              return;\r\n            }\r\n\r\n            const reverse = this.engine\r\n              .getFactoryForLink(landing)\r\n              .generateModel();\r\n            reverse.setPoints(this.link.getPoints().reverse());\r\n            reverse.setTargetPort(this.link.getSourcePort());\r\n            reverse.setBifurcationSource(landing);\r\n            reverse.setBits(landing.getBits());\r\n\r\n            landing.addBifurcation(reverse);\r\n            landing.setSelected(true);\r\n\r\n            this.link.remove();\r\n            this.engine.getModel().addLink(reverse);\r\n            this.link = reverse;\r\n          }\r\n\r\n          this.fireEvent();\r\n        },\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Event is fired to be on the command manager, so the user can undo\r\n   * and redo it.\r\n   */\r\n  fireEvent = () => {\r\n    this.engine.fireEvent({ link: this.link }, 'linkAdded');\r\n  };\r\n\r\n  isNearbySourcePort(event) {\r\n    const point = this.engine.getRelativeMousePoint(event);\r\n\r\n    const sourcePort = this.link.getSourcePort();\r\n    const sourcePortSize = sourcePort.width;\r\n    const sourcePortPosition = sourcePort.getPosition();\r\n\r\n    return nearby(point, sourcePortPosition, sourcePortSize);\r\n  }\r\n\r\n  /**\r\n   * Updates link's points upon mouse move.\r\n   */\r\n  fireMouseMoved(event) {\r\n    handleLinkDrag.call(this, event, this.link);\r\n  }\r\n}\r\n","import { Point } from '@projectstorm/geometry';\r\nimport {\r\n  Action,\r\n  InputType,\r\n  AbstractDisplacementState,\r\n} from '@projectstorm/react-canvas-core';\r\n\r\nimport BaseModel from '../../BaseModel';\r\nimport {\r\n  snap,\r\n  samePosition,\r\n  sameX,\r\n  sameY,\r\n  closestPointToLink,\r\n} from './common';\r\n\r\n/**\r\n * This State handles node moving.\r\n *\r\n * When nodes are moved, all of its links (and all bifurcations from\r\n * or to this link) need to be rearranged.\r\n */\r\nexport default class MoveItemsState extends AbstractDisplacementState {\r\n  constructor() {\r\n    super({\r\n      name: 'move-items',\r\n    });\r\n\r\n    this.registerAction(\r\n      new Action({\r\n        type: InputType.MOUSE_DOWN,\r\n        fire: event => {\r\n          if (this.engine.getModel().isLocked()) {\r\n            this.eject();\r\n            return;\r\n          }\r\n\r\n          this.lastDisplacement = new Point(0, 0);\r\n\r\n          this.element = this.engine\r\n            .getActionEventBus()\r\n            .getModelForEvent(event);\r\n\r\n          if (!this.element) {\r\n            this.eject();\r\n            return;\r\n          }\r\n\r\n          if (!this.element.isSelected()) {\r\n            this.engine.getModel().clearSelection();\r\n          }\r\n\r\n          this.linkDirections = this.getLinkDirections(this.element);\r\n\r\n          this.element.setSelected(true);\r\n          this.engine.repaintCanvas();\r\n\r\n          this.nodesBefore = this.getNodesPositions();\r\n          this.linksBefore = this.getLinksPoints();\r\n        },\r\n      }),\r\n    );\r\n\r\n    this.registerAction(\r\n      new Action({\r\n        type: InputType.MOUSE_UP,\r\n        fire: () => {\r\n          if (\r\n            this.lastDisplacement.x === 0 &&\r\n            this.lastDisplacement.y === 0\r\n          ) {\r\n            return;\r\n          }\r\n\r\n          this.fireEvent();\r\n        },\r\n      }),\r\n    );\r\n  }\r\n\r\n  getNodesPositions = () =>\r\n    this.engine\r\n      .getModel()\r\n      .getSelectedEntities()\r\n      .filter(\r\n        model => Object.getPrototypeOf(model) instanceof BaseModel,\r\n      )\r\n      .map(node => ({\r\n        id: node.getID(),\r\n        position: node.getPosition(),\r\n      }));\r\n\r\n  getLinksPoints = () =>\r\n    this.engine\r\n      .getModel()\r\n      .getSelectedEntities()\r\n      .filter(\r\n        model => Object.getPrototypeOf(model) instanceof BaseModel,\r\n      )\r\n      .map(node => node.getAllLinks())\r\n      .flat()\r\n      .map(link => ({\r\n        id: link.getID(),\r\n        points: link.getPoints().map(point => point.getPosition()),\r\n      }));\r\n\r\n  /**\r\n   * Event is fired to be on the command manager, so the user can undo\r\n   * and redo it.\r\n   */\r\n  fireEvent() {\r\n    this.engine.fireEvent(\r\n      {\r\n        nodes: {\r\n          before: this.nodesBefore,\r\n          after: this.getNodesPositions(),\r\n        },\r\n        links: {\r\n          before: this.linksBefore,\r\n          after: this.getLinksPoints(),\r\n        },\r\n      },\r\n      'entitiesMoved',\r\n    );\r\n  }\r\n\r\n  activated(previous) {\r\n    super.activated(previous);\r\n    this.initialPositions = {};\r\n  }\r\n\r\n  /**\r\n   * Gets all links from a given node, including all its bifurcations.\r\n   */\r\n  getLinksFromNode(node) {\r\n    if (!(Object.getPrototypeOf(node) instanceof BaseModel))\r\n      return [];\r\n\r\n    return Object.values(node.getPorts())\r\n      .map(p => Object.entries(p.getLinks()))\r\n      .filter(entry => entry.length > 0)\r\n      .flat()\r\n      .map(([id, link]) => [\r\n        [id, link],\r\n        ...this.getBifurcatedLinks(link),\r\n      ])\r\n      .flat();\r\n  }\r\n\r\n  getBifurcatedLinks(link) {\r\n    return link\r\n      .getBifurcations()\r\n      .map(b => [[b.getID(), b], ...this.getBifurcatedLinks(b)])\r\n      .flat();\r\n  }\r\n\r\n  getLinkDirections(node) {\r\n    return this.getLinksFromNode(node).reduce(\r\n      (acc, [id, link]) => ({\r\n        ...acc,\r\n        [id]: this.getLinkDirection(link),\r\n      }),\r\n      {},\r\n    );\r\n  }\r\n\r\n  getLinkDirection(link) {\r\n    if (!link.hasMiddlePoint()) {\r\n      return null;\r\n    }\r\n\r\n    const first = link.getFirstPosition();\r\n    const middle = link.getMiddlePosition();\r\n\r\n    if (sameX(first, middle)) return 'vertical';\r\n    if (sameY(first, middle)) return 'horizontal';\r\n\r\n    return null;\r\n  }\r\n\r\n  fireMouseMoved(event) {\r\n    // Allow moving only with left clicks\r\n    if (event.event.nativeEvent.which !== 1) return;\r\n\r\n    const currentDisplacement = snap(\r\n      new Point(\r\n        event.virtualDisplacementX,\r\n        event.virtualDisplacementY,\r\n      ),\r\n      this.engine.getModel().getOptions().gridSize,\r\n    );\r\n\r\n    // Avoids rearranging everything before moving at least one grid\r\n    if (samePosition(currentDisplacement, this.lastDisplacement)) {\r\n      return;\r\n    }\r\n    this.lastDisplacement = currentDisplacement;\r\n\r\n    this.engine\r\n      .getModel()\r\n      .getSelectedEntities()\r\n      .filter(\r\n        entity => Object.getPrototypeOf(entity) instanceof BaseModel,\r\n      )\r\n      .forEach(entity => {\r\n        this.moveEntity(entity, event);\r\n        this.adjustNodeLinks(entity);\r\n      });\r\n\r\n    this.engine.repaintCanvas();\r\n  }\r\n\r\n  moveEntity(entity, event) {\r\n    if (entity.isLocked()) {\r\n      return;\r\n    }\r\n\r\n    if (!this.initialPositions[entity.getID()]) {\r\n      this.initialPositions[entity.getID()] = {\r\n        point: entity.getPosition(),\r\n        item: entity,\r\n      };\r\n    }\r\n\r\n    const initial = this.initialPositions[entity.getID()].point;\r\n    const model = this.engine.getModel();\r\n\r\n    entity.setPosition(\r\n      model.getGridPosition(initial.x + event.virtualDisplacementX),\r\n      model.getGridPosition(initial.y + event.virtualDisplacementY),\r\n    );\r\n  }\r\n\r\n  adjustNodeLinks(node) {\r\n    Object.values(node.getPorts()).forEach(port =>\r\n      Object.values(port.getLinks()).forEach(this.adjustLinkPoints),\r\n    );\r\n  }\r\n\r\n  adjustLinkPoints = link => {\r\n    const first = link.getFirstPosition();\r\n    const last = link.getLastPosition();\r\n\r\n    if (\r\n      !link.hasMiddlePoint() &&\r\n      first.x !== last.x &&\r\n      first.y !== last.y\r\n    ) {\r\n      link.addPoint(link.generatePoint(first.x, last.y), 1);\r\n    } else if (link.hasMiddlePoint()) {\r\n      const linkDirection = this.linkDirections[link.getID()];\r\n\r\n      if (linkDirection === 'horizontal') {\r\n        link.getMiddlePoint().setPosition(last.x, first.y);\r\n      } else {\r\n        link.getMiddlePoint().setPosition(first.x, last.y);\r\n      }\r\n\r\n      const middle = link.getMiddlePosition();\r\n\r\n      if (samePosition(first, middle) || samePosition(middle, last)) {\r\n        link.removePoint(link.getMiddlePoint());\r\n      }\r\n    }\r\n\r\n    // Adjusts origin/target position from bifurcations of this link\r\n    this.adjustLinkBifurcations(link);\r\n  };\r\n\r\n  adjustLinkBifurcations(link) {\r\n    const bifurcations = link.getBifurcations();\r\n\r\n    bifurcations.forEach(bifurcation => {\r\n      this.adjustFirstAndLastPoints(bifurcation);\r\n\r\n      // Adjusts the points of this bifurcation (recursion)\r\n      this.adjustLinkPoints(bifurcation);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Assures that the first position on a bifurcation is still over\r\n   * the source link, and that the last position is still over the\r\n   * target link.\r\n   */\r\n  adjustFirstAndLastPoints(bifurcation) {\r\n    const { gridSize } = this.engine.getModel().getOptions();\r\n\r\n    const first = bifurcation.getFirstPoint();\r\n    const closestToFirst = snap(\r\n      closestPointToLink(\r\n        first.getPosition(),\r\n        bifurcation.getBifurcationSource(),\r\n      ),\r\n      gridSize,\r\n    );\r\n    first.setPosition(closestToFirst.x, closestToFirst.y);\r\n\r\n    if (bifurcation.getBifurcationTarget()) {\r\n      const last = bifurcation.getLastPoint();\r\n      const closestToLast = snap(\r\n        closestPointToLink(\r\n          last.getPosition(),\r\n          bifurcation.getBifurcationTarget(),\r\n        ),\r\n        gridSize,\r\n      );\r\n      last.setPosition(closestToLast.x, closestToLast.y);\r\n    }\r\n  }\r\n}\r\n","import { Rectangle } from '@projectstorm/geometry';\r\nimport {\r\n  AbstractDisplacementState,\r\n  SelectionLayerModel,\r\n} from '@projectstorm/react-canvas-core';\r\nimport {\r\n  LinkModel,\r\n  PointModel,\r\n} from '@projectstorm/react-diagrams-core';\r\n\r\n/**\r\n * This State handles selection box events.\r\n *\r\n * Link (and link points) selection is currently disabled.\r\n */\r\nexport default class SelectionBoxState extends AbstractDisplacementState {\r\n  constructor() {\r\n    super({\r\n      name: 'selection-box',\r\n    });\r\n  }\r\n\r\n  activated(previous) {\r\n    super.activated(previous);\r\n    this.layer = new SelectionLayerModel();\r\n    this.engine.getModel().addLayer(this.layer);\r\n  }\r\n\r\n  deactivated(next) {\r\n    super.deactivated(next);\r\n    this.layer.remove();\r\n    this.engine.repaintCanvas();\r\n  }\r\n\r\n  getBoxDimensions(event) {\r\n    const rel = this.engine.getRelativePoint(\r\n      event.event.clientX,\r\n      event.event.clientY,\r\n    );\r\n\r\n    return {\r\n      left:\r\n        rel.x > this.initialXRelative ? this.initialXRelative : rel.x,\r\n      top:\r\n        rel.y > this.initialYRelative ? this.initialYRelative : rel.y,\r\n      width: Math.abs(rel.x - this.initialXRelative),\r\n      height: Math.abs(rel.y - this.initialYRelative),\r\n      right:\r\n        rel.x < this.initialXRelative ? this.initialXRelative : rel.x,\r\n      bottom:\r\n        rel.y < this.initialYRelative ? this.initialYRelative : rel.y,\r\n    };\r\n  }\r\n\r\n  fireMouseMoved(event) {\r\n    this.layer.setBox(this.getBoxDimensions(event));\r\n\r\n    const relative = this.engine.getRelativeMousePoint({\r\n      clientX: this.initialX,\r\n      clientY: this.initialY,\r\n    });\r\n    if (event.virtualDisplacementX < 0) {\r\n      relative.x -= Math.abs(event.virtualDisplacementX);\r\n    }\r\n    if (event.virtualDisplacementY < 0) {\r\n      relative.y -= Math.abs(event.virtualDisplacementY);\r\n    }\r\n    const rect = new Rectangle(\r\n      relative,\r\n      Math.abs(event.virtualDisplacementX),\r\n      Math.abs(event.virtualDisplacementY),\r\n    );\r\n\r\n    if (!this.engine.getModel().isLocked()) {\r\n      this.engine\r\n        .getModel()\r\n        .getSelectionEntities()\r\n        .forEach(model => {\r\n          if (model.getBoundingBox) {\r\n            if (!this.allowSelection(model)) return;\r\n\r\n            const bounds = model.getBoundingBox();\r\n            if (\r\n              rect.containsPoint(bounds.getTopLeft()) &&\r\n              rect.containsPoint(bounds.getBottomRight())\r\n            ) {\r\n              model.setSelected(true);\r\n            } else {\r\n              model.setSelected(false);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    this.engine.repaintCanvas();\r\n  }\r\n\r\n  allowSelection(model) {\r\n    return (\r\n      !(model instanceof LinkModel) && !(model instanceof PointModel)\r\n    );\r\n  }\r\n}\r\n","import {\r\n  State,\r\n  Action,\r\n  InputType,\r\n} from '@projectstorm/react-canvas-core';\r\n\r\nimport SelectionBoxState from './SelectionBoxState';\r\n\r\n/**\r\n * This State handles nodes selection.\r\n */\r\nexport default class SelectingState extends State {\r\n  constructor() {\r\n    super({\r\n      name: 'selecting',\r\n    });\r\n    this.keys = ['shift'];\r\n\r\n    this.registerAction(\r\n      new Action({\r\n        type: InputType.MOUSE_DOWN,\r\n        fire: event => {\r\n          const element = this.engine\r\n            .getActionEventBus()\r\n            .getModelForEvent(event);\r\n\r\n          // Go into a selection box on the canvas state\r\n          if (!element) {\r\n            this.transitionWithEvent(new SelectionBoxState(), event);\r\n          } else {\r\n            element.setSelected(true);\r\n            this.engine.repaintCanvas();\r\n          }\r\n        },\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import {\r\n  State,\r\n  Action,\r\n  InputType,\r\n} from '@projectstorm/react-canvas-core';\r\n\r\nimport LinkModel from '../../Link/LinkModel';\r\nimport PortModel from '../../Port/PortModel';\r\nimport BifurcateLinkState from './BifurcateLinkState';\r\nimport DragCanvasState from './DragCanvasState';\r\nimport DragNewLinkState from './DragNewLinkState';\r\nimport MoveItemsState from './MoveItemsState';\r\nimport SelectingState from './SelectingState';\r\n\r\n/**\r\n * This class defines custom handlers (called states) to respond to\r\n * clicking events on certain elements.\r\n */\r\nexport default class States extends State {\r\n  constructor(showSnackbar) {\r\n    super({\r\n      name: 'diagram-states',\r\n    });\r\n\r\n    this.childStates = [new SelectingState()];\r\n    this.dragCanvas = new DragCanvasState();\r\n    this.dragNewLink = new DragNewLinkState(showSnackbar);\r\n    this.bifurcateLink = new BifurcateLinkState(showSnackbar);\r\n    this.dragItems = new MoveItemsState();\r\n\r\n    // Determine what was clicked on\r\n    this.registerAction(\r\n      new Action({\r\n        type: InputType.MOUSE_DOWN,\r\n        fire: event => {\r\n          const element = this.engine\r\n            .getActionEventBus()\r\n            .getModelForEvent(event);\r\n\r\n          // The canvas was clicked on, transition to the dragging canvas state\r\n          if (!element) {\r\n            this.transitionWithEvent(this.dragCanvas, event);\r\n          }\r\n          // Initiate dragging a new link\r\n          else if (element instanceof PortModel) {\r\n            this.transitionWithEvent(this.dragNewLink, event);\r\n          }\r\n          // Create a bifurcation\r\n          else if (element instanceof LinkModel) {\r\n            this.transitionWithEvent(this.bifurcateLink, event);\r\n          }\r\n          // Move items\r\n          else {\r\n            this.transitionWithEvent(this.dragItems, event);\r\n          }\r\n        },\r\n      }),\r\n    );\r\n\r\n    // Allows dragging the canvas on touch devices\r\n    this.registerAction(\r\n      new Action({\r\n        type: InputType.TOUCH_START,\r\n        fire: event => {\r\n          this.transitionWithEvent(this.dragCanvas, event);\r\n        },\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Point } from '@projectstorm/geometry';\r\nimport createEngine, {\r\n  DiagramModel,\r\n} from '@projectstorm/react-diagrams';\r\n\r\nimport BaseModel from '../BaseModel';\r\nimport LinkFactory from '../Link/LinkFactory';\r\nimport PortFactory from '../Port/PortFactory';\r\nimport ClipboardAction from './actions/ClipboardAction';\r\nimport DeleteAction from './actions/DeleteAction';\r\nimport DuplicateAction from './actions/DuplicateAction';\r\nimport UndoRedoAction from './actions/UndoRedoAction';\r\nimport ZoomAction from './actions/ZoomAction';\r\nimport commandHandlers from './Command/commandHandlers';\r\nimport CommandManager from './Command/CommandManager';\r\nimport States from './states/States';\r\n\r\nexport default class DiagramEngine {\r\n  constructor(components, areShortcutsAllowed, showSnackbar) {\r\n    this.components = components;\r\n    this.areShortcutsAllowed = areShortcutsAllowed;\r\n    this.showSnackbar = showSnackbar;\r\n    this.locked = false;\r\n\r\n    this.initializeEngine();\r\n    this.initializeModel();\r\n  }\r\n\r\n  getEngine = () => this.engine;\r\n\r\n  getModel = () => this.engine.getModel();\r\n\r\n  /**\r\n   * Initialization methods\r\n   */\r\n  initializeEngine = () => {\r\n    this.engine = createEngine({\r\n      registerDefaultDeleteItemsAction: false,\r\n      registerDefaultZoomCanvasAction: false,\r\n    });\r\n\r\n    this.engine.commands = new CommandManager();\r\n    this.engine.registerListener(commandHandlers(this));\r\n\r\n    this.engine\r\n      .getStateMachine()\r\n      .pushState(new States(this.showSnackbar));\r\n\r\n    const actions = [\r\n      DuplicateAction,\r\n      ClipboardAction,\r\n      DeleteAction,\r\n      UndoRedoAction,\r\n      ZoomAction,\r\n    ];\r\n    actions.forEach(Action =>\r\n      this.engine\r\n        .getActionEventBus()\r\n        .registerAction(new Action(this.areShortcutsAllowed)),\r\n    );\r\n\r\n    this.engine.getPortFactories().registerFactory(new PortFactory());\r\n    this.engine.getLinkFactories().registerFactory(new LinkFactory());\r\n\r\n    this.registerComponents();\r\n  };\r\n\r\n  initializeModel = () => {\r\n    this.model = new DiagramModel();\r\n\r\n    this.model.setGridSize(15);\r\n    this.model.setLocked(false);\r\n    this.model.registerListener({\r\n      eventDidFire: event => {\r\n        const type = event.function;\r\n        if (type === 'offsetUpdated') this.adjustGridOffset(event);\r\n        if (type === 'zoomUpdated') this.adjustGridZoom(event);\r\n      },\r\n    });\r\n    this.realignGrid();\r\n\r\n    this.engine.setModel(this.model);\r\n  };\r\n\r\n  registerComponents = () => {\r\n    this.components.forEach(component => {\r\n      this.engine.getNodeFactories().registerFactory(component);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Serializing & deserializing methods\r\n   */\r\n  serialize = () => this.model.serialize();\r\n\r\n  load = circuit => {\r\n    this.engine.commands.clear();\r\n    this.model.deserializeModel(circuit, this.engine);\r\n    this.realignGrid();\r\n    this.engine.repaintCanvas();\r\n  };\r\n\r\n  /**\r\n   * Diagram locking methods\r\n   */\r\n  setLocked = locked => {\r\n    this.model.setLocked(locked);\r\n    this.locked = locked;\r\n  };\r\n\r\n  isLocked = () => this.locked;\r\n\r\n  /**\r\n   * Diagram painting methods\r\n   */\r\n  repaint = () => this.engine.repaintCanvas();\r\n\r\n  realignGrid = () => {\r\n    this.adjustGridOffset({\r\n      offsetX: this.model.getOffsetX(),\r\n      offsetY: this.model.getOffsetY(),\r\n    });\r\n\r\n    this.adjustGridZoom({\r\n      zoom: this.model.getZoomLevel(),\r\n    });\r\n  };\r\n\r\n  adjustGridOffset = ({ offsetX, offsetY }) => {\r\n    document.body.style.setProperty(\r\n      '--offset-x',\r\n      `${Math.round(offsetX)}px`,\r\n    );\r\n    document.body.style.setProperty(\r\n      '--offset-y',\r\n      `${Math.round(offsetY)}px`,\r\n    );\r\n  };\r\n\r\n  adjustGridZoom = ({ zoom }) => {\r\n    const { gridSize } = this.model.getOptions();\r\n    document.body.style.setProperty(\r\n      '--grid-size',\r\n      `${(gridSize * zoom) / 100}px`,\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Component creation and configuration methods\r\n   */\r\n  handleComponentDrop = (event, component) => {\r\n    const { Model } = this.components.find(\r\n      c => c.type === component.type,\r\n    );\r\n\r\n    const getSnappedWindowCenter = () => {\r\n      const zoomFactor = this.model.getZoomLevel() / 100;\r\n\r\n      const x =\r\n        -(this.model.getOffsetX() / zoomFactor) +\r\n        window.innerWidth / (zoomFactor * 2);\r\n      const y =\r\n        -(this.model.getOffsetY() / zoomFactor) +\r\n        window.innerHeight / (zoomFactor * 2);\r\n\r\n      return new Point(\r\n        Math.round(x / 15) * 15,\r\n        Math.round(y / 15) * 15,\r\n      );\r\n    };\r\n\r\n    const getSnappedRelativeMousePoint = () => {\r\n      const { x, y } = this.engine.getRelativeMousePoint(event);\r\n      return new Point(\r\n        Math.round(x / 15) * 15,\r\n        Math.round(y / 15) * 15,\r\n      );\r\n    };\r\n\r\n    const point = event\r\n      ? getSnappedRelativeMousePoint(event)\r\n      : getSnappedWindowCenter();\r\n\r\n    const node = new Model(component.configurations, component.type);\r\n    node.setPosition(point);\r\n    this.model.addNode(node);\r\n\r\n    this.engine.fireEvent({ nodes: [node] }, 'componentsAdded');\r\n    this.engine.repaintCanvas();\r\n  };\r\n\r\n  handleComponentEdit = (node, configurations) => {\r\n    const configurationsBefore = node.configurations;\r\n    const linksBefore = node.getAllLinks();\r\n\r\n    this.editComponentConfiguration(node, configurations);\r\n\r\n    this.engine.fireEvent(\r\n      {\r\n        node,\r\n        configurations: {\r\n          before: configurationsBefore,\r\n          after: node.configurations,\r\n        },\r\n        links: {\r\n          before: linksBefore,\r\n          after: node.getAllLinks(),\r\n        },\r\n      },\r\n      'componentEdited',\r\n    );\r\n\r\n    this.engine.repaintCanvas();\r\n  };\r\n\r\n  /**\r\n   * When the component configuration is changed, we reinitialize the\r\n   * given component with the given configurations.\r\n   *\r\n   * For simplicity's sake, if this configuration edit creates or\r\n   * removes a port, we delete all its links. Also, if the number of\r\n   * bits of a port is changed, its main link is deleted.\r\n   */\r\n  editComponentConfiguration = (node, configurations) => {\r\n    const portsBefore = node.getPorts();\r\n\r\n    // Resets configurations and ports for the node and reinitialize\r\n    node.configurations = configurations; // eslint-disable-line no-param-reassign\r\n    node.ports = {}; // eslint-disable-line no-param-reassign\r\n    node.initialize(configurations);\r\n\r\n    const hasNewPort = Object.values(node.getPorts()).some(\r\n      newPort => !portsBefore[newPort.getName()],\r\n    );\r\n    const hasRemovedPort = Object.values(portsBefore).some(\r\n      oldPort => !node.getPort(oldPort.getName()),\r\n    );\r\n\r\n    if (hasNewPort || hasRemovedPort) {\r\n      /**\r\n       * If there was any port added or removed, we need to remove all\r\n       * links connected to the edited component.\r\n       */\r\n      Object.values(portsBefore).forEach(port =>\r\n        Object.values(port.getLinks()).forEach(link => link.remove()),\r\n      );\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * If no port was neither added or removed, we need to map old\r\n     * port links to new ports\r\n     */\r\n    Object.values(portsBefore).forEach(portBefore => {\r\n      const newPort = node.getPort(portBefore.getName());\r\n      /**\r\n       * If the number of bits for this port has changed, delete its\r\n       * main link, to avoid inconsistencies.\r\n       */\r\n      if (portBefore.getBits() !== newPort.getBits()) {\r\n        if (portBefore.getMainLink())\r\n          portBefore.getMainLink().remove();\r\n        return;\r\n      }\r\n\r\n      const link = Object.values(portBefore.getLinks())[0];\r\n      if (!link) return;\r\n      newPort.addLink(link);\r\n      if (portBefore === link.getSourcePort())\r\n        link.setSourcePort(newPort);\r\n      if (portBefore === link.getTargetPort())\r\n        link.setTargetPort(newPort);\r\n      portBefore.remove();\r\n    });\r\n  };\r\n\r\n  clearSelection = () =>\r\n    this.getEngine()\r\n      .getModel()\r\n      .clearSelection();\r\n\r\n  getSelectedNodes = () =>\r\n    this.engine\r\n      .getModel()\r\n      .getSelectedEntities()\r\n      .filter(entity => entity instanceof BaseModel);\r\n\r\n  fireAction = event =>\r\n    this.engine.getActionEventBus().fireAction({\r\n      event: {\r\n        ...event,\r\n        key: '',\r\n        preventDefault: () => {},\r\n        stopPropagation: () => {},\r\n      },\r\n    });\r\n\r\n  duplicateSelected = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyD' });\r\n\r\n  cutSelected = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyX' });\r\n\r\n  copySelected = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyC' });\r\n\r\n  pasteSelected = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyV' });\r\n\r\n  deleteSelected = () =>\r\n    this.fireAction({ type: 'keydown', code: 'Delete' });\r\n\r\n  undo = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyZ' });\r\n\r\n  redo = () =>\r\n    this.fireAction({\r\n      type: 'keydown',\r\n      ctrlKey: true,\r\n      shiftKey: true,\r\n      code: 'KeyZ',\r\n    });\r\n\r\n  zoomIn = ({ event }) =>\r\n    this.fireAction({\r\n      clientX: event.clientX,\r\n      clientY: event.clientY,\r\n      type: 'wheel',\r\n      deltaY: +1,\r\n    });\r\n\r\n  zoomOut = ({ event }) =>\r\n    this.fireAction({\r\n      clientX: event.clientX,\r\n      clientY: event.clientY,\r\n      type: 'wheel',\r\n      deltaY: -1,\r\n    });\r\n\r\n  /**\r\n   * Simulation methods\r\n   */\r\n  synchronizeLink = (id, value) =>\r\n    this.getEngine()\r\n      .getModel()\r\n      .getLink(id)\r\n      .setValue(value);\r\n\r\n  synchronizeComponent = (id, diff) => {\r\n    const component = this.getEngine()\r\n      .getModel()\r\n      .getNode(id);\r\n\r\n    // Sets output port values\r\n    Object.entries(diff.output).forEach(([name, value]) =>\r\n      component.getPort(name).setValue(value),\r\n    );\r\n\r\n    // Sets custom properties\r\n    Object.entries(diff.properties).forEach(([name, value]) => {\r\n      component[name] = value;\r\n    });\r\n  };\r\n\r\n  clearAllValues = () => {\r\n    this.clearLinkValues();\r\n    this.clearPortValues();\r\n  };\r\n\r\n  clearLinkValues = () =>\r\n    this.getEngine()\r\n      .getModel()\r\n      .getLinks()\r\n      .forEach(link => link.setValue(null));\r\n\r\n  clearPortValues = () =>\r\n    this.getEngine()\r\n      .getModel()\r\n      .getNodes()\r\n      .forEach(node =>\r\n        Object.values(node.getPorts()).forEach(port =>\r\n          port.setValue(null),\r\n        ),\r\n      );\r\n}\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst MAX_PORTS = 5;\r\n\r\n/**\r\n * Given a number of ports, returns an array with the port positions\r\n * symmetrically distributed.\r\n */\r\nexport const distributePorts = numPorts => {\r\n  if (numPorts === 2) return [1, 5];\r\n  if (numPorts === 3) return [1, 3, 5];\r\n  if (numPorts === 4) return [1, 2, 4, 5];\r\n\r\n  const isNumberOfPortsEven = numPorts % 2 === 0;\r\n  const closestEven = numPorts - (isNumberOfPortsEven ? 0 : 1);\r\n\r\n  let startAt = 0;\r\n  let length = MAX_PORTS;\r\n  if (numPorts > MAX_PORTS) {\r\n    startAt = Math.floor((MAX_PORTS - closestEven) / 2);\r\n    length = closestEven + 1;\r\n  }\r\n\r\n  const result = [...Array(length).keys()].map(i => i + startAt + 1);\r\n  if (isNumberOfPortsEven) {\r\n    result.splice(numPorts / 2, 1);\r\n  }\r\n  return result;\r\n};\r\n\r\nconst PortExtensionBar = styled.div`\r\n  position: absolute;\r\n  left: ${props => props.offsetX}px;\r\n  height: ${props => props.size}px;\r\n  width: 2px;\r\n  background: ${props =>\r\n    props.selected\r\n      ? 'var(--border-selected)'\r\n      : 'var(--border-unselected)'};\r\n\r\n  ${props => `${props.place}: 88px;`}\r\n`;\r\n\r\nexport const PortExtension = ({\r\n  selected,\r\n  portPositions,\r\n  offsetX = 1,\r\n}) => {\r\n  const lastPortPosition = portPositions[portPositions.length - 1];\r\n  if (lastPortPosition <= MAX_PORTS) return null;\r\n\r\n  const size = (lastPortPosition - MAX_PORTS) * 15;\r\n\r\n  return (\r\n    <>\r\n      <PortExtensionBar\r\n        selected={selected}\r\n        size={size}\r\n        place=\"top\"\r\n        offsetX={offsetX}\r\n      />\r\n      <PortExtensionBar\r\n        selected={selected}\r\n        size={size}\r\n        place=\"bottom\"\r\n        offsetX={offsetX}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { PortExtension, distributePorts } from '../portExtendUtils';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 90px;\r\n  height: 90px;\r\n\r\n  transition: 100ms linear;\r\n  svg {\r\n    fill: ${props =>\r\n      props.selected\r\n        ? 'var(--body-selected)'\r\n        : 'var(--body-unselected)'};\r\n    stroke: ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n  }\r\n`;\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n\r\n  ${props => {\r\n    if (props.name === 'out') return '';\r\n    return `top: ${props.position * 15 - 5}px;`;\r\n  }}\r\n\r\n  ${props => {\r\n    if (props.name === 'out') return 'right: -5px';\r\n    return 'left: -5px';\r\n  }};\r\n`;\r\n\r\nexport const Shape = ({ size = 90 }) => (\r\n  <svg\r\n    height={size}\r\n    width={size}\r\n    viewBox=\"0 0 23.812499 23.812501\"\r\n    fill=\"var(--body-unselected)\"\r\n    stroke=\"var(--border-unselected)\"\r\n    strokeWidth=\"var(--border-width)\"\r\n  >\r\n    <g>\r\n      <path\r\n        transform=\"scale(0.26458333)\"\r\n        d=\"M 2 2 L 2 45 A 42.999999 42.999999 0 0 0 2 45.271484 L 2 88 L 45 88 A 42.999999 42.999999 0 0 0 88 45 A 42.999999 42.999999 0 0 0 45 2 L 44.728516 2 L 2 2 z \"\r\n      />\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nconst AndWidget = props => {\r\n  const { model } = props;\r\n\r\n  const inputPorts = Object.values(model.getInputPorts());\r\n  const portPositions = distributePorts(inputPorts.length);\r\n\r\n  return (\r\n    <Wrapper selected={model.isSelected()}>\r\n      <PortExtension\r\n        selected={model.isSelected()}\r\n        portPositions={portPositions}\r\n      />\r\n      {inputPorts.map((port, i) => (\r\n        <PositionedPort\r\n          key={port.getName()}\r\n          name={port.getName()}\r\n          position={portPositions[i]}\r\n        />\r\n      ))}\r\n      <PositionedPort name=\"out\" />\r\n      <Shape />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AndWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape } from './AndWidget';\r\n\r\nconst AndIcon = () => <Shape size={30} />;\r\n\r\nexport default AndIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class AndModel extends BaseModel {\r\n  initialize(configurations) {\r\n    const INPUT_PORTS_NUMBER = Number(\r\n      configurations.INPUT_PORTS_NUMBER,\r\n    );\r\n    this.dataBits = Number(configurations.DATA_BITS);\r\n\r\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\r\n      this.addInputPort(`in${i}`, { bits: this.dataBits });\r\n    }\r\n    this.addOutputPort('out', { bits: this.dataBits });\r\n  }\r\n\r\n  executeBit(bits) {\r\n    if (bits.every(bit => bit === 1)) return 1;\r\n    if (bits.some(bit => bit === 0)) return 0;\r\n    return 'e';\r\n  }\r\n\r\n  step(input) {\r\n    return {\r\n      out: Object.values(input)\r\n        .map(value => value.asArray(this.dataBits))\r\n        .transpose()\r\n        .map(this.executeBit),\r\n    };\r\n  }\r\n\r\n  stepFloating(input) {\r\n    return this.step(input);\r\n  }\r\n\r\n  stepError(input) {\r\n    return this.step(input);\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './AndIcon';\r\nimport model from './AndModel';\r\nimport widget from './AndWidget';\r\n\r\nexport default new Component({\r\n  type: 'And',\r\n  name: 'And',\r\n  description: 'Logic \"and\" gate',\r\n  group: 'Logic gates',\r\n  configurations: [\r\n    {\r\n      name: 'INPUT_PORTS_NUMBER',\r\n      type: 'number',\r\n      default: 2,\r\n      label: 'Number of input ports',\r\n      min: 2,\r\n      max: 16,\r\n      validate(value) {\r\n        if (value < this.min)\r\n          return `Minimum input ports is ${this.min}`;\r\n        if (value > this.max)\r\n          return `Maximum input ports is ${this.max}`;\r\n        return null;\r\n      },\r\n    },\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data bits',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 30px;\r\n  height: 30px;\r\n\r\n  transition: 100ms linear;\r\n  svg {\r\n    fill: ${props =>\r\n      props.selected\r\n        ? 'var(--body-selected)'\r\n        : 'var(--body-unselected)'};\r\n    stroke: ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n  }\r\n`;\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n  ${props => {\r\n    if (props.name === 'in') return 'left: -5px;';\r\n    if (props.name === 'out') return 'right: -5px;';\r\n    return '';\r\n  }}\r\n`;\r\n\r\nexport const Shape = ({ size = 30 }) => (\r\n  <svg\r\n    height={size}\r\n    width={size}\r\n    viewBox=\"0 0 45.0 45.0\"\r\n    fill=\"var(--body-unselected)\"\r\n    stroke=\"var(--border-unselected)\"\r\n    strokeWidth=\"var(--border-width)\"\r\n  >\r\n    <g>\r\n      <path d=\"M 1.0207771,1.6492624 V 43.357967 L 42.724327,22.649262 Z\" />\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nconst BufferWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n  } = model;\r\n\r\n  return (\r\n    <Wrapper selected={selected}>\r\n      <PositionedPort name=\"in\" />\r\n      <PositionedPort name=\"out\" />\r\n      <Shape />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default BufferWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape } from './BufferWidget';\r\n\r\nconst BufferIcon = () => <Shape size={30} />;\r\n\r\nexport default BufferIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class BufferModel extends BaseModel {\r\n  initialize(configurations) {\r\n    const DATA_BITS = Number(configurations.DATA_BITS);\r\n\r\n    this.addInputPort('in', { bits: DATA_BITS });\r\n    this.addOutputPort('out', { bits: DATA_BITS });\r\n  }\r\n\r\n  step(input) {\r\n    return { out: input.in };\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './BufferIcon';\r\nimport model from './BufferModel';\r\nimport widget from './BufferWidget';\r\n\r\nexport default new Component({\r\n  type: 'Buffer',\r\n  name: 'Buffer',\r\n  description: 'Simple buffer',\r\n  group: 'Logic gates',\r\n  configurations: [\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data bits',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nexport const Shape = styled.div`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 30px;\r\n  height: 30px;\r\n\r\n  background: ${props =>\r\n    props.selected\r\n      ? 'var(--body-selected)'\r\n      : 'var(--body-unselected)'};\r\n  border: 2px solid\r\n    ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n\r\n  transition: 100ms linear;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  position: absolute;\r\n  border-radius: 50%;\r\n  width: 18px;\r\n  height: 18px;\r\n  outline: none;\r\n\r\n  border: 2px solid rgba(0, 0, 0, 0.3);\r\n  background: linear-gradient(\r\n    225deg,\r\n    rgba(238, 0, 0, 1) 0%,\r\n    rgba(125, 20, 20, 1) 100%\r\n  );\r\n\r\n  :active {\r\n    border: 2px solid rgba(255, 255, 255, 0.5);\r\n    background: linear-gradient(\r\n      225deg,\r\n      rgba(125, 20, 20, 1) 0%,\r\n      rgba(238, 0, 0, 1) 100%\r\n    );\r\n  }\r\n`;\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n  right: -7px;\r\n`;\r\n\r\nconst ButtonWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n  } = model;\r\n\r\n  const buttonRef = useRef();\r\n\r\n  const handleReleaseAway = event => {\r\n    if (\r\n      buttonRef.current &&\r\n      !buttonRef.current.contains(event.target)\r\n    ) {\r\n      model.onRelease();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mouseup', handleReleaseAway);\r\n    return () =>\r\n      document.removeEventListener('mouseup', handleReleaseAway);\r\n  });\r\n\r\n  return (\r\n    <Shape selected={selected}>\r\n      <PositionedPort name=\"out\" />\r\n      <Button\r\n        ref={buttonRef}\r\n        onMouseDown={() => model.onClick()}\r\n        onMouseUp={() => model.onRelease()}\r\n      />\r\n    </Shape>\r\n  );\r\n};\r\n\r\nexport default ButtonWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape, Button } from './ButtonWidget';\r\n\r\nconst ButtonIcon = () => (\r\n  <Shape>\r\n    <Button as=\"div\" />\r\n  </Shape>\r\n);\r\n\r\nexport default ButtonIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class ButtonModel extends BaseModel {\r\n  initialize() {\r\n    this.addOutputPort('out');\r\n  }\r\n\r\n  onSimulationStart() {\r\n    this.emit({ out: 0 });\r\n  }\r\n\r\n  onClick() {\r\n    this.emit({ out: 1 });\r\n  }\r\n\r\n  onRelease() {\r\n    this.emit({ out: 0 });\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './ButtonIcon';\r\nimport model from './ButtonModel';\r\nimport widget from './ButtonWidget';\r\n\r\nexport default new Component({\r\n  type: 'Button',\r\n  name: 'Button',\r\n  description: 'Simple button',\r\n  group: 'Input & output',\r\n  configurations: [],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n  left: -7px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nconst Body = styled.div`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 30px;\r\n  height: 30px;\r\n\r\n  background: ${props =>\r\n    `rgba(62, 62, 62, ${props.selected ? 0.5 : 1})`};\r\n  box-shadow: 0 0 ${props => (props.isActive ? 15 : 0)}px black;\r\n  border: 2px solid\r\n    ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n  border-radius: 15px;\r\n`;\r\n\r\nconst Hole = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n\r\n  background: black;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const Shape = ({ selected, isActive, children }) => (\r\n  <Body selected={selected} isActive={isActive} data-testid=\"body\">\r\n    <Hole />\r\n    {children}\r\n  </Body>\r\n);\r\n\r\nconst BuzzerWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n  } = model;\r\n\r\n  return (\r\n    <Shape selected={selected} isActive={model.isActive()}>\r\n      <PositionedPort name=\"in\" />\r\n    </Shape>\r\n  );\r\n};\r\n\r\nexport default BuzzerWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape } from './BuzzerWidget';\r\n\r\nconst BuzzerIcon = () => <Shape color=\"#00ff00\" />;\r\n\r\nexport default BuzzerIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class BuzzerModel extends BaseModel {\r\n  initialize(configurations) {\r\n    this.frequencyHz = Number(configurations.FREQUENCY_HZ);\r\n    this.waveform = configurations.WAVEFORM;\r\n\r\n    this.addInputPort('in');\r\n  }\r\n\r\n  onSimulationStart() {\r\n    this.audio = this.createAudio(this.frequencyHz, this.waveform);\r\n\r\n    if (this.getInput() === 1) this.audio.play();\r\n  }\r\n\r\n  onSimulationPause() {\r\n    this.audio.pause();\r\n  }\r\n\r\n  step(input) {\r\n    if (input.in) {\r\n      this.audio.play();\r\n    } else {\r\n      this.audio.pause();\r\n    }\r\n  }\r\n\r\n  getInput() {\r\n    const value = this.getPort('in').getValue();\r\n\r\n    if (!value) return 0;\r\n    return value[0];\r\n  }\r\n\r\n  isActive() {\r\n    return !!this.getInput();\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './BuzzerIcon';\r\nimport model from './BuzzerModel';\r\nimport widget from './BuzzerWidget';\r\n\r\nexport default new Component({\r\n  type: 'Buzzer',\r\n  name: 'Buzzer',\r\n  description: 'Outputs sound at a give frequency',\r\n  group: 'Input & output',\r\n  configurations: [\r\n    {\r\n      name: 'FREQUENCY_HZ',\r\n      type: 'number',\r\n      default: 300,\r\n      label: 'Sound frequency (in Hertz)',\r\n      min: 0,\r\n      max: 20000,\r\n      validate(value) {\r\n        if (value < this.min)\r\n          return `Minimum frequency is ${this.min} Hz`;\r\n        if (value > this.max)\r\n          return `Maximum frequency is ${this.max} Hz`;\r\n        return null;\r\n      },\r\n    },\r\n    {\r\n      name: 'WAVEFORM',\r\n      type: 'select',\r\n      default: 'SINE',\r\n      label: 'Waveform',\r\n      options: [\r\n        {\r\n          label: 'Sine',\r\n          value: 'SINE',\r\n        },\r\n        {\r\n          label: 'Square',\r\n          value: 'SQUARE',\r\n        },\r\n        {\r\n          label: 'Sawtooth',\r\n          value: 'SAWTOOTH',\r\n        },\r\n        {\r\n          label: 'Triangle',\r\n          value: 'TRIANGLE',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n  right: -7px;\r\n`;\r\n\r\nexport const Shape = styled.div`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 30px;\r\n  height: 30px;\r\n\r\n  background: ${props =>\r\n    props.selected\r\n      ? 'var(--body-selected)'\r\n      : 'var(--body-unselected)'};\r\n  border: 2px solid\r\n    ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n\r\n  transition: 100ms linear;\r\n`;\r\n\r\nexport const Decoration = ({\r\n  isActive,\r\n  color,\r\n  periodMs,\r\n  animateTransition,\r\n}) => (\r\n  <svg\r\n    width={30}\r\n    height={30}\r\n    viewBox=\"0 0 7.9374997 7.9375003\"\r\n    strokeWidth=\"1\"\r\n  >\r\n    <path\r\n      data-testid=\"decoration\"\r\n      stroke={color}\r\n      strokeWidth={0.75}\r\n      fill=\"none\"\r\n      style={{\r\n        transform: isActive ? 'scaleX(1)' : 'scaleX(-1)',\r\n        transformOrigin: 'center',\r\n        transition: animateTransition\r\n          ? `calc(${periodMs}ms / 2 * 0.4) ease-in-out`\r\n          : 'none',\r\n      }}\r\n      d=\"M 1.8683545,4.4337648 V 6.14192 H 4.0062447 V 1.79558 h 2.0629007 v 1.7578226\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst ClockWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n    periodMs,\r\n  } = model;\r\n\r\n  const out = model.getPort('out');\r\n\r\n  return (\r\n    <Shape selected={selected}>\r\n      <PositionedPort name=\"out\" />\r\n      <Decoration\r\n        isActive={model.isActive()}\r\n        color={out.getColor()}\r\n        periodMs={periodMs}\r\n        animateTransition={periodMs >= 500}\r\n      />\r\n    </Shape>\r\n  );\r\n};\r\n\r\nexport default ClockWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape, Decoration } from './ClockWidget';\r\n\r\nconst ClockIcon = () => (\r\n  <Shape>\r\n    <Decoration color=\"var(--port-unconnected)\" />\r\n  </Shape>\r\n);\r\n\r\nexport default ClockIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class ClockModel extends BaseModel {\r\n  initialize(configurations) {\r\n    this.addOutputPort('out');\r\n\r\n    this.configurations = configurations;\r\n\r\n    this.output = 0;\r\n    this.emitInterval = null;\r\n    this.periodMs = 1000 / this.configurations.FREQUENCY_HZ;\r\n    this.highCount = 0;\r\n    this.lowCount = 0;\r\n  }\r\n\r\n  onSimulationStart() {\r\n    this.emit({ out: this.output });\r\n\r\n    this.emitInterval = setInterval(() => {\r\n      const lastOutput = this.output;\r\n      this.output = this.getNextOutput();\r\n\r\n      if (lastOutput === this.output) return;\r\n\r\n      this.emit({ out: this.output });\r\n    }, this.periodMs / 2);\r\n  }\r\n\r\n  getNextOutput() {\r\n    const { HIGH_DURATION, LOW_DURATION } = this.configurations;\r\n\r\n    if (this.output === 1) {\r\n      this.highCount += 1;\r\n\r\n      if (this.highCount === HIGH_DURATION) {\r\n        this.highCount = 0;\r\n        return 0;\r\n      }\r\n\r\n      return 1;\r\n    }\r\n\r\n    this.lowCount += 1;\r\n\r\n    if (this.lowCount === LOW_DURATION) {\r\n      this.lowCount = 0;\r\n      return 1;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  onSimulationPause() {\r\n    clearInterval(this.emitInterval);\r\n  }\r\n\r\n  onSimulationStop() {\r\n    clearInterval(this.emitInterval);\r\n  }\r\n\r\n  getOutput() {\r\n    return this.getPort('out').getValue() || [0];\r\n  }\r\n\r\n  isActive() {\r\n    return this.getOutput()[0] === 1;\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './ClockIcon';\r\nimport model from './ClockModel';\r\nimport widget from './ClockWidget';\r\n\r\nexport default new Component({\r\n  type: 'Clock',\r\n  name: 'Clock',\r\n  description: 'Generates a clock signal',\r\n  group: 'Input & output',\r\n  configurations: [\r\n    {\r\n      name: 'FREQUENCY_HZ',\r\n      type: 'number',\r\n      default: 1,\r\n      label: 'Frequency (in Hz)',\r\n      step: 0.25,\r\n      min: 0.25,\r\n      max: 1000,\r\n      validate(value) {\r\n        if (value < this.min)\r\n          return `Frequency should be greater than ${this.min} Hz`;\r\n        if (value > this.max)\r\n          return `Frequency should be lesser than ${this.max} Hz`;\r\n        if (value % this.step !== 0)\r\n          return `Frequency should be divisible by ${this.step} Hz`;\r\n        return null;\r\n      },\r\n    },\r\n    {\r\n      name: 'HIGH_DURATION',\r\n      type: 'number',\r\n      default: 1,\r\n      label: 'High duration (in cycles)',\r\n      min: 1,\r\n      validate(value) {\r\n        if (value < this.min)\r\n          return `High duration should be greater than ${this.min}`;\r\n        return null;\r\n      },\r\n    },\r\n    {\r\n      name: 'LOW_DURATION',\r\n      type: 'number',\r\n      default: 1,\r\n      label: 'Low duration (in cycles)',\r\n      min: 1,\r\n      validate(value) {\r\n        if (value < this.min)\r\n          return `Low duration should be greater than ${this.min}`;\r\n        return null;\r\n      },\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 30px;\r\n  height: 30px;\r\n\r\n  transition: 100ms linear;\r\n  svg {\r\n    fill: ${props =>\r\n      props.selected\r\n        ? 'var(--body-selected)'\r\n        : 'var(--body-unselected)'};\r\n    stroke: ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n  }\r\n`;\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n  ${props => {\r\n    if (props.name === 'control') return 'bottom: -5px;';\r\n    if (props.name === 'in') return 'left: -5px;';\r\n    if (props.name === 'out') return 'right: -5px;';\r\n    return '';\r\n  }}\r\n`;\r\n\r\nexport const Shape = ({ size = 30 }) => (\r\n  <svg\r\n    height={size}\r\n    width={size}\r\n    viewBox=\"0 0 45.0 45.0\"\r\n    fill=\"var(--body-unselected)\"\r\n    stroke=\"var(--border-unselected)\"\r\n    strokeWidth=\"var(--border-width)\"\r\n  >\r\n    <g>\r\n      <path d=\"M 1.0207771,1.6492624 V 43.357967 L 42.724327,22.649262 Z\" />\r\n      <line x1=\"22.5\" y1=\"32.5\" x2=\"22.5\" y2=\"45\" />\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nconst ControlledBufferWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n  } = model;\r\n\r\n  return (\r\n    <Wrapper selected={selected}>\r\n      <PositionedPort name=\"control\" />\r\n      <PositionedPort name=\"in\" />\r\n      <PositionedPort name=\"out\" />\r\n      <Shape />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ControlledBufferWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape } from './ControlledBufferWidget';\r\n\r\nconst ControlledBufferIcon = () => <Shape size={30} />;\r\n\r\nexport default ControlledBufferIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class ControlledBufferModel extends BaseModel {\r\n  initialize(configurations) {\r\n    const DATA_BITS = Number(configurations.DATA_BITS);\r\n\r\n    this.addInputPort('control');\r\n    this.addInputPort('in', { bits: DATA_BITS });\r\n    this.addOutputPort('out', { bits: DATA_BITS });\r\n  }\r\n\r\n  step(input) {\r\n    if (input.control === 0) return { out: 'x' };\r\n    return { out: input.in };\r\n  }\r\n\r\n  stepFloating(input) {\r\n    if (input.control[0] === 'x') return { out: 'e' };\r\n    if (input.control[0] === 0) return { out: 'x' };\r\n    return { out: input.in };\r\n  }\r\n\r\n  stepError(input) {\r\n    return this.stepFloating(input);\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './ControlledBufferIcon';\r\nimport model from './ControlledBufferModel';\r\nimport widget from './ControlledBufferWidget';\r\n\r\nexport default new Component({\r\n  type: 'ControlledBuffer',\r\n  name: 'Controlled buffer',\r\n  description: 'Useful for I/O managing',\r\n  group: 'Logic gates',\r\n  configurations: [\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data bits',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 45px;\r\n  height: 30px;\r\n\r\n  transition: 100ms linear;\r\n  svg {\r\n    fill: ${props =>\r\n      props.selected\r\n        ? 'var(--body-selected)'\r\n        : 'var(--body-unselected)'};\r\n    stroke: ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n  }\r\n`;\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n  ${props => {\r\n    if (props.name === 'control') return 'bottom: -5px; left: 10px;';\r\n    if (props.name === 'in') return 'left: -5px;';\r\n    if (props.name === 'out') return 'right: -5px;';\r\n    return '';\r\n  }}\r\n`;\r\n\r\nexport const Shape = ({ size = 30 }) => (\r\n  <svg\r\n    height={size}\r\n    width={size + 15}\r\n    viewBox=\"11 0 45.0 45.0\"\r\n    fill=\"var(--body-unselected)\"\r\n    stroke=\"var(--border-unselected)\"\r\n    strokeWidth=\"var(--border-width)\"\r\n  >\r\n    <g>\r\n      <path d=\"M 1.0207771,1.6492624 V 43.357967 L 42.724327,22.649262 Z\" />\r\n      <circle r=\"8\" cy=\"22\" cx=\"51\" />\r\n      <line x1=\"22.5\" y1=\"32.5\" x2=\"22.5\" y2=\"45\" />\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nconst ControlledInverterWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n  } = model;\r\n\r\n  return (\r\n    <Wrapper selected={selected}>\r\n      <PositionedPort name=\"control\" />\r\n      <PositionedPort name=\"in\" />\r\n      <PositionedPort name=\"out\" />\r\n      <Shape />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ControlledInverterWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape } from './ControlledInverterWidget';\r\n\r\nconst ControlledInverterIcon = () => <Shape size={30} />;\r\n\r\nexport default ControlledInverterIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class ControlledInverterModel extends BaseModel {\r\n  initialize(configurations) {\r\n    const DATA_BITS = Number(configurations.DATA_BITS);\r\n\r\n    this.addInputPort('control');\r\n    this.addInputPort('in', { bits: DATA_BITS });\r\n    this.addOutputPort('out', { bits: DATA_BITS });\r\n  }\r\n\r\n  step(input) {\r\n    if (input.control === 0) return { out: 'x' };\r\n    return { out: ~input.in };\r\n  }\r\n\r\n  stepFloating(input) {\r\n    if (input.control[0] === 'x') return { out: 'e' };\r\n    if (input.control[0] === 0) return { out: 'x' };\r\n    return {\r\n      out: input.in.map(bit => {\r\n        if (bit === 0) return 1;\r\n        if (bit === 1) return 0;\r\n        if (bit === 'x') return 'e';\r\n        return bit;\r\n      }),\r\n    };\r\n  }\r\n\r\n  stepError(input) {\r\n    return this.stepFloating(input);\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './ControlledInverterIcon';\r\nimport model from './ControlledInverterModel';\r\nimport widget from './ControlledInverterWidget';\r\n\r\nexport default new Component({\r\n  type: 'ControlledInverter',\r\n  name: 'Controlled inverter',\r\n  description: 'Useful for I/O managing',\r\n  group: 'Logic gates',\r\n  configurations: [\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data bits',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 30px;\r\n  height: 30px;\r\n\r\n  font-size: 12px;\r\n\r\n  transition: 100ms linear;\r\n\r\n  background: ${props =>\r\n    props.selected\r\n      ? 'var(--body-selected)'\r\n      : 'var(--body-unselected)'};\r\n\r\n  border: 2px solid\r\n    ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n`;\r\n\r\nconst Chevron = ({ className, selected }) => (\r\n  <svg\r\n    className={className}\r\n    width={12}\r\n    height={20}\r\n    viewBox=\"0 0 12 20\"\r\n    stroke={`var(--border-${selected ? '' : 'un'}selected)`}\r\n    strokeWidth={2}\r\n    strokeLinecap=\"round\"\r\n  >\r\n    <line x1={0} y1={0} x2={6} y2={10} />\r\n    <line x1={6} y1={10} x2={0} y2={20} />\r\n  </svg>\r\n);\r\n\r\nconst PositionedChevron = styled(Chevron)`\r\n  position: absolute;\r\n  left: -1px;\r\n\r\n  transition: 100ms linear;\r\n`;\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n  ${props => {\r\n    if (props.name === 'in') return 'left: -7px;';\r\n    if (props.name === 'out') return 'right: -7px;';\r\n    return '';\r\n  }}\r\n`;\r\n\r\nconst CounterWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n  } = model;\r\n\r\n  return (\r\n    <Wrapper selected={selected}>\r\n      <PositionedChevron selected={selected} />\r\n      <PositionedPort name=\"in\" />\r\n      <PositionedPort name=\"out\" />\r\n      ++\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default CounterWidget;\r\n","import React from 'react';\r\n\r\nimport { Wrapper } from './CounterWidget';\r\n\r\nconst CounterIcon = () => <Wrapper>++</Wrapper>;\r\n\r\nexport default CounterIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class CounterModel extends BaseModel {\r\n  initialize(configurations) {\r\n    this.dataBits = Number(configurations.DATA_BITS);\r\n    this.countOnRising = configurations.COUNT_ON === 'rising';\r\n    this.startAt = configurations.START_AT;\r\n    this.wrapAt = configurations.WRAP_AT || 2 ** this.dataBits;\r\n    this.stepValue = configurations.STEP_VALUE;\r\n\r\n    this.addInputPort('in');\r\n    this.addOutputPort('out', { bits: this.dataBits });\r\n\r\n    this.current = this.startAt;\r\n  }\r\n\r\n  isRisingEdge(meta) {\r\n    if (this.countOnRising) return meta.in.risingEdge;\r\n    return meta.in.fallingEdge;\r\n  }\r\n\r\n  step(input, meta) {\r\n    if (!this.isRisingEdge(meta)) return { out: this.current };\r\n\r\n    this.current += this.stepValue;\r\n\r\n    if (this.current >= this.wrapAt) this.current = this.startAt;\r\n\r\n    return {\r\n      out: this.current,\r\n    };\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\nimport { MAX_VALUE } from '@logossim/core/Simulation/utils';\r\n\r\nimport icon from './CounterIcon';\r\nimport model from './CounterModel';\r\nimport widget from './CounterWidget';\r\n\r\nexport default new Component({\r\n  type: 'Counter',\r\n  name: 'Counter',\r\n  description: 'Counts every input rising or falling edge',\r\n  group: 'Miscellaneous',\r\n  configurations: [\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data bits',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'COUNT_ON',\r\n      type: 'select',\r\n      default: 'rising',\r\n      label: 'Count on',\r\n      options: [\r\n        {\r\n          label: 'Rising edge',\r\n          value: 'rising',\r\n        },\r\n        {\r\n          label: 'Falling edge',\r\n          value: 'falling',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'START_AT',\r\n      type: 'number',\r\n      default: 0,\r\n      label: 'Start value at',\r\n      min: 0,\r\n      max: MAX_VALUE[16],\r\n      validate(value, configurations) {\r\n        const DATA_BITS = Number(configurations.DATA_BITS);\r\n\r\n        if (value > MAX_VALUE[DATA_BITS])\r\n          return `Maximum value for ${DATA_BITS}-bit is ${MAX_VALUE[DATA_BITS]}`;\r\n\r\n        return null;\r\n      },\r\n    },\r\n    {\r\n      name: 'WRAP_AT',\r\n      type: 'number',\r\n      default: 0,\r\n      label: 'Wrap value at (0 means no wrap)',\r\n      min: 0,\r\n      max: MAX_VALUE[16],\r\n      validate(value, configurations) {\r\n        const DATA_BITS = Number(configurations.DATA_BITS);\r\n        const START_AT = Number(configurations.START_AT);\r\n\r\n        if (value > MAX_VALUE[DATA_BITS])\r\n          return `Maximum value for ${DATA_BITS}-bit is ${MAX_VALUE[DATA_BITS]}`;\r\n\r\n        if (value !== 0 && value <= START_AT)\r\n          return `Value must be greater than ${START_AT} (start value)`;\r\n\r\n        return null;\r\n      },\r\n    },\r\n    {\r\n      name: 'STEP_VALUE',\r\n      type: 'number',\r\n      default: 1,\r\n      label: 'Step value',\r\n      min: 1,\r\n      max: MAX_VALUE[16],\r\n      validate(value, configurations) {\r\n        const DATA_BITS = Number(configurations.DATA_BITS);\r\n\r\n        if (value > MAX_VALUE[DATA_BITS])\r\n          return `Maximum value for ${DATA_BITS}-bit is ${MAX_VALUE[DATA_BITS]}`;\r\n\r\n        return null;\r\n      },\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n  ${props => {\r\n    if (props.name === 'in') return 'left: -5px;';\r\n    if (props.name === 'selection') return 'left: 10px;';\r\n    return 'right: -5px;';\r\n  }};\r\n  ${props => {\r\n    if (props.name === 'selection') return 'bottom: -5px;';\r\n    return `top: ${(props.position || 0) - 5}px;`;\r\n  }};\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n\r\n  width: 30px;\r\n  height: ${props => (props.outputNumber + 2) * 15}px;\r\n`;\r\n\r\nexport const Shape = ({ selected, outputNumber, icon }) => {\r\n  const height = (outputNumber + 2) * 15;\r\n\r\n  return (\r\n    <svg\r\n      viewBox={`0 0 30 ${height}`}\r\n      height={icon ? 30 : height}\r\n      width={icon ? 15 : 30}\r\n      fill={\r\n        selected ? 'var(--body-selected)' : 'var(--body-unselected)'\r\n      }\r\n      stroke={\r\n        selected ? 'var(--link-selected)' : 'var(--link-16-bit-color)'\r\n      }\r\n      strokeLinecap=\"round\"\r\n      strokeWidth=\"2\"\r\n    >\r\n      <path d={`M0,15 L0,${height - 15} L30,${height} L30,0 Z`} />\r\n      <path d={`M15,${height - 7.5} L15,${height}`} />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst DemuxWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n  } = model;\r\n\r\n  const outputPorts = Object.values(model.getOutputPorts());\r\n  const { outputNumber } = model;\r\n\r\n  return (\r\n    <Wrapper outputNumber={outputNumber}>\r\n      <PositionedPort\r\n        name=\"in\"\r\n        position={((outputNumber + 2) * 15) / 2}\r\n      />\r\n      <PositionedPort name=\"selection\" />\r\n      {outputPorts.map((port, i) => (\r\n        <PositionedPort\r\n          key={port.getName()}\r\n          name={port.getName()}\r\n          position={(i + 1) * 15}\r\n        />\r\n      ))}\r\n      <Shape selected={selected} outputNumber={outputNumber} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DemuxWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape } from './DemuxWidget';\r\n\r\nconst DemuxIcon = () => <Shape dataBits={1} outputNumber={2} icon />;\r\n\r\nexport default DemuxIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class DemuxModel extends BaseModel {\r\n  initialize(configurations) {\r\n    const DATA_BITS = Number(configurations.DATA_BITS);\r\n    this.outputNumber = Number(configurations.OUTPUT_NUMBER);\r\n\r\n    this.addInputPort('in', { bits: DATA_BITS });\r\n    this.addInputPort('selection', {\r\n      bits: Math.log2(this.outputNumber),\r\n    });\r\n\r\n    for (let i = 0; i < this.outputNumber; i += 1) {\r\n      this.addOutputPort(`out${i}`, { bits: DATA_BITS });\r\n    }\r\n  }\r\n\r\n  step(input) {\r\n    return {\r\n      ...Object.fromEntries(\r\n        [...new Array(this.outputNumber)].map((_, i) => [\r\n          `out${i}`,\r\n          0,\r\n        ]),\r\n      ),\r\n      [`out${input.selection}`]: input.in,\r\n    };\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './DemuxIcon';\r\nimport model from './DemuxModel';\r\nimport widget from './DemuxWidget';\r\n\r\nexport default new Component({\r\n  type: 'Demux',\r\n  name: 'Demux',\r\n  description: 'Demultiplexer',\r\n  group: 'Plexers',\r\n  configurations: [\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data bits',\r\n      options: [\r\n        {\r\n          label: '1 bits',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'OUTPUT_NUMBER',\r\n      type: 'select',\r\n      default: '2',\r\n      label: 'Number of outputs',\r\n      options: [\r\n        {\r\n          label: '2',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '16',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: -5px;\r\n  transform: translateX(-50%);\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\n\r\nexport const Shape = ({ selected, dataBits = 1 }) => {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 30 30\"\r\n      width=\"30\"\r\n      height=\"30\"\r\n      fill=\"none\"\r\n      stroke={selected ? 'var(--value-5)' : 'var(--value-0)'}\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    >\r\n      <polyline\r\n        points=\"15 0 15 15\"\r\n        strokeWidth={`var(--link-${dataBits}-bit-width)`}\r\n        strokeLinecap=\"butt\"\r\n      />\r\n      <polyline points=\"7 15 23 15\" />\r\n      <polyline points=\"7 15 2 25\" />\r\n      <polyline points=\"15 15 9 25\" />\r\n      <polyline points=\"23 15 17 25\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst GroundWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n  } = model;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Shape selected={selected} dataBits={model.dataBits} />\r\n      <PositionedPort name=\"out\" />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default GroundWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape } from './GroundWidget';\r\n\r\nconst GroundIcon = () => <Shape />;\r\n\r\nexport default GroundIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class GroundModel extends BaseModel {\r\n  initialize(configurations) {\r\n    this.dataBits = Number(configurations.DATA_BITS);\r\n\r\n    this.addOutputPort('out', { bits: this.dataBits });\r\n  }\r\n\r\n  onSimulationStart() {\r\n    this.emit({ out: 0 });\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './GroundIcon';\r\nimport model from './GroundModel';\r\nimport widget from './GroundWidget';\r\n\r\nexport default new Component({\r\n  type: 'Ground',\r\n  name: 'Ground',\r\n  description: 'Ground (GND) component',\r\n  group: 'Wiring',\r\n  configurations: [\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data bits',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst SHAPE_SIZES = {\r\n  1: { width: 30, height: 30 },\r\n  2: { width: 60, height: 30 },\r\n  4: { width: 120, height: 30 },\r\n  8: { width: 120, height: 60 },\r\n  16: { width: 240, height: 60 },\r\n};\r\n\r\nconst PIN_BACKGROUND = {\r\n  0: 'var(--value-off)',\r\n  1: 'var(--value-on)',\r\n  x: 'var(--value-floating)',\r\n};\r\n\r\nconst PIN_BORDER = {\r\n  0: 'var(--value-on)',\r\n  1: 'var(--value-off)',\r\n  x: 'black',\r\n};\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n  right: -7px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nexport const Shape = styled.div`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: ${props => SHAPE_SIZES[props.dataBits].width}px;\r\n  height: ${props => SHAPE_SIZES[props.dataBits].height}px;\r\n\r\n  background: ${props =>\r\n    props.selected\r\n      ? 'var(--body-selected)'\r\n      : 'var(--body-unselected)'};\r\n  border: 2px solid\r\n    ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const PinContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n\r\n  max-width: 215px;\r\n`;\r\n\r\nexport const Pin = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 20px;\r\n  height: 20px;\r\n  margin: 2px;\r\n\r\n  background: ${props => PIN_BACKGROUND[props.value]};\r\n  border: 2px solid ${props => PIN_BORDER[props.value]};\r\n  border-radius: 100%;\r\n\r\n  color: ${props => (props.value === 1 ? 'black' : 'white')};\r\n  font-family: monospace;\r\n\r\n  transition: 100ms linear;\r\n`;\r\n\r\nconst InputWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n    configurations: { DATA_BITS },\r\n  } = model;\r\n\r\n  const dataBits = Number(DATA_BITS);\r\n\r\n  return (\r\n    <Shape selected={selected} dataBits={dataBits}>\r\n      <PinContainer>\r\n        {[...new Array(dataBits)].map((_, index) => {\r\n          const value = model.getBitAt(index);\r\n\r\n          return (\r\n            <Pin\r\n              // eslint-disable-next-line react/no-array-index-key\r\n              key={index}\r\n              onClick={() => model.onClick(index)}\r\n              value={value}\r\n            >\r\n              {value}\r\n            </Pin>\r\n          );\r\n        })}\r\n      </PinContainer>\r\n      <PositionedPort name=\"out\" />\r\n    </Shape>\r\n  );\r\n};\r\n\r\nexport default InputWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape, Pin } from './InputWidget';\r\n\r\nconst InputIcon = () => (\r\n  <Shape dataBits={1}>\r\n    <Pin as=\"div\" value={0} />\r\n  </Shape>\r\n);\r\n\r\nexport default InputIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class InputModel extends BaseModel {\r\n  initialize(configurations) {\r\n    this.dataBits = Number(configurations.DATA_BITS);\r\n    this.threeState = configurations.THREE_STATE === 'true';\r\n\r\n    this.addOutputPort('out', { bits: this.dataBits });\r\n  }\r\n\r\n  onSimulationStart() {\r\n    this.emit({ out: 0 });\r\n  }\r\n\r\n  nextValue(value) {\r\n    if (value === 'x') return 0;\r\n    if (value === 0) return 1;\r\n    return this.threeState ? 'x' : 0;\r\n  }\r\n\r\n  onClick(index) {\r\n    this.emit({\r\n      out: this.getOutput().map((v, i) => {\r\n        if (i === index) return this.nextValue(v);\r\n        return v;\r\n      }),\r\n    });\r\n  }\r\n\r\n  getOutput() {\r\n    return (\r\n      this.getPort('out').getValue() || Array(this.dataBits).fill(0)\r\n    );\r\n  }\r\n\r\n  getBitAt(index) {\r\n    return this.getOutput()[index];\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './InputIcon';\r\nimport model from './InputModel';\r\nimport widget from './InputWidget';\r\n\r\nexport default new Component({\r\n  type: 'Input',\r\n  name: 'Input pin',\r\n  description: 'Simple input pin',\r\n  group: 'Input & output',\r\n  configurations: [\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data bits',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'THREE_STATE',\r\n      type: 'select',\r\n      default: 'false',\r\n      label: 'Three state',\r\n      options: [\r\n        {\r\n          label: 'Yes',\r\n          value: 'true',\r\n        },\r\n        {\r\n          label: 'No',\r\n          value: 'false',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n\r\n  ${props => {\r\n    if (props.name === 'out') return `right: -5px; top: -5px`;\r\n    return `left: -5px; bottom: ${props.position - 5}px;`;\r\n  }}\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n\r\n  width: 30px;\r\n  height: ${props => 15 * props.dataBits}px;\r\n`;\r\n\r\nexport const Shape = ({ selected, dataBits }) => {\r\n  const height = dataBits * 15;\r\n\r\n  return (\r\n    <svg\r\n      viewBox={`0 0 30 ${height}`}\r\n      height={height}\r\n      width=\"30\"\r\n      fill=\"none\"\r\n      stroke={\r\n        selected ? 'var(--link-selected)' : 'var(--link-16-bit-color)'\r\n      }\r\n      strokeLinecap=\"butt\"\r\n      strokeWidth=\"2\"\r\n    >\r\n      <path strokeWidth=\"4\" d={`M30,0 L15,15 L15,${height}`} />\r\n      {[...new Array(dataBits)]\r\n        .map((_, index) => index)\r\n        .map(index => {\r\n          const bitHeight = height - index * 15;\r\n\r\n          return (\r\n            <path\r\n              key={index}\r\n              d={`M15,${bitHeight} L0,${bitHeight}`}\r\n            />\r\n          );\r\n        })}\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst JoinerWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n    configurations: { DATA_BITS },\r\n  } = model;\r\n\r\n  const dataBits = Number(DATA_BITS);\r\n  const inputPorts = Object.values(model.getInputPorts());\r\n\r\n  return (\r\n    <Wrapper dataBits={dataBits}>\r\n      {inputPorts.map((port, i) => (\r\n        <PositionedPort\r\n          key={port.getName()}\r\n          name={port.getName()}\r\n          position={i * 15}\r\n        />\r\n      ))}\r\n      <PositionedPort name=\"out\" />\r\n      <Shape selected={selected} dataBits={dataBits} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default JoinerWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape } from './JoinerWidget';\r\n\r\nconst JoinerIcon = () => <Shape dataBits={2} />;\r\n\r\nexport default JoinerIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class JoinerModel extends BaseModel {\r\n  initialize(configurations) {\r\n    this.bits = Number(configurations.DATA_BITS);\r\n\r\n    for (let i = 0; i < this.bits; i += 1) {\r\n      this.addInputPort(`in${i}`);\r\n    }\r\n    this.addOutputPort('out', { bits: this.bits });\r\n  }\r\n\r\n  step(input) {\r\n    return {\r\n      out: Object.values(input)\r\n        .map(value => value.asArray(1)[0])\r\n        .map((_, index, arr) => arr[arr.length - index - 1]),\r\n    };\r\n  }\r\n\r\n  stepFloating(input) {\r\n    return this.step(input);\r\n  }\r\n\r\n  stepError(input) {\r\n    return this.step(input);\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './JoinerIcon';\r\nimport model from './JoinerModel';\r\nimport widget from './JoinerWidget';\r\n\r\nexport default new Component({\r\n  type: 'Joiner',\r\n  name: 'Joiner',\r\n  description: 'Joins N 1 bit wires into one N bit wire',\r\n  group: 'Wiring',\r\n  configurations: [\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '2',\r\n      label: 'Output data bits',\r\n      options: [\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n  left: -7px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nexport const Shape = styled.div`\r\n  position: relative;\r\n\r\n  width: 30px;\r\n  height: 30px;\r\n\r\n  background: ${props =>\r\n    `${props.color}${props.selected ? '80' : 'ff'}`};\r\n  box-shadow: 0 0 ${props => (props.isActive ? 15 : 0)}px\r\n    ${props => props.color};\r\n  border: 2px solid\r\n    ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n  border-radius: 15px;\r\n`;\r\n\r\nconst LedWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n  } = model;\r\n\r\n  return (\r\n    <Shape\r\n      selected={selected}\r\n      color={model.getColor()}\r\n      isActive={model.isActive()}\r\n      data-testid=\"shape\"\r\n    >\r\n      <PositionedPort name=\"in\" />\r\n    </Shape>\r\n  );\r\n};\r\n\r\nexport default LedWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape } from './LedWidget';\r\n\r\nconst LedIcon = () => <Shape color=\"#00ff00\" />;\r\n\r\nexport default LedIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class LedModel extends BaseModel {\r\n  initialize(configurations) {\r\n    this.activeWhen = configurations.ACTIVE_WHEN;\r\n    this.colors = {\r\n      on: configurations.ON_COLOR,\r\n      off: configurations.OFF_COLOR,\r\n    };\r\n\r\n    this.addInputPort('in');\r\n  }\r\n\r\n  getInput() {\r\n    const value = this.getPort('in').getValue();\r\n\r\n    if (!value) return 0;\r\n    return value[0];\r\n  }\r\n\r\n  isActive() {\r\n    const input = this.getInput();\r\n\r\n    if (this.activeWhen === 'HIGH') {\r\n      if (input === 0) return false;\r\n      return true;\r\n    }\r\n\r\n    if (input === 0) return true;\r\n    return false;\r\n  }\r\n\r\n  getColor() {\r\n    if (this.isActive()) return this.colors.on;\r\n    return this.colors.off;\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './LedIcon';\r\nimport model from './LedModel';\r\nimport widget from './LedWidget';\r\n\r\nexport default new Component({\r\n  type: 'Led',\r\n  name: 'LED',\r\n  description: 'Simple LED component',\r\n  group: 'Input & output',\r\n  configurations: [\r\n    {\r\n      name: 'ACTIVE_WHEN',\r\n      type: 'select',\r\n      default: 'HIGH',\r\n      label: 'Active when',\r\n      options: [\r\n        {\r\n          label: 'High',\r\n          value: 'HIGH',\r\n        },\r\n        {\r\n          label: 'Low',\r\n          value: 'LOW',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'ON_COLOR',\r\n      type: 'select',\r\n      default: '#00ff00',\r\n      label: 'On color',\r\n      options: [\r\n        {\r\n          label: 'Red',\r\n          value: '#ff0000',\r\n        },\r\n        {\r\n          label: 'Green',\r\n          value: '#00ff00',\r\n        },\r\n        {\r\n          label: 'Blue',\r\n          value: '#0000ff',\r\n        },\r\n        {\r\n          label: 'White',\r\n          value: '#ffffff',\r\n        },\r\n        {\r\n          label: 'Black',\r\n          value: '#000000',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'OFF_COLOR',\r\n      type: 'select',\r\n      default: '#000000',\r\n      label: 'Off color',\r\n      options: [\r\n        {\r\n          label: 'Red',\r\n          value: '#ff0000',\r\n        },\r\n        {\r\n          label: 'Green',\r\n          value: '#00ff00',\r\n        },\r\n        {\r\n          label: 'Blue',\r\n          value: '#0000ff',\r\n        },\r\n        {\r\n          label: 'White',\r\n          value: '#ffffff',\r\n        },\r\n        {\r\n          label: 'Black',\r\n          value: '#000000',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n  ${props => {\r\n    if (props.name === 'out') return 'right: -5px;';\r\n    if (props.name === 'selection') return 'left: 10px;';\r\n    return 'left: -5px;';\r\n  }};\r\n  ${props => {\r\n    if (props.name === 'selection') return 'bottom: -5px;';\r\n    return `top: ${(props.position || 0) - 5}px;`;\r\n  }};\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n\r\n  width: 30px;\r\n  height: ${props => (props.inputNumber + 2) * 15}px;\r\n`;\r\n\r\nexport const Shape = ({ selected, inputNumber, icon }) => {\r\n  const height = (inputNumber + 2) * 15;\r\n\r\n  return (\r\n    <svg\r\n      viewBox={`0 0 30 ${height}`}\r\n      height={icon ? 30 : height}\r\n      width={icon ? 15 : 30}\r\n      fill={\r\n        selected ? 'var(--body-selected)' : 'var(--body-unselected)'\r\n      }\r\n      stroke={\r\n        selected ? 'var(--link-selected)' : 'var(--link-16-bit-color)'\r\n      }\r\n      strokeLinecap=\"round\"\r\n      strokeWidth=\"2\"\r\n    >\r\n      <path d={`M0,0 L0,${height} L30,${height - 15} L30,15 Z`} />\r\n      <path d={`M15,${height - 7.5} L15,${height}`} />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst MuxWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n  } = model;\r\n\r\n  const inputPorts = Object.values(model.getInputPorts());\r\n  const inputNumber = inputPorts.length;\r\n\r\n  return (\r\n    <Wrapper inputNumber={inputNumber}>\r\n      {inputPorts.map((port, i) => (\r\n        <PositionedPort\r\n          key={port.getName()}\r\n          name={port.getName()}\r\n          position={(i + 1) * 15}\r\n        />\r\n      ))}\r\n      <PositionedPort\r\n        name=\"out\"\r\n        position={((inputNumber + 1) * 15) / 2}\r\n      />\r\n      <Shape selected={selected} inputNumber={inputNumber} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MuxWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape } from './MuxWidget';\r\n\r\nconst MuxIcon = () => <Shape dataBits={1} inputNumber={2} icon />;\r\n\r\nexport default MuxIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class MuxModel extends BaseModel {\r\n  initialize(configurations) {\r\n    const DATA_BITS = Number(configurations.DATA_BITS);\r\n    const INPUT_NUMBER = Number(configurations.INPUT_NUMBER);\r\n\r\n    for (let i = 0; i < INPUT_NUMBER; i += 1) {\r\n      this.addInputPort(`in${i}`, { bits: DATA_BITS });\r\n    }\r\n\r\n    this.addInputPort('selection', { bits: Math.log2(INPUT_NUMBER) });\r\n    this.addOutputPort('out', { bits: DATA_BITS });\r\n  }\r\n\r\n  step(input) {\r\n    return { out: input[`in${input.selection}`] };\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './MuxIcon';\r\nimport model from './MuxModel';\r\nimport widget from './MuxWidget';\r\n\r\nexport default new Component({\r\n  type: 'Mux',\r\n  name: 'Mux',\r\n  description: 'Multiplexer',\r\n  group: 'Plexers',\r\n  configurations: [\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data bits',\r\n      options: [\r\n        {\r\n          label: '1 bits',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'INPUT_NUMBER',\r\n      type: 'select',\r\n      default: '2',\r\n      label: 'Number of inputs',\r\n      options: [\r\n        {\r\n          label: '2',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '16',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { PortExtension, distributePorts } from '../portExtendUtils';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 105px;\r\n  height: 90px;\r\n\r\n  transition: 100ms linear;\r\n  svg {\r\n    fill: ${props =>\r\n      props.selected\r\n        ? 'var(--body-selected)'\r\n        : 'var(--body-unselected)'};\r\n    stroke: ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n  }\r\n`;\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n\r\n  ${props => {\r\n    if (props.name === 'out') return '';\r\n    return `top: ${props.position * 15 - 5}px;`;\r\n  }}\r\n\r\n  ${props => {\r\n    if (props.name === 'out') return 'right: -5px';\r\n    return 'left: -5px';\r\n  }};\r\n`;\r\n\r\nexport const Shape = ({ size = 90 }) => (\r\n  <svg\r\n    height={size}\r\n    width={size + 15}\r\n    viewBox=\"0 0 27.781249 23.812501\"\r\n    fill=\"var(--body-unselected)\"\r\n    stroke=\"var(--border-unselected)\"\r\n    strokeWidth=\"var(--border-width)\"\r\n  >\r\n    <g transform=\"scale(0.26458333)\">\r\n      <path d=\"m 2,2 v 43 a 42.999999,42.999999 0 0 0 0,0.271484 V 88 H 45 A 42.999999,42.999999 0 0 0 88,45 42.999999,42.999999 0 0 0 45,2 h -0.271484 z\" />\r\n      <circle r=\"5.72056\" cy=\"45\" cx=\"94.27944\" />\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nconst NandWidget = props => {\r\n  const { model } = props;\r\n\r\n  const inputPorts = Object.values(model.getInputPorts());\r\n  const portPositions = distributePorts(inputPorts.length);\r\n\r\n  return (\r\n    <Wrapper selected={model.isSelected()}>\r\n      <PortExtension\r\n        selected={model.isSelected()}\r\n        portPositions={portPositions}\r\n      />\r\n      {inputPorts.map((port, i) => (\r\n        <PositionedPort\r\n          key={port.getName()}\r\n          name={port.getName()}\r\n          position={portPositions[i]}\r\n        />\r\n      ))}\r\n      <PositionedPort name=\"out\" />\r\n      <Shape />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default NandWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape } from './NandWidget';\r\n\r\nconst NandIcon = () => <Shape size={30} />;\r\n\r\nexport default NandIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class NandModel extends BaseModel {\r\n  initialize(configurations) {\r\n    const INPUT_PORTS_NUMBER = Number(\r\n      configurations.INPUT_PORTS_NUMBER,\r\n    );\r\n    this.dataBits = Number(configurations.DATA_BITS);\r\n\r\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\r\n      this.addInputPort(`in${i}`, { bits: this.dataBits });\r\n    }\r\n    this.addOutputPort('out', { bits: this.dataBits });\r\n  }\r\n\r\n  executeBit(bits) {\r\n    if (bits.some(bit => bit === 0)) return 1;\r\n    if (bits.every(bit => bit === 1)) return 0;\r\n    return 'e';\r\n  }\r\n\r\n  step(input) {\r\n    return {\r\n      out: Object.values(input)\r\n        .map(value => value.asArray(this.dataBits))\r\n        .transpose()\r\n        .map(this.executeBit),\r\n    };\r\n  }\r\n\r\n  stepFloating(input) {\r\n    return this.step(input);\r\n  }\r\n\r\n  stepError(input) {\r\n    return this.step(input);\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './NandIcon';\r\nimport model from './NandModel';\r\nimport widget from './NandWidget';\r\n\r\nexport default new Component({\r\n  type: 'Nand',\r\n  name: 'Nand',\r\n  description: 'Logic \"not and\" gate',\r\n  group: 'Logic gates',\r\n  configurations: [\r\n    {\r\n      name: 'INPUT_PORTS_NUMBER',\r\n      type: 'number',\r\n      default: 2,\r\n      label: 'Number of input ports',\r\n      min: 2,\r\n      max: 16,\r\n      validate(value) {\r\n        if (value < this.min)\r\n          return `Minimum input ports is ${this.min}`;\r\n        if (value > this.max)\r\n          return `Maximum input ports is ${this.max}`;\r\n        return null;\r\n      },\r\n    },\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data bits',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React, { Fragment } from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { PortExtension, distributePorts } from '../portExtendUtils';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 105px;\r\n  height: 90px;\r\n\r\n  transition: 100ms linear;\r\n  svg {\r\n    fill: ${props =>\r\n      props.selected\r\n        ? 'var(--body-selected)'\r\n        : 'var(--body-unselected)'};\r\n    stroke: ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n  }\r\n`;\r\n\r\nconst PortExtensionConnector = styled.div`\r\n  position: absolute;\r\n  z-index: -1;\r\n\r\n  background: ${props =>\r\n    props.selected\r\n      ? 'var(--border-selected)'\r\n      : 'var(--border-unselected)'};\r\n\r\n  height: 2px;\r\n  width: 15px;\r\n\r\n  top: ${props => props.position * 15 - 1}px;\r\n  left: -2px;\r\n`;\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n\r\n  ${props => {\r\n    if (props.name === 'out') return '';\r\n    return `top: ${props.position * 15 - 5}px;`;\r\n  }}\r\n\r\n  ${props => {\r\n    if (props.name === 'out') return 'right: -5px';\r\n    return 'left: -5px';\r\n  }};\r\n`;\r\n\r\nexport const Shape = ({ size = 90, portPositions = [] }) => (\r\n  <svg\r\n    height={size}\r\n    width={size + 15}\r\n    viewBox=\"0 0 27.781249 23.812501\"\r\n    fill=\"var(--body-unselected)\"\r\n    stroke=\"var(--border-unselected)\"\r\n    strokeWidth=\"var(--border-width)\"\r\n  >\r\n    <g transform=\"scale(0.26458333)\">\r\n      <path d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 45 C 68.748245,88.000001 88.005576,45.650843 88,45 87.994195,44.322314 68.748245,1.9999989 45,2 h -0.271484 z\" />\r\n      <circle r=\"5.72056\" cy=\"45\" cx=\"94.27944\" />\r\n    </g>\r\n    <g strokeWidth={0.5}>\r\n      {portPositions.includes(1) && (\r\n        <path d=\"M 4.8860442,4.1010415 H 0.38245295\" />\r\n      )}\r\n      {portPositions.includes(2) && (\r\n        <path d=\"M 5.3419835,8.0697915 H 0.38232292\" />\r\n      )}\r\n      {portPositions.includes(3) && (\r\n        <path d=\"M 5.5975927,12.038541 H 0.38232292\" />\r\n      )}\r\n      {portPositions.includes(4) && (\r\n        <path d=\"M 5.2516863,16.007291 H 0.38232292\" />\r\n      )}\r\n      {portPositions.includes(5) && (\r\n        <path d=\"M 4.3916654,19.976041 H 0.38232292\" />\r\n      )}\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nconst NorWidget = props => {\r\n  const { model } = props;\r\n\r\n  const inputPorts = Object.values(model.getInputPorts());\r\n  const portPositions = distributePorts(inputPorts.length);\r\n\r\n  return (\r\n    <Wrapper selected={model.options.selected}>\r\n      <PortExtension\r\n        selected={model.isSelected()}\r\n        portPositions={portPositions}\r\n        offsetX={12}\r\n      />\r\n      {inputPorts.map((port, i) => (\r\n        <Fragment key={port.getName()}>\r\n          <PositionedPort\r\n            name={port.getName()}\r\n            position={portPositions[i]}\r\n          />\r\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\r\n            <PortExtensionConnector\r\n              selected={model.isSelected()}\r\n              position={portPositions[i]}\r\n            />\r\n          )}\r\n        </Fragment>\r\n      ))}\r\n      <PositionedPort name=\"out\" />\r\n      <Shape portPositions={portPositions} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default NorWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape } from './NorWidget';\r\n\r\nconst NorIcon = () => <Shape size={30} />;\r\n\r\nexport default NorIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class NorModel extends BaseModel {\r\n  initialize(configurations) {\r\n    const INPUT_PORTS_NUMBER = Number(\r\n      configurations.INPUT_PORTS_NUMBER,\r\n    );\r\n    this.dataBits = Number(configurations.DATA_BITS);\r\n\r\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\r\n      this.addInputPort(`in${i}`, { bits: this.dataBits });\r\n    }\r\n    this.addOutputPort('out', { bits: this.dataBits });\r\n  }\r\n\r\n  executeBit(bits) {\r\n    if (bits.every(bit => bit === 0)) return 1;\r\n    if (bits.some(bit => bit === 1)) return 0;\r\n    return 'e';\r\n  }\r\n\r\n  step(input) {\r\n    return {\r\n      out: Object.values(input)\r\n        .map(value => value.asArray(this.dataBits))\r\n        .transpose()\r\n        .map(this.executeBit),\r\n    };\r\n  }\r\n\r\n  stepFloating(input) {\r\n    return this.step(input);\r\n  }\r\n\r\n  stepError(input) {\r\n    return this.step(input);\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './NorIcon';\r\nimport model from './NorModel';\r\nimport widget from './NorWidget';\r\n\r\nexport default new Component({\r\n  type: 'Nor',\r\n  name: 'Nor',\r\n  description: 'Logic \"not or\" gate',\r\n  group: 'Logic gates',\r\n  configurations: [\r\n    {\r\n      name: 'INPUT_PORTS_NUMBER',\r\n      type: 'number',\r\n      default: 2,\r\n      label: 'Number of input ports',\r\n      min: 2,\r\n      max: 16,\r\n      validate(value) {\r\n        if (value < this.min)\r\n          return `Minimum input ports is ${this.min}`;\r\n        if (value > this.max)\r\n          return `Maximum input ports is ${this.max}`;\r\n        return null;\r\n      },\r\n    },\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data bits',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 45px;\r\n  height: 30px;\r\n\r\n  transition: 100ms linear;\r\n  svg {\r\n    fill: ${props =>\r\n      props.selected\r\n        ? 'var(--body-selected)'\r\n        : 'var(--body-unselected)'};\r\n    stroke: ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n  }\r\n`;\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n  ${props => {\r\n    if (props.name === 'in') return 'left: -5px;';\r\n    if (props.name === 'out') return 'right: -5px;';\r\n    return '';\r\n  }}\r\n`;\r\n\r\nexport const Shape = ({ size = 30 }) => (\r\n  <svg\r\n    height={size}\r\n    width={size + 15}\r\n    viewBox=\"11 0 45.0 45.0\"\r\n    fill=\"var(--body-unselected)\"\r\n    stroke=\"var(--border-unselected)\"\r\n    strokeWidth=\"var(--border-width)\"\r\n  >\r\n    <g>\r\n      <path d=\"M 1.0207771,1.6492624 V 43.357967 L 42.724327,22.649262 Z\" />\r\n      <circle r=\"8\" cy=\"22\" cx=\"51\" />\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nconst NotWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n  } = model;\r\n\r\n  return (\r\n    <Wrapper selected={selected}>\r\n      <PositionedPort name=\"in\" />\r\n      <PositionedPort name=\"out\" />\r\n      <Shape />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default NotWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape } from './NotWidget';\r\n\r\nconst NotIcon = () => <Shape size={30} />;\r\n\r\nexport default NotIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class NotModel extends BaseModel {\r\n  initialize(configurations) {\r\n    this.dataBits = Number(configurations.DATA_BITS);\r\n\r\n    this.addInputPort('in', { bits: this.dataBits });\r\n    this.addOutputPort('out', { bits: this.dataBits });\r\n  }\r\n\r\n  step(input) {\r\n    return {\r\n      out: input.in.asArray(this.dataBits).map(bit => {\r\n        if (bit === 1) return 0;\r\n        return 1;\r\n      }),\r\n    };\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './NotIcon';\r\nimport model from './NotModel';\r\nimport widget from './NotWidget';\r\n\r\nexport default new Component({\r\n  type: 'Not',\r\n  name: 'Not',\r\n  description: 'Negation component',\r\n  group: 'Logic gates',\r\n  configurations: [\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data bits',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React, { Fragment } from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { PortExtension, distributePorts } from '../portExtendUtils';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 90px;\r\n  height: 90px;\r\n\r\n  transition: 100ms linear;\r\n  svg {\r\n    fill: ${props =>\r\n      props.selected\r\n        ? 'var(--body-selected)'\r\n        : 'var(--body-unselected)'};\r\n    stroke: ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n  }\r\n`;\r\n\r\nconst PortExtensionConnector = styled.div`\r\n  position: absolute;\r\n  z-index: -1;\r\n\r\n  background: ${props =>\r\n    props.selected\r\n      ? 'var(--border-selected)'\r\n      : 'var(--border-unselected)'};\r\n\r\n  height: 2px;\r\n  width: 15px;\r\n\r\n  top: ${props => props.position * 15 - 1}px;\r\n  left: -2px;\r\n`;\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n\r\n  ${props => {\r\n    if (props.name === 'out') return '';\r\n    return `top: ${props.position * 15 - 5}px;`;\r\n  }}\r\n\r\n  ${props => {\r\n    if (props.name === 'out') return 'right: -5px';\r\n    return 'left: -5px';\r\n  }};\r\n`;\r\n\r\nexport const Shape = ({ size = 90, portPositions = [] }) => (\r\n  <svg\r\n    height={size}\r\n    width={size}\r\n    viewBox=\"0 0 23.812499 23.812501\"\r\n    fill=\"var(--body-unselected)\"\r\n    stroke=\"var(--border-unselected)\"\r\n    strokeWidth=\"var(--border-width)\"\r\n  >\r\n    <g>\r\n      <path\r\n        d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 45 C 68.748245,88.000001 88.005576,45.650843 88,45 87.994195,44.322314 68.748245,1.9999989 45,2 h -0.271484 z\"\r\n        transform=\"scale(0.26458333)\"\r\n      />\r\n    </g>\r\n    <g strokeWidth={0.5}>\r\n      {portPositions.includes(1) && (\r\n        <path d=\"M 4.8860442,4.1010415 H 0.38245295\" />\r\n      )}\r\n      {portPositions.includes(2) && (\r\n        <path d=\"M 5.3419835,8.0697915 H 0.38232292\" />\r\n      )}\r\n      {portPositions.includes(3) && (\r\n        <path d=\"M 5.5975927,12.038541 H 0.38232292\" />\r\n      )}\r\n      {portPositions.includes(4) && (\r\n        <path d=\"M 5.2516863,16.007291 H 0.38232292\" />\r\n      )}\r\n      {portPositions.includes(5) && (\r\n        <path d=\"M 4.3916654,19.976041 H 0.38232292\" />\r\n      )}\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nconst OrWidget = props => {\r\n  const { model } = props;\r\n\r\n  const inputPorts = Object.values(model.getInputPorts());\r\n  const portPositions = distributePorts(inputPorts.length);\r\n\r\n  return (\r\n    <Wrapper selected={model.options.selected}>\r\n      <PortExtension\r\n        selected={model.isSelected()}\r\n        portPositions={portPositions}\r\n        offsetX={12}\r\n      />\r\n      {inputPorts.map((port, i) => (\r\n        <Fragment key={port.getName()}>\r\n          <PositionedPort\r\n            name={port.getName()}\r\n            position={portPositions[i]}\r\n          />\r\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\r\n            <PortExtensionConnector\r\n              selected={model.isSelected()}\r\n              position={portPositions[i]}\r\n            />\r\n          )}\r\n        </Fragment>\r\n      ))}\r\n      <PositionedPort name=\"out\" />\r\n      <Shape portPositions={portPositions} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default OrWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape } from './OrWidget';\r\n\r\nconst OrIcon = () => <Shape size={30} />;\r\n\r\nexport default OrIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class OrModel extends BaseModel {\r\n  initialize(configurations) {\r\n    const INPUT_PORTS_NUMBER = Number(\r\n      configurations.INPUT_PORTS_NUMBER,\r\n    );\r\n    this.dataBits = Number(configurations.DATA_BITS);\r\n\r\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\r\n      this.addInputPort(`in${i}`, { bits: this.dataBits });\r\n    }\r\n    this.addOutputPort('out', { bits: this.dataBits });\r\n  }\r\n\r\n  executeBit(bits) {\r\n    if (bits.every(bit => bit === 0)) return 0;\r\n    if (bits.some(bit => bit === 1)) return 1;\r\n    return 'e';\r\n  }\r\n\r\n  step(input) {\r\n    return {\r\n      out: Object.values(input)\r\n        .map(value => value.asArray(this.dataBits))\r\n        .transpose()\r\n        .map(this.executeBit),\r\n    };\r\n  }\r\n\r\n  stepFloating(input) {\r\n    return this.step(input);\r\n  }\r\n\r\n  stepError(input) {\r\n    return this.step(input);\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './OrIcon';\r\nimport model from './OrModel';\r\nimport widget from './OrWidget';\r\n\r\nexport default new Component({\r\n  type: 'Or',\r\n  name: 'Or',\r\n  description: 'Logic \"or\" gate',\r\n  group: 'Logic gates',\r\n  configurations: [\r\n    {\r\n      name: 'INPUT_PORTS_NUMBER',\r\n      type: 'number',\r\n      default: 2,\r\n      label: 'Number of input ports',\r\n      min: 2,\r\n      max: 16,\r\n      validate(value) {\r\n        if (value < this.min)\r\n          return `Minimum input ports is ${this.min}`;\r\n        if (value > this.max)\r\n          return `Maximum input ports is ${this.max}`;\r\n        return null;\r\n      },\r\n    },\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data bits',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst SHAPE_SIZES = {\r\n  1: { width: 30, height: 30 },\r\n  2: { width: 60, height: 30 },\r\n  4: { width: 120, height: 30 },\r\n  8: { width: 120, height: 60 },\r\n  16: { width: 240, height: 60 },\r\n};\r\n\r\nconst PIN_BACKGROUND = {\r\n  0: 'var(--value-off)',\r\n  1: 'var(--value-on)',\r\n  x: 'var(--value-floating)',\r\n  e: 'var(--value-error)',\r\n};\r\n\r\nconst PIN_BORDER = {\r\n  0: 'var(--value-on)',\r\n  1: 'var(--value-off)',\r\n  x: 'black',\r\n  e: 'black',\r\n};\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n  left: -7px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nexport const Shape = styled.div`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: ${props => {\r\n    if (props.format === 'BITS')\r\n      return SHAPE_SIZES[props.dataBits].width;\r\n\r\n    return SHAPE_SIZES[4].width;\r\n  }}px;\r\n  height: ${props => {\r\n    if (props.format === 'BITS')\r\n      return SHAPE_SIZES[props.dataBits].height;\r\n\r\n    return SHAPE_SIZES[4].height;\r\n  }}px;\r\n\r\n  background: ${props =>\r\n    props.selected\r\n      ? 'var(--body-selected)'\r\n      : 'var(--body-unselected)'};\r\n  border: 2px solid\r\n    ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const PinContainer = styled.span`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  font-family: monospace;\r\n\r\n  max-width: 215px;\r\n`;\r\n\r\nexport const Pin = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 20px;\r\n  height: 20px;\r\n  margin: 2px;\r\n\r\n  background: ${props => PIN_BACKGROUND[props.value]};\r\n  border: 2px solid ${props => PIN_BORDER[props.value]};\r\n  border-radius: 100%;\r\n\r\n  color: ${props => (props.value === 1 ? 'black' : 'white')};\r\n  font-family: monospace;\r\n\r\n  transition: 100ms linear;\r\n`;\r\n\r\nconst ErrorMessage = styled.span`\r\n  color: var(--value-error);\r\n  font-weight: bold;\r\n  font-family: monospace;\r\n`;\r\n\r\nconst FloatingMessage = styled.span`\r\n  color: var(--value-floating);\r\n  font-weight: bold;\r\n  font-family: monospace;\r\n`;\r\n\r\nconst mapBits = model => {\r\n  const {\r\n    configurations: { DATA_BITS },\r\n  } = model;\r\n  const dataBits = Number(DATA_BITS);\r\n\r\n  return [...new Array(dataBits)].map((_, index) => {\r\n    const value = model.getBitAt(index);\r\n\r\n    return (\r\n      <Pin\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        key={index}\r\n        value={value}\r\n      >\r\n        {value}\r\n      </Pin>\r\n    );\r\n  });\r\n};\r\n\r\nconst showAsNumber = (input, format) => {\r\n  const number = input.asNumber();\r\n  if (number === 'e') return <ErrorMessage>(error)</ErrorMessage>;\r\n  if (number === 'x')\r\n    return <FloatingMessage>(floating)</FloatingMessage>;\r\n\r\n  if (format === 'DECIMAL') return number;\r\n  if (format === 'HEXADECIMAL')\r\n    return `0x${number.toString(16).padStart(4, '0')}`;\r\n  return '';\r\n};\r\n\r\nconst OutputWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n    configurations: { OUTPUT_FORMAT, DATA_BITS },\r\n  } = model;\r\n\r\n  const dataBits = Number(DATA_BITS);\r\n\r\n  return (\r\n    <Shape\r\n      selected={selected}\r\n      format={OUTPUT_FORMAT}\r\n      dataBits={dataBits}\r\n    >\r\n      <PinContainer data-testid=\"pin-container\">\r\n        {OUTPUT_FORMAT === 'BITS'\r\n          ? mapBits(model)\r\n          : showAsNumber(model.getInput(), OUTPUT_FORMAT)}\r\n      </PinContainer>\r\n      <PositionedPort name=\"in\" />\r\n    </Shape>\r\n  );\r\n};\r\n\r\nexport default OutputWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape, Pin } from './OutputWidget';\r\n\r\nconst OutputIcon = () => (\r\n  <Shape dataBits={1} format=\"BITS\">\r\n    <Pin as=\"div\" value={0} />\r\n  </Shape>\r\n);\r\n\r\nexport default OutputIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class OutputModel extends BaseModel {\r\n  initialize(configurations) {\r\n    this.dataBits = Number(configurations.DATA_BITS);\r\n\r\n    this.addInputPort('in', { bits: this.dataBits });\r\n  }\r\n\r\n  getInput() {\r\n    return (\r\n      this.getPort('in').getValue() ||\r\n      new Array(this.dataBits).fill(0)\r\n    );\r\n  }\r\n\r\n  getBitAt(index) {\r\n    return this.getInput()[index];\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './OutputIcon';\r\nimport model from './OutputModel';\r\nimport widget from './OutputWidget';\r\n\r\nexport default new Component({\r\n  type: 'Output',\r\n  name: 'Output pin',\r\n  description: 'Simple output pin',\r\n  group: 'Input & output',\r\n  configurations: [\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data bits',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'OUTPUT_FORMAT',\r\n      type: 'select',\r\n      default: 'BITS',\r\n      label: 'Output format',\r\n      options: [\r\n        {\r\n          label: 'Bit by bit',\r\n          value: 'BITS',\r\n        },\r\n        {\r\n          label: 'Decimal number',\r\n          value: 'DECIMAL',\r\n        },\r\n        {\r\n          label: 'Hexadecimal number',\r\n          value: 'HEXADECIMAL',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: -5px;\r\n  transform: translateX(-50%);\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\n\r\nexport const Shape = ({ selected, dataBits = 1 }) => {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 30 30\"\r\n      width=\"30\"\r\n      height=\"30\"\r\n      fill=\"none\"\r\n      stroke={selected ? 'var(--value-5)' : 'var(--value-10)'}\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    >\r\n      <polyline\r\n        points=\"15 15 15 30\"\r\n        strokeWidth={`var(--link-${dataBits}-bit-width)`}\r\n        strokeLinecap=\"butt\"\r\n      />\r\n      <polyline\r\n        points=\"7 15 15 0 23 15 7 15\"\r\n        fill=\"var(--value-2)\"\r\n        fillOpacity={\r\n          selected\r\n            ? 'var(--unselected-opacity)'\r\n            : 'var(--selected-opacity)'\r\n        }\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst PowerWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n  } = model;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Shape selected={selected} dataBits={model.dataBits} />\r\n      <PositionedPort name=\"out\" />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PowerWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape } from './PowerWidget';\r\n\r\nconst PowerIcon = () => <Shape />;\r\n\r\nexport default PowerIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class PowerModel extends BaseModel {\r\n  initialize(configurations) {\r\n    this.dataBits = Number(configurations.DATA_BITS);\r\n\r\n    this.addOutputPort('out', { bits: this.dataBits });\r\n  }\r\n\r\n  onSimulationStart() {\r\n    this.emit({ out: 0b1111_1111_1111_1111 });\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './PowerIcon';\r\nimport model from './PowerModel';\r\nimport widget from './PowerWidget';\r\n\r\nexport default new Component({\r\n  type: 'Power',\r\n  name: 'Power',\r\n  description: 'Power (VCC) component',\r\n  group: 'Wiring',\r\n  configurations: [\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data bits',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Icon = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 30px;\r\n  height: 30px;\r\n  font-size: 10px;\r\n\r\n  background: var(--body-unselected);\r\n  border: 1px solid var(--border-unselected);\r\n`;\r\n\r\nconst RamIcon = () => <Icon>RAM</Icon>;\r\n\r\nexport default RamIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class RamModel extends BaseModel {\r\n  initialize(configurations) {\r\n    this.dataWidth = Number(configurations.DATA_WIDTH);\r\n    this.addressWidth = Number(configurations.ADDRESS_WIDTH);\r\n    this.memory = (configurations.CONTENT || '').parseBinary(\r\n      this.dataWidth,\r\n      2 ** this.addressWidth,\r\n    );\r\n\r\n    this.addInputPort('clock', { floating: 0 });\r\n    this.addInputPort('load', { floating: 1 });\r\n    this.addInputPort('address', {\r\n      bits: this.addressWidth,\r\n      floating: 0,\r\n    });\r\n    this.addInputPort('clear', { floating: 0 });\r\n    this.addInputPort('select', { floating: 1 });\r\n    this.addOutputPort('data', { bits: this.dataWidth });\r\n  }\r\n\r\n  clearMemory() {\r\n    this.memory = Array(2 ** this.addressWidth).fill(0);\r\n  }\r\n\r\n  getMemory() {\r\n    return this.memory;\r\n  }\r\n\r\n  getAddress() {\r\n    if (!this.select) return 0;\r\n    return (this.currentAddress || 0).asNumber();\r\n  }\r\n\r\n  step(input, meta) {\r\n    this.currentAddress = input.address;\r\n    this.select = input.select;\r\n\r\n    if (input.clear) this.clearMemory();\r\n    if (!input.select) return { data: 'x' };\r\n\r\n    if (!input.load) {\r\n      if (meta.clock.risingEdge && !input.clear) {\r\n        this.memory[input.address] = this.getPort('data')\r\n          .getWireValue()\r\n          .asNumber();\r\n      }\r\n\r\n      return { data: 'x' };\r\n    }\r\n\r\n    return {\r\n      data: this.memory[input.address],\r\n    };\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n\r\n  width: 180px;\r\n  height: 150px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  background: ${props =>\r\n    props.selected\r\n      ? 'var(--body-selected)'\r\n      : 'var(--body-unselected)'};\r\n  border: 1px solid\r\n    ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n\r\n  transition: 100ms linear;\r\n`;\r\n\r\nconst Memory = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  overflow: hidden;\r\n  background: white;\r\n  border: 2px solid #c9c9c9;\r\n\r\n  width: 80%;\r\n  height: 112px;\r\n  font-size: 10px;\r\n`;\r\n\r\nconst Cell = styled.div`\r\n  display: flex;\r\n  border-bottom: 1px solid #c9c9c9;\r\n  padding: 0 4px;\r\n`;\r\n\r\nconst ActiveAddress = styled.div`\r\n  width: 0;\r\n  height: 0;\r\n  border-style: solid;\r\n  border-width: 4px 0 4px 8px;\r\n  border-color: ${({ isSelected }) =>\r\n    `transparent transparent transparent ${\r\n      isSelected ? '#f44336' : 'transparent'\r\n    }`};\r\n  margin: auto 4px auto -4px;\r\n`;\r\n\r\nconst AddressValueContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Address = styled.span`\r\n  margin-right: 4px;\r\n  padding: 1px 4px;\r\n  height: fit-content;\r\n\r\n  font-family: monospace;\r\n  font-size: 8px;\r\n  color: white;\r\n\r\n  background: #2642a0;\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst Value = styled.span`\r\n  padding: 4px;\r\n`;\r\n\r\nconst Chevron = ({ className, selected }) => (\r\n  <svg\r\n    className={className}\r\n    width={20}\r\n    height={12}\r\n    viewBox=\"0 0 20 12\"\r\n    stroke={`var(--border-${selected ? '' : 'un'}selected)`}\r\n    strokeWidth={2}\r\n    strokeLinecap=\"round\"\r\n  >\r\n    <line x1={0} y1={12} x2={10} y2={0} />\r\n    <line x1={10} y1={0} x2={20} y2={12} />\r\n  </svg>\r\n);\r\n\r\nconst PositionedChevron = styled(Chevron)`\r\n  position: absolute;\r\n  bottom: -1px;\r\n  left: calc(50% - 10px);\r\n\r\n  transition: 100ms linear;\r\n`;\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n\r\n  ${props => {\r\n    if (props.name === 'clock') return 'bottom: -5px';\r\n    if (props.name === 'load')\r\n      return 'bottom: -5px; right: calc(50% - 20px)';\r\n    if (props.name === 'clear')\r\n      return 'bottom: -5px; right: calc(50% - 35px)';\r\n    if (props.name === 'select')\r\n      return 'bottom: -5px; right: calc(50% - 50px)';\r\n    if (props.name === 'address') return 'left: -5px';\r\n    if (props.name === 'data') return 'right: -5px';\r\n    return '';\r\n  }}\r\n`;\r\n\r\nconst getMemoryDisplayRange = (memory, address) => {\r\n  if (address <= 1) return [0, 5];\r\n  if (address >= memory.length - 2)\r\n    return [memory.length - 5, memory.length];\r\n  return [address - 2, address + 3];\r\n};\r\n\r\nconst RamWidget = props => {\r\n  const { model } = props;\r\n  const selected = model.isSelected();\r\n\r\n  const memory = model.getMemory();\r\n  const selectedAddress = model.getAddress();\r\n  const range = getMemoryDisplayRange(memory, selectedAddress);\r\n\r\n  return (\r\n    <Wrapper selected={selected}>\r\n      <PositionedChevron selected={selected} />\r\n\r\n      <PositionedPort name=\"clock\" />\r\n      <PositionedPort name=\"load\" />\r\n      <PositionedPort name=\"address\" />\r\n      <PositionedPort name=\"data\" />\r\n      <PositionedPort name=\"clear\" />\r\n      <PositionedPort name=\"select\" />\r\n\r\n      <Memory>\r\n        {memory.slice(...range).map((value, index) => {\r\n          const address = index + range[0];\r\n          const formattedAddress = `0x${address\r\n            .toString(16)\r\n            .padStart(2, '0')}`;\r\n\r\n          return (\r\n            <Cell key={formattedAddress}>\r\n              <ActiveAddress\r\n                isSelected={address === selectedAddress}\r\n              />\r\n              <AddressValueContainer>\r\n                <Address>{formattedAddress}</Address>\r\n                <Value>{value}</Value>\r\n              </AddressValueContainer>\r\n            </Cell>\r\n          );\r\n        })}\r\n      </Memory>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default RamWidget;\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './RamIcon';\r\nimport model from './RamModel';\r\nimport widget from './RamWidget';\r\n\r\nexport default new Component({\r\n  type: 'Ram',\r\n  name: 'RAM',\r\n  description: 'Random access memory',\r\n  group: 'Memory',\r\n  configurations: [\r\n    {\r\n      name: 'DATA_WIDTH',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data width',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'ADDRESS_WIDTH',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Address width',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'CONTENT',\r\n      type: 'binary',\r\n      label: 'Initial content',\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Icon = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 30px;\r\n  height: 30px;\r\n  font-size: 10px;\r\n\r\n  background: var(--body-unselected);\r\n  border: 1px solid var(--border-unselected);\r\n`;\r\n\r\nconst RomIcon = () => <Icon>ROM</Icon>;\r\n\r\nexport default RomIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class RomModel extends BaseModel {\r\n  initialize(configurations) {\r\n    this.dataWidth = Number(configurations.DATA_WIDTH);\r\n    this.addressWidth = Number(configurations.ADDRESS_WIDTH);\r\n    this.memory = (configurations.CONTENT || '').parseBinary(\r\n      this.dataWidth,\r\n      2 ** this.addressWidth,\r\n    );\r\n\r\n    this.addInputPort('address', {\r\n      bits: this.addressWidth,\r\n      floating: 0,\r\n    });\r\n    this.addInputPort('select', { floating: 1 });\r\n    this.addOutputPort('data', { bits: this.dataWidth });\r\n  }\r\n\r\n  getMemory() {\r\n    return this.memory;\r\n  }\r\n\r\n  getAddress() {\r\n    if (!this.select) return 0;\r\n    return (this.currentAddress || 0).asNumber();\r\n  }\r\n\r\n  step(input) {\r\n    this.currentAddress = input.address;\r\n    this.select = input.select;\r\n\r\n    if (!input.select) return { data: 'x' };\r\n\r\n    return {\r\n      data: this.memory[input.address],\r\n    };\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n\r\n  width: 180px;\r\n  height: 150px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  background: ${props =>\r\n    props.selected\r\n      ? 'var(--body-selected)'\r\n      : 'var(--body-unselected)'};\r\n  border: 1px solid\r\n    ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n\r\n  transition: 100ms linear;\r\n`;\r\n\r\nconst Memory = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  overflow: hidden;\r\n  background: white;\r\n  border: 2px solid #c9c9c9;\r\n\r\n  width: 80%;\r\n  height: 112px;\r\n  font-size: 10px;\r\n`;\r\n\r\nconst Cell = styled.div`\r\n  display: flex;\r\n  border-bottom: 1px solid #c9c9c9;\r\n  padding: 0 4px;\r\n`;\r\n\r\nconst ActiveAddress = styled.div`\r\n  width: 0;\r\n  height: 0;\r\n  border-style: solid;\r\n  border-width: 4px 0 4px 8px;\r\n  border-color: ${({ isSelected }) =>\r\n    `transparent transparent transparent ${\r\n      isSelected ? '#f44336' : 'transparent'\r\n    }`};\r\n  margin: auto 4px auto -4px;\r\n`;\r\n\r\nconst AddressValueContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Address = styled.span`\r\n  margin-right: 4px;\r\n  padding: 1px 4px;\r\n  height: fit-content;\r\n\r\n  font-family: monospace;\r\n  font-size: 8px;\r\n  color: white;\r\n\r\n  background: #2642a0;\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst Value = styled.span`\r\n  padding: 4px;\r\n`;\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n\r\n  ${props => {\r\n    if (props.name === 'select')\r\n      return 'bottom: -5px; right: calc(50% - 50px)';\r\n    if (props.name === 'address') return 'left: -5px';\r\n    if (props.name === 'data') return 'right: -5px';\r\n    return '';\r\n  }}\r\n`;\r\n\r\nconst getMemoryDisplayRange = (memory, address) => {\r\n  if (address <= 1) return [0, 5];\r\n  if (address >= memory.length - 2)\r\n    return [memory.length - 5, memory.length];\r\n  return [address - 2, address + 3];\r\n};\r\n\r\nconst RomWidget = props => {\r\n  const { model } = props;\r\n  const memory = model.getMemory();\r\n  const selectedAddress = model.getAddress();\r\n  const range = getMemoryDisplayRange(memory, selectedAddress);\r\n\r\n  return (\r\n    <Wrapper selected={model.isSelected()}>\r\n      <PositionedPort name=\"address\" />\r\n      <PositionedPort name=\"data\" />\r\n      <PositionedPort name=\"select\" />\r\n\r\n      <Memory>\r\n        {memory.slice(...range).map((value, index) => {\r\n          const address = index + range[0];\r\n          const formattedAddress = `0x${address\r\n            .toString(16)\r\n            .padStart(2, '0')}`;\r\n\r\n          return (\r\n            <Cell key={formattedAddress}>\r\n              <ActiveAddress\r\n                isSelected={address === selectedAddress}\r\n              />\r\n              <AddressValueContainer>\r\n                <Address>{formattedAddress}</Address>\r\n                <Value>{value}</Value>\r\n              </AddressValueContainer>\r\n            </Cell>\r\n          );\r\n        })}\r\n      </Memory>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default RomWidget;\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './RomIcon';\r\nimport model from './RomModel';\r\nimport widget from './RomWidget';\r\n\r\nexport default new Component({\r\n  type: 'Rom',\r\n  name: 'ROM',\r\n  description: 'Read only memory',\r\n  group: 'Memory',\r\n  configurations: [\r\n    {\r\n      name: 'DATA_WIDTH',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data width',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'ADDRESS_WIDTH',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Address width',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'CONTENT',\r\n      type: 'binary',\r\n      label: 'Initial content',\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n  ${props => (props.name === 'in' ? 'left: -5px' : 'right: -5px')};\r\n  bottom: ${props => (props.position || 0) - 5}px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n\r\n  width: 30px;\r\n  height: ${props => 15 * props.dataBits}px;\r\n`;\r\n\r\nexport const Shape = ({ selected, dataBits }) => {\r\n  const height = dataBits * 15;\r\n\r\n  return (\r\n    <svg\r\n      viewBox={`0 0 30 ${height}`}\r\n      height={height}\r\n      width=\"30\"\r\n      fill=\"none\"\r\n      stroke={\r\n        selected ? 'var(--link-selected)' : 'var(--link-16-bit-color)'\r\n      }\r\n      strokeLinecap=\"butt\"\r\n      strokeWidth=\"2\"\r\n    >\r\n      <path\r\n        strokeWidth=\"4\"\r\n        d={`M0,${height} L15,${height - 15} L15,0`}\r\n      />\r\n      {[...new Array(dataBits)]\r\n        .map((_, index) => index + 1)\r\n        .map(index => {\r\n          const bitHeight = height - index * 15;\r\n\r\n          return (\r\n            <path\r\n              key={index}\r\n              d={`M15,${bitHeight} L30,${bitHeight}`}\r\n            />\r\n          );\r\n        })}\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst SplitterWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n    configurations: { DATA_BITS },\r\n  } = model;\r\n\r\n  const dataBits = Number(DATA_BITS);\r\n  const outputPorts = Object.values(model.getOutputPorts());\r\n\r\n  return (\r\n    <Wrapper dataBits={dataBits}>\r\n      <PositionedPort name=\"in\" />\r\n      {outputPorts.map((port, i) => (\r\n        <PositionedPort\r\n          key={port.getName()}\r\n          name={port.getName()}\r\n          position={(i + 1) * 15}\r\n        />\r\n      ))}\r\n      <Shape selected={selected} dataBits={dataBits} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SplitterWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape } from './SplitterWidget';\r\n\r\nconst SplitterIcon = () => <Shape dataBits={2} />;\r\n\r\nexport default SplitterIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class SplitterModel extends BaseModel {\r\n  initialize(configurations) {\r\n    this.bits = Number(configurations.DATA_BITS);\r\n\r\n    this.addInputPort('in', { bits: this.bits });\r\n    for (let i = 0; i < this.bits; i += 1) {\r\n      this.addOutputPort(`out${i}`);\r\n    }\r\n  }\r\n\r\n  step(input) {\r\n    return Object.fromEntries(\r\n      input.in\r\n        .asArray(this.bits)\r\n        .map((bit, index, { length }) => [\r\n          `out${length - index - 1}`,\r\n          bit,\r\n        ]),\r\n    );\r\n  }\r\n\r\n  stepFloating(input) {\r\n    return this.step(input);\r\n  }\r\n\r\n  stepError(input) {\r\n    return this.step(input);\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './SplitterIcon';\r\nimport model from './SplitterModel';\r\nimport widget from './SplitterWidget';\r\n\r\nexport default new Component({\r\n  type: 'Splitter',\r\n  name: 'Splitter',\r\n  description: 'Split wire with N bits into N 1 bit wires',\r\n  group: 'Wiring',\r\n  configurations: [\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '2',\r\n      label: 'Input data bits',\r\n      options: [\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst SEGMENTS = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'dp'];\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n  left: ${props => props.position.horizontal}px;\r\n  top: ${props => props.position.vertical}px;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: ${props => (props.icon ? 23 : 75)}px;\r\n  height: ${props => (props.icon ? 36 : 90)}px;\r\n\r\n  background: ${props => `#ffffff${props.selected ? '80' : 'ff'}`};\r\n  box-shadow: 0 0 ${props => (props.isActive ? 15 : 0)}px\r\n    ${props => props.color};\r\n  border: 2px solid\r\n    ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const Shape = ({ segments, selected, icon }) => (\r\n  <svg\r\n    width={icon ? 18 : 50}\r\n    height={icon ? 36 : 90}\r\n    viewBox={icon ? '-7 0 60 90' : '0 0 50 90'}\r\n    fill=\"none\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    style={{\r\n      opacity: selected ? '80' : 'ff',\r\n      fillOpacity: selected ? '80' : 'ff',\r\n    }}\r\n  >\r\n    {/* A */}\r\n    <polyline\r\n      points=\"5 18 11 20 32 20 35 14 9 14\"\r\n      fill={segments.a}\r\n      data-testid=\"a\"\r\n    />\r\n    {/* B */}\r\n    <polyline\r\n      points=\"37 14 41 20 39 42 37 44 33 39 34 20\"\r\n      fill={segments.b}\r\n      data-testid=\"b\"\r\n    />\r\n    {/* C */}\r\n    <polyline\r\n      points=\"37 46 38 47 36 71 31 76 29 69 31 51\"\r\n      fill={segments.c}\r\n      data-testid=\"c\"\r\n    />\r\n    {/* D */}\r\n    <polyline\r\n      points=\"0 72 7 69 27 69 29 76 4 76\"\r\n      fill={segments.d}\r\n      data-testid=\"d\"\r\n    />\r\n    {/* E */}\r\n    <polyline\r\n      points=\"4 46 8 51 7 67 0 70 2 47\"\r\n      fill={segments.e}\r\n      data-testid=\"e\"\r\n    />\r\n    {/* F */}\r\n    <polyline\r\n      points=\"5 20 11 22 10 39 4 44 3 42\"\r\n      fill={segments.f}\r\n      data-testid=\"f\"\r\n    />\r\n    {/* G */}\r\n    <polyline\r\n      points=\"6 45 9 48 31 48 35 45 32 41 11 41\"\r\n      fill={segments.g}\r\n      data-testid=\"g\"\r\n    />\r\n    {/* DP */}\r\n    <circle\r\n      r=\"5\"\r\n      cx=\"45\"\r\n      cy=\"71\"\r\n      fill={segments.dp}\r\n      data-testid=\"dp\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst LedWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n  } = model;\r\n\r\n  return (\r\n    <Wrapper selected={selected}>\r\n      <Shape\r\n        selected={selected}\r\n        segments={SEGMENTS.reduce(\r\n          (prev, segment) => ({\r\n            ...prev,\r\n            [segment]: model.getColor(segment),\r\n          }),\r\n          {},\r\n        )}\r\n      />\r\n      {SEGMENTS.map(segment => (\r\n        <PositionedPort\r\n          key={segment}\r\n          name={segment}\r\n          position={model.getPositionForSegment(segment)}\r\n        />\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default LedWidget;\r\n","import React from 'react';\r\n\r\nimport { Wrapper, Shape } from './SsdWidget';\r\n\r\nconst SsdIcon = () => (\r\n  <Wrapper icon>\r\n    <Shape\r\n      icon\r\n      segments={{\r\n        a: '#ff0000',\r\n        b: '#ff0000',\r\n        c: '#ff0000',\r\n        d: '#ff0000',\r\n        e: '#ff0000',\r\n        f: '#ff0000',\r\n        g: '#ff0000',\r\n        dp: '#ff0000',\r\n      }}\r\n    />\r\n  </Wrapper>\r\n);\r\n\r\nexport default SsdIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class LedModel extends BaseModel {\r\n  initialize(configurations) {\r\n    this.activeWhen = configurations.ACTIVE_WHEN;\r\n    this.colors = {\r\n      on: configurations.ON_COLOR,\r\n      off: configurations.OFF_COLOR,\r\n    };\r\n\r\n    this.addInputPort('a', { floating: 0, error: 0 });\r\n    this.addInputPort('b', { floating: 0, error: 0 });\r\n    this.addInputPort('c', { floating: 0, error: 0 });\r\n    this.addInputPort('d', { floating: 0, error: 0 });\r\n    this.addInputPort('e', { floating: 0, error: 0 });\r\n    this.addInputPort('f', { floating: 0, error: 0 });\r\n    this.addInputPort('g', { floating: 0, error: 0 });\r\n    this.addInputPort('dp', { floating: 0, error: 0 });\r\n  }\r\n\r\n  getInput(segment) {\r\n    return this.getPort(segment).getValue() || [0];\r\n  }\r\n\r\n  isActive(segment) {\r\n    const input = this.getInput(segment)[0];\r\n\r\n    if (this.activeWhen === 'HIGH') {\r\n      if (input === 0) return false;\r\n      return true;\r\n    }\r\n\r\n    if (input === 0) return true;\r\n    return false;\r\n  }\r\n\r\n  getPositionForSegment(segment) {\r\n    const POSITIONS = {\r\n      a: {\r\n        vertical: 1,\r\n        horizontal: 3,\r\n      },\r\n      b: {\r\n        vertical: 1,\r\n        horizontal: 4,\r\n      },\r\n      c: {\r\n        vertical: 2,\r\n        horizontal: 3,\r\n      },\r\n      d: {\r\n        vertical: 2,\r\n        horizontal: 2,\r\n      },\r\n      e: {\r\n        vertical: 2,\r\n        horizontal: 1,\r\n      },\r\n      f: {\r\n        vertical: 1,\r\n        horizontal: 2,\r\n      },\r\n      g: {\r\n        vertical: 1,\r\n        horizontal: 1,\r\n      },\r\n      dp: {\r\n        vertical: 2,\r\n        horizontal: 4,\r\n      },\r\n    };\r\n\r\n    const position = POSITIONS[segment];\r\n\r\n    return {\r\n      horizontal: 8 + 15 * (position.horizontal - 1),\r\n      vertical: position.vertical === 1 ? -2 : 88,\r\n    };\r\n  }\r\n\r\n  getColor(segment) {\r\n    if (this.isActive(segment)) return this.colors.on;\r\n    return this.colors.off;\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './SsdIcon';\r\nimport model from './SsdModel';\r\nimport widget from './SsdWidget';\r\n\r\nexport default new Component({\r\n  type: 'Ssd',\r\n  name: 'SSD',\r\n  description: 'Seven segments display',\r\n  group: 'Input & output',\r\n  configurations: [\r\n    {\r\n      name: 'ACTIVE_WHEN',\r\n      type: 'select',\r\n      default: 'HIGH',\r\n      label: 'Active when',\r\n      options: [\r\n        {\r\n          label: 'High',\r\n          value: 'HIGH',\r\n        },\r\n        {\r\n          label: 'Low',\r\n          value: 'LOW',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'ON_COLOR',\r\n      type: 'select',\r\n      default: '#ff0000',\r\n      label: 'On color',\r\n      options: [\r\n        {\r\n          label: 'Red',\r\n          value: '#ff0000',\r\n        },\r\n        {\r\n          label: 'Green',\r\n          value: '#00ff00',\r\n        },\r\n        {\r\n          label: 'Blue',\r\n          value: '#0000ff',\r\n        },\r\n        {\r\n          label: 'White',\r\n          value: '#ffffff',\r\n        },\r\n        {\r\n          label: 'Black',\r\n          value: '#000000',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'OFF_COLOR',\r\n      type: 'select',\r\n      default: '#00000040',\r\n      label: 'Off color',\r\n      options: [\r\n        {\r\n          label: 'Red',\r\n          value: '#ff000040',\r\n        },\r\n        {\r\n          label: 'Green',\r\n          value: '#00ff0040',\r\n        },\r\n        {\r\n          label: 'Blue',\r\n          value: '#0000ff40',\r\n        },\r\n        {\r\n          label: 'White',\r\n          value: '#ffffff40',\r\n        },\r\n        {\r\n          label: 'Black',\r\n          value: '#00000040',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n  right: -7px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nexport const Shape = styled.div`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 45px;\r\n  height: 30px;\r\n\r\n  background: ${props =>\r\n    props.selected\r\n      ? 'var(--body-selected)'\r\n      : 'var(--body-unselected)'};\r\n  border: 2px solid\r\n    ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const Switch = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 40px;\r\n  height: 24px;\r\n  margin: 2px;\r\n\r\n  background: #848484;\r\n  border: 2px solid #313131;\r\n  border-radius: 15px;\r\n\r\n  color: ${props => (props.value === 1 ? 'black' : 'white')};\r\n  font-family: monospace;\r\n`;\r\n\r\nexport const SwitchValue = styled.div`\r\n  transform: ${props =>\r\n    props.isActive ? 'translateX(6px)' : 'translateX(-6px)'};\r\n\r\n  width: 15px;\r\n  height: 15px;\r\n\r\n  border-radius: 100%;\r\n  transition: 100ms linear;\r\n  background: black;\r\n`;\r\n\r\nconst SwitchWidget = props => {\r\n  const { model } = props;\r\n  const {\r\n    options: { selected },\r\n  } = model;\r\n\r\n  return (\r\n    <Shape selected={selected}>\r\n      <Switch onClick={() => model.onClick()}>\r\n        <SwitchValue isActive={model.isActive()} />\r\n      </Switch>\r\n      <PositionedPort name=\"out\" />\r\n    </Shape>\r\n  );\r\n};\r\n\r\nexport default SwitchWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape, Switch, SwitchValue } from './SwitchWidget';\r\n\r\nconst SwitchIcon = () => (\r\n  <Shape>\r\n    <Switch as=\"div\">\r\n      <SwitchValue value={0} />\r\n    </Switch>\r\n  </Shape>\r\n);\r\n\r\nexport default SwitchIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class SwitchModel extends BaseModel {\r\n  initialize() {\r\n    this.addOutputPort('out');\r\n  }\r\n\r\n  onSimulationStart() {\r\n    this.emit({ out: 0 });\r\n  }\r\n\r\n  onClick(index) {\r\n    const mask = 0b1 << index;\r\n\r\n    this.emit({ out: this.getOutput() ^ mask });\r\n  }\r\n\r\n  getOutput() {\r\n    return this.getPort('out').getValue() || [0];\r\n  }\r\n\r\n  isActive() {\r\n    return this.getOutput()[0] === 1;\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './SwitchIcon';\r\nimport model from './SwitchModel';\r\nimport widget from './SwitchWidget';\r\n\r\nexport default new Component({\r\n  type: 'Switch',\r\n  name: 'Switch',\r\n  description: 'On/off switch',\r\n  group: 'Input & output',\r\n  configurations: [],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React, { Fragment } from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { PortExtension, distributePorts } from '../portExtendUtils';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 105px;\r\n  height: 90px;\r\n\r\n  transition: 100ms linear;\r\n  svg {\r\n    fill: ${props =>\r\n      props.selected\r\n        ? 'var(--body-selected)'\r\n        : 'var(--body-unselected)'};\r\n    stroke: ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n  }\r\n`;\r\n\r\nconst PortExtensionConnector = styled.div`\r\n  position: absolute;\r\n  z-index: -1;\r\n\r\n  background: ${props =>\r\n    props.selected\r\n      ? 'var(--border-selected)'\r\n      : 'var(--border-unselected)'};\r\n\r\n  height: 2px;\r\n  width: 15px;\r\n\r\n  top: ${props => props.position * 15 - 1}px;\r\n  left: -2px;\r\n`;\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n\r\n  ${props => {\r\n    if (props.name === 'out') return '';\r\n    return `top: ${props.position * 15 - 5}px;`;\r\n  }}\r\n\r\n  ${props => {\r\n    if (props.name === 'out') return 'right: -5px';\r\n    return 'left: -5px';\r\n  }};\r\n`;\r\n\r\nexport const Shape = ({ size = 90, portPositions = [] }) => (\r\n  <svg\r\n    height={size}\r\n    width={size + 15}\r\n    viewBox=\"0 0 27.781249 23.812501\"\r\n    fill=\"var(--body-unselected)\"\r\n    stroke=\"var(--border-unselected)\"\r\n    strokeWidth=\"var(--border-width)\"\r\n  >\r\n    <g>\r\n      <path\r\n        fill=\"none\"\r\n        style={{\r\n          transform:\r\n            'scale(0.284583, 0.284583) translate(-1px, -3px)',\r\n        }}\r\n        d=\"m 11.926664,1.1161165 c 5.50133,9.5176855 9.663162,25.9796645 9.66318,42.6065395 m 0,0 c 1.62e-4,18.330222 -4.950245,36.216284 -11.386335,45.249616\"\r\n      />\r\n      <g transform=\"scale(0.26458333)\">\r\n        <path\r\n          d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 37.875 c 23.748245,0 43.005576,-42.349157 43,-43 -0.0058,-0.677686 -19.251755,-43 -43,-43 h -0.271484 z\"\r\n          transform=\"translate(7)\"\r\n        />\r\n        <circle r=\"5.72056\" cy=\"45\" cx=\"94.27944\" />\r\n      </g>\r\n    </g>\r\n    <g strokeWidth={0.5}>\r\n      {portPositions.includes(1) && (\r\n        <path d=\"M 4.8860442,4.1010415 H 0.38245295\" />\r\n      )}\r\n      {portPositions.includes(2) && (\r\n        <path d=\"M 5.3419835,8.0697915 H 0.38232292\" />\r\n      )}\r\n      {portPositions.includes(3) && (\r\n        <path d=\"M 5.5975927,12.038541 H 0.38232292\" />\r\n      )}\r\n      {portPositions.includes(4) && (\r\n        <path d=\"M 5.2516863,16.007291 H 0.38232292\" />\r\n      )}\r\n      {portPositions.includes(5) && (\r\n        <path d=\"M 4.3916654,19.976041 H 0.38232292\" />\r\n      )}\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nconst XnorWidget = props => {\r\n  const { model } = props;\r\n\r\n  const inputPorts = Object.values(model.getInputPorts());\r\n  const portPositions = distributePorts(inputPorts.length);\r\n\r\n  return (\r\n    <Wrapper selected={model.options.selected}>\r\n      <PortExtension\r\n        selected={model.isSelected()}\r\n        portPositions={portPositions}\r\n        offsetX={12}\r\n      />\r\n      {inputPorts.map((port, i) => (\r\n        <Fragment key={port.getName()}>\r\n          <PositionedPort\r\n            name={port.getName()}\r\n            position={portPositions[i]}\r\n          />\r\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\r\n            <PortExtensionConnector\r\n              selected={model.isSelected()}\r\n              position={portPositions[i]}\r\n            />\r\n          )}\r\n        </Fragment>\r\n      ))}\r\n      <PositionedPort name=\"out\" />\r\n      <Shape portPositions={portPositions} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default XnorWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape } from './XnorWidget';\r\n\r\nconst XnorIcon = () => <Shape size={30} />;\r\n\r\nexport default XnorIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class XnorModel extends BaseModel {\r\n  initialize(configurations) {\r\n    this.behavior = configurations.MULTIPLE_INPUT_BEHAVIOR;\r\n    this.dataBits = Number(configurations.DATA_BITS);\r\n\r\n    const INPUT_PORTS_NUMBER = Number(\r\n      configurations.INPUT_PORTS_NUMBER,\r\n    );\r\n\r\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\r\n      this.addInputPort(`in${i}`, { bits: this.dataBits });\r\n    }\r\n    this.addOutputPort('out', { bits: this.dataBits });\r\n  }\r\n\r\n  executeBit(bits) {\r\n    if (bits.some(bit => bit === 'x' || bit === 'e')) return 'e';\r\n    if (this.behavior === 'ONE') return this.executeOne(bits);\r\n    if (this.behavior === 'EVEN') return this.executeEven(bits);\r\n    return {};\r\n  }\r\n\r\n  executeOne(bits) {\r\n    return bits.filter(bit => bit === 1).length === 1 ? 0 : 1;\r\n  }\r\n\r\n  executeEven(bits) {\r\n    return bits.filter(bit => bit === 1).length % 2 ? 0 : 1;\r\n  }\r\n\r\n  step(input) {\r\n    return {\r\n      out: Object.values(input)\r\n        .map(value => value.asArray(this.dataBits))\r\n        .transpose()\r\n        .map(this.executeBit.bind(this)),\r\n    };\r\n  }\r\n\r\n  stepFloating(input) {\r\n    return this.step(input);\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './XnorIcon';\r\nimport model from './XnorModel';\r\nimport widget from './XnorWidget';\r\n\r\nexport default new Component({\r\n  type: 'Xnor',\r\n  name: 'Xnor',\r\n  description: 'Logic \"not exclusive or\" gate',\r\n  group: 'Logic gates',\r\n  configurations: [\r\n    {\r\n      name: 'INPUT_PORTS_NUMBER',\r\n      type: 'number',\r\n      default: 2,\r\n      label: 'Number of input ports',\r\n      min: 2,\r\n      max: 16,\r\n      validate(value) {\r\n        if (value < this.min)\r\n          return `Minimum input ports is ${this.min}`;\r\n        if (value > this.max)\r\n          return `Maximum input ports is ${this.max}`;\r\n        return null;\r\n      },\r\n    },\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data bits',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'MULTIPLE_INPUT_BEHAVIOR',\r\n      type: 'select',\r\n      default: 'ONE',\r\n      label: 'Multiple input behavior',\r\n      options: [\r\n        {\r\n          label: 'Detect when only one input is on',\r\n          value: 'ONE',\r\n        },\r\n        {\r\n          label: 'Detect when an even number of inputs are on',\r\n          value: 'EVEN',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import React, { Fragment } from 'react';\r\n\r\nimport { Port } from '@logossim/core';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { PortExtension, distributePorts } from '../portExtendUtils';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 90px;\r\n  height: 90px;\r\n\r\n  transition: 100ms linear;\r\n  svg {\r\n    fill: ${props =>\r\n      props.selected\r\n        ? 'var(--body-selected)'\r\n        : 'var(--body-unselected)'};\r\n    stroke: ${props =>\r\n      props.selected\r\n        ? 'var(--border-selected)'\r\n        : 'var(--border-unselected)'};\r\n  }\r\n`;\r\n\r\nconst PortExtensionConnector = styled.div`\r\n  position: absolute;\r\n  z-index: -1;\r\n\r\n  background: ${props =>\r\n    props.selected\r\n      ? 'var(--border-selected)'\r\n      : 'var(--border-unselected)'};\r\n\r\n  height: 2px;\r\n  width: 15px;\r\n\r\n  top: ${props => props.position * 15 - 1}px;\r\n  left: -2px;\r\n`;\r\n\r\nconst PositionedPort = styled(Port)`\r\n  position: absolute;\r\n\r\n  ${props => {\r\n    if (props.name === 'out') return '';\r\n    return `top: ${props.position * 15 - 5}px;`;\r\n  }}\r\n\r\n  ${props => {\r\n    if (props.name === 'out') return 'right: -5px';\r\n    return 'left: -5px';\r\n  }};\r\n`;\r\n\r\nexport const Shape = ({ size = 90, portPositions = [] }) => (\r\n  <svg\r\n    height={size}\r\n    width={size}\r\n    viewBox=\"0 0 23.812499 23.812501\"\r\n    fill=\"var(--body-unselected)\"\r\n    stroke=\"var(--border-unselected)\"\r\n    strokeWidth=\"var(--border-width)\"\r\n  >\r\n    <g>\r\n      <path\r\n        fill=\"none\"\r\n        style={{\r\n          transform:\r\n            'scale(0.284583, 0.284583) translate(-1px, -3px)',\r\n        }}\r\n        d=\"m 11.926664,1.1161165 c 5.50133,9.5176855 9.663162,25.9796645 9.66318,42.6065395 m 0,0 c 1.62e-4,18.330222 -4.950245,36.216284 -11.386335,45.249616\"\r\n      />\r\n      <g transform=\"translate(1.8657598)\">\r\n        <path\r\n          d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 37.875 c 23.748245,0 43.005576,-42.349157 43,-43 -0.0058,-0.677686 -19.251755,-43 -43,-43 h -0.271484 z\"\r\n          transform=\"scale(0.26458333)\"\r\n        />\r\n      </g>\r\n    </g>\r\n    <g strokeWidth={0.5}>\r\n      {portPositions.includes(1) && (\r\n        <path d=\"M 4.8860442,4.1010415 H 0.38245295\" />\r\n      )}\r\n      {portPositions.includes(2) && (\r\n        <path d=\"M 5.3419835,8.0697915 H 0.38232292\" />\r\n      )}\r\n      {portPositions.includes(3) && (\r\n        <path d=\"M 5.5975927,12.038541 H 0.38232292\" />\r\n      )}\r\n      {portPositions.includes(4) && (\r\n        <path d=\"M 5.2516863,16.007291 H 0.38232292\" />\r\n      )}\r\n      {portPositions.includes(5) && (\r\n        <path d=\"M 4.3916654,19.976041 H 0.38232292\" />\r\n      )}\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nconst XorWidget = props => {\r\n  const { model } = props;\r\n\r\n  const inputPorts = Object.values(model.getInputPorts());\r\n  const portPositions = distributePorts(inputPorts.length);\r\n\r\n  return (\r\n    <Wrapper selected={model.options.selected}>\r\n      <PortExtension\r\n        selected={model.isSelected()}\r\n        portPositions={portPositions}\r\n        offsetX={12}\r\n      />\r\n      {inputPorts.map((port, i) => (\r\n        <Fragment key={port.getName()}>\r\n          <PositionedPort\r\n            name={port.getName()}\r\n            position={portPositions[i]}\r\n          />\r\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\r\n            <PortExtensionConnector\r\n              selected={model.isSelected()}\r\n              position={portPositions[i]}\r\n            />\r\n          )}\r\n        </Fragment>\r\n      ))}\r\n      <PositionedPort name=\"out\" />\r\n      <Shape portPositions={portPositions} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default XorWidget;\r\n","import React from 'react';\r\n\r\nimport { Shape } from './XorWidget';\r\n\r\nconst XorIcon = () => <Shape size={30} />;\r\n\r\nexport default XorIcon;\r\n","import { BaseModel } from '@logossim/core';\r\n\r\nexport default class XorModel extends BaseModel {\r\n  initialize(configurations) {\r\n    this.behavior = configurations.MULTIPLE_INPUT_BEHAVIOR;\r\n    this.dataBits = Number(configurations.DATA_BITS);\r\n\r\n    const INPUT_PORTS_NUMBER = Number(\r\n      configurations.INPUT_PORTS_NUMBER,\r\n    );\r\n\r\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\r\n      this.addInputPort(`in${i}`, { bits: this.dataBits });\r\n    }\r\n    this.addOutputPort('out', { bits: this.dataBits });\r\n  }\r\n\r\n  executeBit(bits) {\r\n    if (bits.some(bit => bit === 'x' || bit === 'e')) return 'e';\r\n    if (this.behavior === 'ONE') return this.executeOne(bits);\r\n    if (this.behavior === 'ODD') return this.executeOdd(bits);\r\n    return {};\r\n  }\r\n\r\n  executeOne(bits) {\r\n    return bits.filter(bit => bit === 1).length === 1 ? 1 : 0;\r\n  }\r\n\r\n  executeOdd(bits) {\r\n    return bits.filter(bit => bit === 1).length % 2 ? 1 : 0;\r\n  }\r\n\r\n  step(input) {\r\n    return {\r\n      out: Object.values(input)\r\n        .map(value => value.asArray(this.dataBits))\r\n        .transpose()\r\n        .map(this.executeBit.bind(this)),\r\n    };\r\n  }\r\n\r\n  stepFloating(input) {\r\n    return this.step(input);\r\n  }\r\n}\r\n","import { Component } from '@logossim/core';\r\n\r\nimport icon from './XorIcon';\r\nimport model from './XorModel';\r\nimport widget from './XorWidget';\r\n\r\nexport default new Component({\r\n  type: 'Xor',\r\n  name: 'Xor',\r\n  description: 'Logic \"exclusive or\" gate',\r\n  group: 'Logic gates',\r\n  configurations: [\r\n    {\r\n      name: 'INPUT_PORTS_NUMBER',\r\n      type: 'number',\r\n      default: 2,\r\n      label: 'Number of input ports',\r\n      min: 2,\r\n      max: 16,\r\n      validate(value) {\r\n        if (value < this.min)\r\n          return `Minimum input ports is ${this.min}`;\r\n        if (value > this.max)\r\n          return `Maximum input ports is ${this.max}`;\r\n        return null;\r\n      },\r\n    },\r\n    {\r\n      name: 'DATA_BITS',\r\n      type: 'select',\r\n      default: '1',\r\n      label: 'Data bits',\r\n      options: [\r\n        {\r\n          label: '1 bit',\r\n          value: '1',\r\n        },\r\n        {\r\n          label: '2 bits',\r\n          value: '2',\r\n        },\r\n        {\r\n          label: '4 bits',\r\n          value: '4',\r\n        },\r\n        {\r\n          label: '8 bits',\r\n          value: '8',\r\n        },\r\n        {\r\n          label: '16 bits',\r\n          value: '16',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'MULTIPLE_INPUT_BEHAVIOR',\r\n      type: 'select',\r\n      default: 'ONE',\r\n      label: 'Multiple input behavior',\r\n      options: [\r\n        {\r\n          label: 'Detect when only one input is on',\r\n          value: 'ONE',\r\n        },\r\n        {\r\n          label: 'Detect when an odd number of inputs are on',\r\n          value: 'ODD',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  model,\r\n  widget,\r\n  icon,\r\n});\r\n","import And from './And/AndRegister';\r\nimport Buffer from './Buffer/BufferRegister';\r\nimport Button from './Button/ButtonRegister';\r\nimport Buzzer from './Buzzer/BuzzerRegister';\r\nimport Clock from './Clock/ClockRegister';\r\nimport ControlledBuffer from './ControlledBuffer/ControlledBufferRegister';\r\nimport ControlledInverter from './ControlledInverter/ControlledInverterRegister';\r\nimport Counter from './Counter/CounterRegister';\r\nimport Demux from './Demux/DemuxRegister';\r\nimport Ground from './Ground/GroundRegister';\r\nimport Input from './Input/InputRegister';\r\nimport Joiner from './Joiner/JoinerRegister';\r\nimport Led from './Led/LedRegister';\r\nimport Mux from './Mux/MuxRegister';\r\nimport Nand from './Nand/NandRegister';\r\nimport Nor from './Nor/NorRegister';\r\nimport Not from './Not/NotRegister';\r\nimport Or from './Or/OrRegister';\r\nimport Output from './Output/OutputRegister';\r\nimport Power from './Power/PowerRegister';\r\nimport Ram from './Ram/RamRegister';\r\nimport Rom from './Rom/RomRegister';\r\nimport Splitter from './Splitter/SplitterRegister';\r\nimport Ssd from './Ssd/SsdRegister';\r\nimport Switch from './Switch/SwitchRegister';\r\nimport Xnor from './Xnor/XnorRegister';\r\nimport Xor from './Xor/XorRegister';\r\n\r\nconst components = [\r\n  Input,\r\n  Output,\r\n  Button,\r\n  Switch,\r\n  Clock,\r\n  Led,\r\n  Ssd,\r\n  Buzzer,\r\n  And,\r\n  Nand,\r\n  Or,\r\n  Nor,\r\n  Xor,\r\n  Xnor,\r\n  Buffer,\r\n  Not,\r\n  ControlledBuffer,\r\n  ControlledInverter,\r\n  Splitter,\r\n  Joiner,\r\n  Power,\r\n  Ground,\r\n  Mux,\r\n  Demux,\r\n  Ram,\r\n  Rom,\r\n  Counter,\r\n];\r\n\r\nexport default components;\r\n\r\nexport const groupedComponents = components.reduce(\r\n  (acc, component) => {\r\n    const group = acc.find(g => g.name === component.group);\r\n\r\n    if (group) group.components.push(component);\r\n    else acc.push({ name: component.group, components: [component] });\r\n\r\n    return acc;\r\n  },\r\n  [],\r\n);\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n\r\n  z-index: 2;\r\n`;\r\n\r\nconst Button = styled.button.attrs(({ ...props }) => ({\r\n  ...props,\r\n  type: 'button',\r\n}))`\r\n  border: none;\r\n  border-radius: 100%;\r\n\r\n  background: orange;\r\n  box-shadow: inset 0 0 10px #ff8d00;\r\n\r\n  width: 60px;\r\n  height: 60px;\r\n  margin: 16px;\r\n\r\n  font-size: 2em;\r\n  line-height: 1em;\r\n  color: white;\r\n\r\n  transition: 0.5s ease-in-out;\r\n\r\n  &:disabled {\r\n    opacity: 10%;\r\n    cursor: not-allowed;\r\n    background: gray;\r\n    box-shadow: inset 0 0 10px black;\r\n  }\r\n`;\r\n\r\nconst ComponentSelectButton = ({ handleClick, disabled }) => (\r\n  <Container id=\"component-select-button\">\r\n    <Button\r\n      onClick={handleClick}\r\n      disabled={disabled}\r\n      data-for=\"tooltip\"\r\n      data-tip=\"Add component...\"\r\n      data-place=\"left\"\r\n    >\r\n      +\r\n    </Button>\r\n  </Container>\r\n);\r\n\r\nexport default ComponentSelectButton;\r\n","import React from 'react';\r\n\r\nconst ArrowLeft = ({ size = 16, color = 'gray' }) => (\r\n  <svg\r\n    width={size}\r\n    height={size}\r\n    fill={color}\r\n    viewBox=\"100 100 300 300\"\r\n  >\r\n    <polygon points=\"352,128.4 319.7,96 160,256 160,256 160,256 319.7,416 352,383.6 224.7,256 \" />\r\n  </svg>\r\n);\r\n\r\nexport default ArrowLeft;\r\n","import React from 'react';\r\n\r\nconst Chevron = ({ size = 16, color = 'gray' }) => (\r\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 48 48\">\r\n    <polygon points=\"5,30.9 8.1,34 24,18.1 39.9,34 43,30.9 24,12\" />\r\n  </svg>\r\n);\r\n\r\nexport default Chevron;\r\n","import React from 'react';\r\n\r\nconst Chevrons = ({ size = 16, color = 'gray' }) => (\r\n  <svg\r\n    width={size}\r\n    height={size}\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke={color}\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n  >\r\n    <polyline points=\"17 11 12 6 7 11\" />\r\n    <polyline points=\"17 18 12 13 7 18\" />\r\n  </svg>\r\n);\r\n\r\nexport default Chevrons;\r\n","import React from 'react';\r\n\r\nconst Close = ({ size = 16, color = 'gray' }) => (\r\n  <svg\r\n    width={size}\r\n    height={size}\r\n    fill={color}\r\n    viewBox=\"0 0 60.963 60.842\"\r\n  >\r\n    <path d=\"M59.595,52.861L37.094,30.359L59.473,7.98c1.825-1.826,1.825-4.786,0-6.611  c-1.826-1.825-4.785-1.825-6.611,0L30.483,23.748L8.105,1.369c-1.826-1.825-4.785-1.825-6.611,0c-1.826,1.826-1.826,4.786,0,6.611  l22.378,22.379L1.369,52.861c-1.826,1.826-1.826,4.785,0,6.611c0.913,0.913,2.109,1.369,3.306,1.369s2.393-0.456,3.306-1.369  l22.502-22.502l22.501,22.502c0.913,0.913,2.109,1.369,3.306,1.369s2.393-0.456,3.306-1.369  C61.42,57.647,61.42,54.687,59.595,52.861z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Close;\r\n","import React from 'react';\r\n\r\nconst Copy = ({ size = 16, color = 'gray' }) => (\r\n  <svg\r\n    width={size}\r\n    height={size}\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke={color}\r\n    strokeWidth=\"2\"\r\n  >\r\n    <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\" />\r\n    <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\" />\r\n  </svg>\r\n);\r\n\r\nexport default Copy;\r\n","import React from 'react';\r\n\r\nconst Cut = ({ size = 16, color = 'gray' }) => (\r\n  <svg\r\n    width={size}\r\n    height={size}\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke={color}\r\n    strokeWidth=\"2\"\r\n  >\r\n    <circle cx=\"6\" cy=\"6\" r=\"3\" />\r\n    <circle cx=\"6\" cy=\"18\" r=\"3\" />\r\n    <line x1=\"20\" y1=\"4\" x2=\"8.12\" y2=\"15.88\" />\r\n    <line x1=\"14.47\" y1=\"14.48\" x2=\"20\" y2=\"20\" />\r\n    <line x1=\"8.12\" y1=\"8.12\" x2=\"12\" y2=\"12\" />\r\n  </svg>\r\n);\r\n\r\nexport default Cut;\r\n","import React from 'react';\r\n\r\nconst Delete = ({ size = 16, color = 'gray' }) => (\r\n  <svg\r\n    width={size}\r\n    height={size}\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke={color}\r\n    strokeWidth=\"2\"\r\n  >\r\n    <polyline points=\"3 6 5 6 21 6\" />\r\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" />\r\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />\r\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />\r\n  </svg>\r\n);\r\n\r\nexport default Delete;\r\n","import React from 'react';\r\n\r\nconst Duplicate = ({ size = 16, color = 'gray' }) => (\r\n  <svg\r\n    width={size}\r\n    height={(size * 18) / 24}\r\n    viewBox=\"0 0 24 18\"\r\n    fill=\"none\"\r\n    stroke=\"none\"\r\n    strokeWidth=\"2\"\r\n  >\r\n    <g transform=\"translate(-678.000000, -2727.000000)\">\r\n      <g transform=\"translate(100.000000, 2626.000000)\">\r\n        <g transform=\"translate(578.000000, 98.000000)\">\r\n          <g transform=\"translate(0.000000, 0.000000)\">\r\n            <polygon points=\"0 0 24 0 24 24 0 24\" />\r\n            <path\r\n              d=\"M15,8 C14.45,8 14,8.45 14,9 L14,11 L12,11 C11.45,11 11,11.45 11,12 C11,12.55 11.45,13 12,13 L14,13 L14,15 C14,15.55 14.45,16 15,16 C15.55,16 16,15.55 16,15 L16,13 L18,13 C18.55,13 19,12.55 19,12 C19,11.45 18.55,11 18,11 L16,11 L16,9 C16,8.45 15.55,8 15,8 Z M2,12 C2,9.42 3.4,7.17 5.48,5.96 C5.8,5.77 6.01,5.45 6.01,5.08 C6.01,4.31 5.17,3.83 4.5,4.22 C1.82,5.78 0,8.68 0,12 C0,15.32 1.82,18.22 4.5,19.78 C5.17,20.17 6.01,19.69 6.01,18.92 C6.01,18.55 5.8,18.23 5.48,18.04 C3.4,16.83 2,14.58 2,12 Z M15,3 C10.04,3 6,7.04 6,12 C6,16.96 10.04,21 15,21 C19.96,21 24,16.96 24,12 C24,7.04 19.96,3 15,3 Z M15,19 C11.14,19 8,15.86 8,12 C8,8.14 11.14,5 15,5 C18.86,5 22,8.14 22,12 C22,15.86 18.86,19 15,19 Z\"\r\n              fill={color}\r\n            />\r\n          </g>\r\n        </g>\r\n      </g>\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport default Duplicate;\r\n","import React from 'react';\r\n\r\nconst Edit = ({ size = 16, color = 'gray' }) => (\r\n  <svg\r\n    width={size}\r\n    height={size}\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke={color}\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n  >\r\n    <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" />\r\n    <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Edit;\r\n","import React from 'react';\r\n\r\nconst Paste = ({ size = 16, color = 'gray' }) => (\r\n  <svg\r\n    width={size}\r\n    height={size}\r\n    fill={color}\r\n    viewBox=\"0 0 512.001 512.001\"\r\n  >\r\n    <g>\r\n      <g>\r\n        <g>\r\n          <path\r\n            d=\"M481,371c11.046,0,20-8.954,20-20v-92c0-33.084-26.916-60-60-60h-39v-79c0-44.112-35.888-80-80-80h-47.533\r\n\t\t\t\tc-7.739-23.749-29.864-40-55.16-40h-25.614c-25.296,0-47.421,16.251-55.16,40H91c-44.112,0-80,35.888-80,80v312\r\n\t\t\t\tc0,44.112,35.888,80,80,80h88c11.046,0,20-8.954,20-20c0-11.046-8.954-20-20-20H91c-22.056,0-40-17.944-40-40V120\r\n\t\t\t\tc0-22.056,17.944-40,40-40h2v59c0,11.046,8.954,20,20,20h189c11.046,0,20-8.954,20-20V80c22.056,0,40,17.944,40,40v79h-65.007\r\n\t\t\t\tC263.914,199,237,225.913,237,258.993v193.015c0,33.08,26.916,59.993,60.01,59.993L441,511.926c33.084,0,60-26.913,60-59.992\r\n\t\t\t\tc0-11.046-8.954-20-20-20c-11.046,0-20,8.954-20,20c0,11.024-8.972,19.992-20.01,19.992L297,472c-11.028,0-20-8.969-20-19.993\r\n\t\t\t\tV258.993c0-11.024,8.969-19.993,19.993-19.993H441c11.028,0,20,8.972,20,20v92C461,362.046,469.955,371,481,371z M282,119H133V80\r\n\t\t\t\th21c9.177,0,17.177-6.246,19.403-15.149l2.798-11.194C178.211,45.616,185.404,40,193.693,40h25.614\r\n\t\t\t\tc8.289,0,15.481,5.616,17.492,13.657l2.798,11.194C241.823,73.754,249.823,80,259,80h23V119z\"\r\n          />\r\n          <path\r\n            d=\"M401,279h-64c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h64c11.046,0,20-8.954,20-20\r\n\t\t\t\tC421,287.954,412.047,279,401,279z\"\r\n          />\r\n          <path\r\n            d=\"M401,349h-64c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h64c11.046,0,20-8.954,20-20\r\n\t\t\t\tC421,357.954,412.047,349,401,349z\"\r\n          />\r\n        </g>\r\n      </g>\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport default Paste;\r\n","import React from 'react';\r\n\r\nconst Pause = ({ size = 16, color = '#ffb100' }) => (\r\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 512 512\">\r\n    <path d=\"M395,512a73.14,73.14,0,0,1-73.14-73.14V73.14a73.14,73.14,0,1,1,146.29,0V438.86A73.14,73.14,0,0,1,395,512Z\" />\r\n    <path d=\"M117,512a73.14,73.14,0,0,1-73.14-73.14V73.14a73.14,73.14,0,1,1,146.29,0V438.86A73.14,73.14,0,0,1,117,512Z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Pause;\r\n","import React from 'react';\r\n\r\nconst Play = ({ size = 16, color = '#008000' }) => (\r\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 512 512\">\r\n    <path d=\"M60.54,512c-17.06,0-30.43-13.86-30.43-31.56V31.55C30.12,13.86,43.48,0,60.55,0A32.94,32.94,0,0,1,77,4.52L465.7,229c10.13,5.85,16.18,16,16.18,27s-6,21.2-16.18,27L77,507.48A32.92,32.92,0,0,1,60.55,512Z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Play;\r\n","import React from 'react';\r\n\r\nconst Redo = ({ size = 16, color = 'gray' }) => (\r\n  <svg width={size} height={size} viewBox=\"0 0 512 512\" fill={color}>\r\n    <path d=\"m431 481c0 11.046-8.954 20-20 20h-66c-11.046 0-20-8.954-20-20s8.954-20 20-20h66c11.046 0 20 8.954 20 20zm63.358-352.994-112.284-111.215c-7.848-7.773-20.511-7.713-28.284.135s-7.712 20.511.135 28.284l106.808 105.79h-285.733c-96.495 0-175 78.505-175 175s78.505 175 175 175h69c11.046 0 20-8.954 20-20s-8.954-20-20-20h-69c-74.439 0-135-60.561-135-135s60.561-135 135-135h284.836l-105.037 105.917c-7.778 7.843-7.725 20.506.118 28.284 3.9 3.868 8.992 5.799 14.083 5.799 5.146 0 10.292-1.975 14.202-5.917l111.225-112.157c11.332-11.332 17.573-26.4 17.573-42.426s-6.241-31.094-17.642-42.494z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Redo;\r\n","import React from 'react';\r\n\r\nconst Settings = ({ size = 16, color = 'gray' }) => (\r\n  <svg\r\n    width={size}\r\n    height={size}\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke={color}\r\n    strokeWidth=\"2\"\r\n  >\r\n    <circle cx=\"12\" cy=\"12\" r=\"3\" />\r\n    <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\n\r\nconst Stop = ({ size = 16, color = '#c53838' }) => (\r\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 512 512\">\r\n    <path d=\"M 65.249771,0 A 65.248738,65.376306 0 0 0 0.413662,58.057582 h -0.18732 v 1.884685 A 65.248738,65.376306 0 0 0 0,65.377342 65.248738,65.376306 0 0 0 0.226342,70.796781 V 441.18757 A 65.248738,65.376306 0 0 0 0,446.62268 a 65.248738,65.376306 0 0 0 0.226342,5.41161 v 2.88566 H 0.530738 A 65.248738,65.376306 0 0 0 65.249771,512 a 65.248738,65.376306 0 0 0 2.44297,-0.0468 H 444.31507 a 65.248738,65.376306 0 0 0 2.43514,0.0468 65.248738,65.376306 0 0 0 2.44297,-0.0468 h 0.56977 v -0.024 a 65.248738,65.376306 0 0 0 61.70628,-57.00966 h 0.0312 v -0.22662 a 65.248738,65.376306 0 0 0 0.49952,-8.07049 65.248738,65.376306 0 0 0 -0.49952,-8.01579 V 67.011775 a 65.248738,65.376306 0 0 0 0.0234,-1.634433 65.248738,65.376306 0 0 0 -0.0234,-1.681351 v -5.638409 h -0.38247 A 65.248738,65.376306 0 0 0 456.2645,0.77420532 V 0 H 446.40678 446.2741 65.374651 Z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Stop;\r\n","import React from 'react';\r\n\r\nconst Undo = ({ size = 16, color = 'gray' }) => (\r\n  <svg width={size} height={size} viewBox=\"0 0 512 512\" fill={color}>\r\n    <path d=\"m 81,481 c 0,11.046 8.954,20 20,20 h 66 c 11.046,0 20,-8.954 20,-20 0,-11.046 -8.954,-20 -20,-20 h -66 c -11.046,0 -20,8.954 -20,20 z M 17.642,128.006 129.926,16.791 c 7.848,-7.773 20.511,-7.713 28.284,0.135 7.773,7.848 7.712,20.511 -0.135,28.284 L 51.267,151 H 337 c 96.495,0 175,78.505 175,175 0,96.495 -78.505,175 -175,175 h -69 c -11.046,0 -20,-8.954 -20,-20 0,-11.046 8.954,-20 20,-20 h 69 c 74.439,0 135,-60.561 135,-135 0,-74.439 -60.561,-135 -135,-135 H 52.164 l 105.037,105.917 c 7.778,7.843 7.725,20.506 -0.118,28.284 -3.9,3.868 -8.992,5.799 -14.083,5.799 -5.146,0 -10.292,-1.975 -14.202,-5.917 L 17.573,212.926 C 6.241,201.594 0,186.526 0,170.5 0,154.474 6.241,139.406 17.642,128.006 Z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Undo;\r\n","import React from 'react';\r\n\r\nconst ZoomIn = ({ size = 16, color = 'gray' }) => (\r\n  <svg\r\n    width={size}\r\n    height={size}\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke={color}\r\n    strokeWidth=\"2\"\r\n  >\r\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\r\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\r\n    <line x1=\"11\" y1=\"8\" x2=\"11\" y2=\"14\" />\r\n    <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\r\n  </svg>\r\n);\r\n\r\nexport default ZoomIn;\r\n","import React from 'react';\r\n\r\nconst ZoomOut = ({ size = 16, color = 'gray' }) => (\r\n  <svg\r\n    width={size}\r\n    height={size}\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke={color}\r\n    strokeWidth=\"2\"\r\n  >\r\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\r\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\r\n    <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\r\n  </svg>\r\n);\r\n\r\nexport default ZoomOut;\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { Play, Pause, Stop } from '../Icons';\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  bottom: 16px;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n\r\n  background: rgb(224, 224, 224);\r\n  background: linear-gradient(\r\n    0deg,\r\n    rgba(224, 224, 224, 1) 0%,\r\n    rgba(255, 255, 255, 1) 100%\r\n  );\r\n\r\n  border: 1px solid gray;\r\n  border-radius: 16px;\r\n\r\n  z-index: 2;\r\n\r\n  & > button {\r\n    border-right: 1px solid gray;\r\n    &:last-child {\r\n      border-right: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Button = styled.button.attrs(({ ...props }) => ({\r\n  ...props,\r\n  type: 'button',\r\n}))`\r\n  background: none;\r\n  border: none;\r\n\r\n  font-size: 1.2em;\r\n\r\n  min-width: 75px;\r\n  min-height: 60px;\r\n\r\n  &:disabled {\r\n    & > svg {\r\n      fill: #bfbfbf;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SimulationControlButtons = ({\r\n  state,\r\n  handleClickStart,\r\n  handleClickPause,\r\n  handleClickStop,\r\n}) => (\r\n  <Container id=\"simulation-control-buttons\">\r\n    <Button\r\n      onClick={handleClickStart}\r\n      disabled={state === 'started'}\r\n      data-for=\"tooltip\"\r\n      data-tip=\"Start simulation\"\r\n    >\r\n      <Play />\r\n    </Button>\r\n    <Button\r\n      onClick={handleClickPause}\r\n      disabled={state === 'paused' || state === 'stopped'}\r\n      data-for=\"tooltip\"\r\n      data-tip=\"Pause simulation\"\r\n    >\r\n      <Pause />\r\n    </Button>\r\n    <Button\r\n      onClick={handleClickStop}\r\n      disabled={state === 'stopped'}\r\n      data-for=\"tooltip\"\r\n      data-tip=\"Stop simulation\"\r\n    >\r\n      <Stop />\r\n    </Button>\r\n  </Container>\r\n);\r\n\r\nexport default SimulationControlButtons;\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Overlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  z-index: 3;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  background: rgba(0, 0, 0, 0.75);\r\n`;\r\n\r\nconst Window = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  width: 60vw;\r\n  height: 80vh;\r\n\r\n  max-width: 600px;\r\n  max-height: 800px;\r\n\r\n  background: white;\r\n\r\n  border: 1px solid black;\r\n  border-radius: 25px;\r\n\r\n  padding: 16px;\r\n\r\n  z-index: 4;\r\n`;\r\n\r\nconst Modal = ({ children }) => (\r\n  <Overlay>\r\n    <Window>{children}</Window>\r\n  </Overlay>\r\n);\r\n\r\nexport default Modal;\r\n","import styled from 'styled-components';\r\n\r\nexport const Header = styled.div`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-content: space-between;\r\n\r\n  height: 50px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  flex-grow: 1;\r\n  font-size: 1.5em;\r\n\r\n  margin: 0;\r\n\r\n  align-self: center;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Subtitle = styled.h2`\r\n  flex-grow: 1;\r\n  font-size: 1.2em;\r\n\r\n  margin: 0;\r\n\r\n  align-self: center;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  margin-top: 32px;\r\n  flex: 1;\r\n`;\r\n\r\nexport const IconButton = styled.button`\r\n  position: absolute;\r\n\r\n  flex-shrink: 0;\r\n\r\n  border: 1px solid gray;\r\n  border-radius: 25px;\r\n  width: 50px;\r\n  height: 50px;\r\n\r\n  ${props => {\r\n    if (props.left) return 'left: 0;';\r\n    return 'right: 0;';\r\n  }}\r\n\r\n  background: none;\r\n\r\n  :hover {\r\n    background: rgba(0, 0, 0, 0.05);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 16px;\r\n\r\n  label {\r\n    font-size: 0.8em;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    color: ${props => (props.error ? '#710606' : 'inherit')};\r\n\r\n    background: #eee;\r\n    border: 1px solid ${props => (props.error ? '#c80a0a' : 'gray')};\r\n    border-radius: 8px;\r\n\r\n    position: relative;\r\n    top: 0.8em;\r\n\r\n    width: max-content;\r\n    margin-left: 15px;\r\n    padding: 0 8px;\r\n  }\r\n\r\n  select,\r\n  input {\r\n    background: white;\r\n    border: 1px solid ${props => (props.error ? '#c80a0a' : 'gray')};\r\n    border-radius: 25px;\r\n\r\n    font-size: 1.2em;\r\n\r\n    padding: 10px 0 5px 16px;\r\n  }\r\n\r\n  input[type='file'] {\r\n    font-size: 1em;\r\n    margin-top: 2px;\r\n  }\r\n`;\r\n\r\nconst Input = ({\r\n  // Formik\r\n  form,\r\n  field,\r\n  // General\r\n  name,\r\n  label,\r\n  componentType,\r\n  type,\r\n  innerRef,\r\n  // Select\r\n  options = [],\r\n  // Number\r\n  step,\r\n  min,\r\n  max,\r\n}) => {\r\n  const handleBinaryLoad = event => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n\r\n    if (files.length !== 1) return;\r\n\r\n    const handleError = () =>\r\n      this.showSnackbar(\r\n        `Error loading binary file:\\n${files[0].name}`,\r\n      );\r\n\r\n    const fr = new FileReader();\r\n    fr.onerror = handleError;\r\n    fr.onload = e => {\r\n      try {\r\n        const file = e.target.result;\r\n        form.setFieldValue(field.name, file);\r\n      } catch (exception) {\r\n        handleError();\r\n      }\r\n    };\r\n    fr.readAsText(files.item(0));\r\n  };\r\n\r\n  switch (type) {\r\n    case 'select':\r\n      return (\r\n        <>\r\n          <label htmlFor={name}>{label}</label>\r\n          <select id={name} ref={innerRef} {...field}>\r\n            {options.map(option => (\r\n              <option value={option.value} key={option.value}>\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </>\r\n      );\r\n    case 'number':\r\n      return (\r\n        <>\r\n          <label htmlFor={name}>{label}</label>\r\n          <input\r\n            id={name}\r\n            ref={innerRef}\r\n            {...field}\r\n            step={step}\r\n            min={min}\r\n            max={max}\r\n            type=\"number\"\r\n          />\r\n        </>\r\n      );\r\n    case 'text':\r\n      return (\r\n        <>\r\n          <label htmlFor={name}>{label}</label>\r\n          <input id={name} ref={innerRef} {...field} type=\"text\" />\r\n        </>\r\n      );\r\n    case 'binary':\r\n      return (\r\n        <>\r\n          <label htmlFor={name}>{label}</label>\r\n          <input\r\n            id={name}\r\n            accept=\".lgbin\"\r\n            type=\"file\"\r\n            onChange={handleBinaryLoad}\r\n          />\r\n        </>\r\n      );\r\n    default:\r\n      throw new Error(\r\n        `[logossim] Invalid configuration type for ${componentType}: ${type}`,\r\n      );\r\n  }\r\n};\r\n\r\nconst ErrorMessage = styled.div`\r\n  font-size: 0.8em;\r\n  color: #c80a0a;\r\n\r\n  background: white;\r\n\r\n  position: relative;\r\n  bottom: 0.7em;\r\n\r\n  width: max-content;\r\n  padding: 0 8px;\r\n  margin: -15px auto auto auto;\r\n  transform: translateY(15px);\r\n`;\r\n\r\nconst ComponentConfigurationInput = props => {\r\n  const {\r\n    field: { name },\r\n    form: { errors },\r\n  } = props;\r\n\r\n  const error = errors[name];\r\n\r\n  return (\r\n    <Container error={error}>\r\n      <Input {...props} />\r\n      {error && <ErrorMessage>{error}</ErrorMessage>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ComponentConfigurationInput;\r\n","import React from 'react';\r\nimport Tooltip from 'react-tooltip';\r\n\r\nimport ComponentContext from '@logossim/core/ComponentContext';\r\nimport DiagramContext from '@logossim/core/Diagram/DiagramContext';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst diagramEngineStub = {\r\n  getEngine: () => ({\r\n    registerListener: () => {},\r\n    getCanvas: () => {},\r\n    getPortCoords: () => ({\r\n      getWidth: () => {},\r\n      getHeight: () => {},\r\n      getTopLeft: () => {},\r\n    }),\r\n    getModel: () => ({ isLocked: () => false }),\r\n  }),\r\n};\r\n\r\nconst getTooltip = (error, disabled) => {\r\n  if (disabled) return '';\r\n  if (error) return 'Check form errors';\r\n  return 'Drag me!';\r\n};\r\n\r\nconst ErrorWidget = styled.div`\r\n  border: 1px dashed var(--value-error);\r\n  border-radius: 5px;\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\n\r\nconst DraggableComponent = ({\r\n  component: { type, Widget, Model },\r\n  configurations,\r\n  handleClose,\r\n  error,\r\n  disabled,\r\n}) => {\r\n  const model = new Model(configurations, type);\r\n\r\n  return (\r\n    <div\r\n      draggable={!error && !disabled}\r\n      onDragStart={event => {\r\n        event.dataTransfer.setDragImage(\r\n          event.currentTarget.children[0],\r\n          0,\r\n          0,\r\n        );\r\n\r\n        event.dataTransfer.setData(\r\n          'component',\r\n          JSON.stringify({\r\n            type,\r\n            configurations,\r\n          }),\r\n        );\r\n\r\n        requestAnimationFrame(() => {\r\n          Tooltip.hide();\r\n          handleClose();\r\n        });\r\n      }}\r\n      data-for=\"tooltip\"\r\n      data-tip={getTooltip(error, disabled)}\r\n      data-place=\"bottom\"\r\n    >\r\n      {error ? (\r\n        <ErrorWidget />\r\n      ) : (\r\n        <DiagramContext.Provider value={diagramEngineStub}>\r\n          <ComponentContext.Provider value={model}>\r\n            <Widget model={model} />\r\n          </ComponentContext.Provider>\r\n        </DiagramContext.Provider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DraggableComponent;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport Tooltip from 'react-tooltip';\r\n\r\nimport { Formik, Form as BaseForm, Field } from 'formik';\r\nimport styled from 'styled-components';\r\n\r\nimport { ArrowLeft, Close } from '../Icons';\r\nimport {\r\n  Header,\r\n  Title,\r\n  Content,\r\n  IconButton,\r\n} from '../Modal/ModalContentLayout';\r\nimport ComponentConfigurationInput from './ComponentConfigurationInput';\r\nimport DraggableComponent from './DraggableComponent';\r\n\r\nconst DragArea = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  height: 200px;\r\n  margin-bottom: 32px;\r\n\r\n  box-shadow: ${props =>\r\n    `inset 0 0 20px rgba(${props.error ? 255 : 0}, 0, 0, 0.3)`};\r\n\r\n  background-image: ${props => `linear-gradient(\r\n      to right,\r\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.1) 1px,\r\n      transparent 1px,\r\n      transparent 15px,\r\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 15px,\r\n      transparent 16px,\r\n      transparent 30px,\r\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 30px,\r\n      transparent 31px\r\n    ),\r\n    linear-gradient(\r\n      to bottom,\r\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.1) 1px,\r\n      transparent 1px,\r\n      transparent 15px,\r\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 15px,\r\n      transparent 16px,\r\n      transparent 30px,\r\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 30px,\r\n      transparent 31px\r\n    )`};\r\n  background-size: 45px 45px;\r\n  border-radius: 25px;\r\n\r\n  overflow: hidden;\r\n`;\r\n\r\nconst FormScroll = styled.div`\r\n  max-height: calc(min(800px, 80vh) - 400px);\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst Form = styled(BaseForm)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  display: flex;\r\n  margin-top: auto;\r\n`;\r\n\r\nconst Hint = styled.span`\r\n  font-size: 0.8em;\r\n  font-style: italic;\r\n  align-self: center;\r\n  text-align: right;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst SubmitButton = styled.button.attrs(({ ...props }) => ({\r\n  ...props,\r\n  type: 'submit',\r\n}))`\r\n  border: none;\r\n  border-radius: 5px;\r\n  background: #07d26b;\r\n\r\n  color: white;\r\n  font-size: 1.2em;\r\n\r\n  width: 100%;\r\n  padding: 5px 20px;\r\n  margin: 5px;\r\n\r\n  :disabled {\r\n    background: #d22307;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst getInitialValues = component =>\r\n  Object.fromEntries(\r\n    component.configurations.map(configuration => [\r\n      configuration.name,\r\n      configuration.default,\r\n    ]),\r\n  );\r\n\r\nconst getFormSubmitLabel = (isValid, editMode) => {\r\n  if (!isValid) return 'Check form errors';\r\n  if (editMode) return 'Save component';\r\n  return 'Add to circuit';\r\n};\r\n\r\nconst ComponentConfiguration = ({\r\n  editMode,\r\n  component,\r\n  handleClose,\r\n  handleBack,\r\n  handleSubmit,\r\n}) => {\r\n  const firstInputRef = useRef();\r\n  const buttonRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (firstInputRef.current) {\r\n      firstInputRef.current.focus();\r\n    } else {\r\n      buttonRef.current.focus();\r\n    }\r\n  });\r\n\r\n  useEffect(Tooltip.rebuild);\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        {!editMode && (\r\n          <IconButton\r\n            left\r\n            onClick={handleBack}\r\n            data-for=\"tooltip\"\r\n            data-tip=\"Go back...\"\r\n            data-place=\"right\"\r\n          >\r\n            <ArrowLeft />\r\n          </IconButton>\r\n        )}\r\n        <Title>{editMode ? 'Edit' : 'Configure'} component</Title>\r\n        <IconButton\r\n          right\r\n          onClick={handleClose}\r\n          data-for=\"tooltip\"\r\n          data-tip=\"Close\"\r\n          data-place=\"left\"\r\n        >\r\n          <Close />\r\n        </IconButton>\r\n      </Header>\r\n\r\n      <Content>\r\n        <Formik\r\n          initialValues={getInitialValues(component)}\r\n          onSubmit={values => {\r\n            handleSubmit(null, {\r\n              type: component.type,\r\n              configurations: values,\r\n            });\r\n            handleClose();\r\n          }}\r\n        >\r\n          {({ values, isValid }) => (\r\n            <Form>\r\n              <DragArea error={!isValid}>\r\n                <DraggableComponent\r\n                  component={component}\r\n                  configurations={values}\r\n                  handleClose={handleClose}\r\n                  error={!isValid}\r\n                  disabled={editMode}\r\n                />\r\n              </DragArea>\r\n\r\n              <FormScroll autoComplete=\"off\">\r\n                {component.configurations.map(\r\n                  (configuration, index) => (\r\n                    <Field\r\n                      key={configuration.name}\r\n                      component={ComponentConfigurationInput}\r\n                      innerRef={index === 0 ? firstInputRef : null}\r\n                      {...configuration}\r\n                      validate={\r\n                        configuration.validate\r\n                          ? value =>\r\n                              configuration.validate(value, values)\r\n                          : null\r\n                      }\r\n                    />\r\n                  ),\r\n                )}\r\n              </FormScroll>\r\n\r\n              <Footer>\r\n                {!editMode && (\r\n                  <Hint>(hint: you can also drag the component)</Hint>\r\n                )}\r\n                <SubmitButton disabled={!isValid} ref={buttonRef}>\r\n                  {getFormSubmitLabel(isValid, editMode)}\r\n                </SubmitButton>\r\n              </Footer>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComponentConfiguration;\r\n","import React, { useEffect, useCallback } from 'react';\r\n\r\nimport Modal from '../Modal/Modal';\r\nimport ComponentConfiguration from './ComponentConfiguration';\r\n\r\nconst closeOnEsc = ({ code }, handleClose) => {\r\n  if (code !== 'Escape') return;\r\n  handleClose();\r\n};\r\n\r\nconst ComponentEdit = ({\r\n  isOpen,\r\n  components,\r\n  component,\r\n  handleClose,\r\n  handleComponentEdit,\r\n}) => {\r\n  const callback = useCallback(\r\n    event => closeOnEsc(event, handleClose),\r\n    [handleClose],\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', callback);\r\n    return () => window.removeEventListener('keydown', callback);\r\n  }, [callback]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const factory = components.find(\r\n    c => c.type === component.options.type,\r\n  );\r\n\r\n  const edit = {\r\n    ...factory,\r\n    configurations: factory.configurations.map(configuration => ({\r\n      ...configuration,\r\n      default: component.configurations[configuration.name],\r\n    })),\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <ComponentConfiguration\r\n        editMode\r\n        handleClose={handleClose}\r\n        handleSubmit={(event, { configurations }) =>\r\n          handleComponentEdit(component, configurations)\r\n        }\r\n        component={edit}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ComponentEdit;\r\n","import React, { useState } from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { Chevron } from '../Icons';\r\n\r\nconst Container = styled.div`\r\n  margin-bottom: 32px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-weight: bold;\r\n  font-size: 1.3em;\r\n`;\r\n\r\nconst HorizontalSeparator = styled.hr`\r\n  flex-grow: 1;\r\n  align-self: center;\r\n\r\n  margin: 16px;\r\n  border-top: 1px solid black;\r\n`;\r\n\r\nconst IconButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  width: 50px;\r\n\r\n  transform: ${props => (props.isOpen ? 'rotate(180deg)' : 'none')};\r\n`;\r\n\r\nconst ComponentsGrid = styled.div`\r\n  display: ${props => (props.isOpen ? 'grid' : 'none')};\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 8px;\r\n`;\r\n\r\nconst ComponentButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  padding: 8px;\r\n\r\n  background: rgba(0, 0, 0, 0.05);\r\n  border: 1px solid gray;\r\n  border-radius: 5px;\r\n\r\n  :hover {\r\n    background: rgba(0, 0, 0, 0.1);\r\n    border-style: dashed;\r\n  }\r\n`;\r\n\r\nconst ComponentTitle = styled.h2`\r\n  font-weight: normal;\r\n  font-size: 1.2em;\r\n`;\r\n\r\nconst ComponentIcon = styled.div`\r\n  margin-right: 16px;\r\n`;\r\n\r\nconst ComponentGroup = ({\r\n  name,\r\n  components,\r\n  handleComponentSelect,\r\n}) => {\r\n  const [isOpen, setOpen] = useState(true);\r\n\r\n  return (\r\n    <Container>\r\n      <Header onClick={() => setOpen(!isOpen)}>\r\n        <Title>{name}</Title>\r\n        <HorizontalSeparator />\r\n        <IconButton\r\n          left\r\n          isOpen={isOpen}\r\n          onClick={() => setOpen(!isOpen)}\r\n        >\r\n          <Chevron />\r\n        </IconButton>\r\n      </Header>\r\n      <ComponentsGrid isOpen={isOpen}>\r\n        {components.map(component => (\r\n          <ComponentButton\r\n            onClick={() => handleComponentSelect(component)}\r\n            key={component.name}\r\n            data-for=\"tooltip\"\r\n            data-tip={component.description}\r\n          >\r\n            <ComponentIcon>\r\n              <component.Icon />\r\n            </ComponentIcon>\r\n            <ComponentTitle>{component.name}</ComponentTitle>\r\n          </ComponentButton>\r\n        ))}\r\n      </ComponentsGrid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ComponentGroup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Tooltip from 'react-tooltip';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { Close } from '../Icons';\r\nimport {\r\n  Header,\r\n  Content,\r\n  IconButton,\r\n} from '../Modal/ModalContentLayout';\r\nimport ComponentGroup from './ComponentGroup';\r\n\r\nconst SearchBar = styled.input`\r\n  flex-grow: 1;\r\n\r\n  padding: 10px;\r\n  margin-right: 60px;\r\n  font-size: 1.5em;\r\n\r\n  border-radius: 25px;\r\n  border: 1px solid gray;\r\n\r\n  ::placeholder {\r\n    font-weight: 300;\r\n    color: #cfcfcf;\r\n  }\r\n`;\r\n\r\nconst Scroll = styled.div`\r\n  padding-right: 16px;\r\n  max-height: calc(min(800px, 80vh) - 130px);\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst ComponentSearch = ({\r\n  groups,\r\n  handleComponentSelect,\r\n  handleClose,\r\n}) => {\r\n  useEffect(Tooltip.rebuild);\r\n\r\n  const [filteredGroups, setFilteredGroups] = useState(groups);\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  const handleSearchChange = value => {\r\n    setSearchText(value);\r\n\r\n    if (!value) {\r\n      setFilteredGroups(groups);\r\n      return;\r\n    }\r\n\r\n    const like = new RegExp(`${value}.*`, 'i');\r\n\r\n    const newFilteredGroups = groups\r\n      .map(group => {\r\n        const hasAnyMatchingComponent = group.components.some(\r\n          component => component.name.match(like),\r\n        );\r\n\r\n        if (hasAnyMatchingComponent)\r\n          return {\r\n            ...group,\r\n            components: group.components.filter(component =>\r\n              component.name.match(like),\r\n            ),\r\n          };\r\n        return null;\r\n      })\r\n      .filter(group => group != null);\r\n\r\n    setFilteredGroups(newFilteredGroups);\r\n  };\r\n\r\n  const handleKeyDown = key => {\r\n    if (key === 'Escape') {\r\n      setSearchText('');\r\n      setFilteredGroups(groups);\r\n    }\r\n\r\n    if (\r\n      key === 'Enter' &&\r\n      searchText &&\r\n      filteredGroups.length > 0 &&\r\n      filteredGroups[0].components.length > 0\r\n    ) {\r\n      handleComponentSelect(filteredGroups[0].components[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <SearchBar\r\n          autoFocus\r\n          placeholder=\"Search components...\"\r\n          value={searchText}\r\n          onChange={({ target: { value } }) =>\r\n            handleSearchChange(value)\r\n          }\r\n          onKeyDown={({ key }) => handleKeyDown(key)}\r\n        />\r\n        <IconButton\r\n          right\r\n          onClick={handleClose}\r\n          data-for=\"tooltip\"\r\n          data-tip=\"Close\"\r\n          data-place=\"left\"\r\n        >\r\n          <Close />\r\n        </IconButton>\r\n      </Header>\r\n\r\n      <Content>\r\n        <Scroll>\r\n          {filteredGroups.map(({ name, components }) => (\r\n            <ComponentGroup\r\n              name={name}\r\n              components={components}\r\n              handleComponentSelect={handleComponentSelect}\r\n              key={name}\r\n            />\r\n          ))}\r\n        </Scroll>\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComponentSearch;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport Modal from '../Modal/Modal';\r\nimport ComponentConfiguration from './ComponentConfiguration';\r\nimport ComponentSearch from './ComponentSearch';\r\n\r\nconst closeOnEsc = (\r\n  { code },\r\n  { handleClose, setSelectedComponent },\r\n) => {\r\n  if (code !== 'Escape') return;\r\n  handleClose();\r\n  setSelectedComponent(null);\r\n};\r\n\r\nconst ComponentSelect = ({\r\n  isOpen,\r\n  groups,\r\n  handleClose,\r\n  handleComponentDrop,\r\n}) => {\r\n  const [selectedComponent, setSelectedComponent] = useState(null);\r\n  const callback = useCallback(\r\n    event => closeOnEsc(event, { handleClose, setSelectedComponent }),\r\n    [handleClose],\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', callback);\r\n    return () => window.removeEventListener('keydown', callback);\r\n  }, [callback]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <Modal>\r\n      {selectedComponent ? (\r\n        <ComponentConfiguration\r\n          handleClose={() => {\r\n            handleClose();\r\n            setSelectedComponent(null);\r\n          }}\r\n          handleSubmit={handleComponentDrop}\r\n          handleBack={() => setSelectedComponent(null)}\r\n          component={selectedComponent}\r\n        />\r\n      ) : (\r\n        <ComponentSearch\r\n          handleClose={handleClose}\r\n          handleComponentSelect={setSelectedComponent}\r\n          groups={groups}\r\n        />\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ComponentSelect;\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.span`\r\n  display: inline-flex;\r\n  align-items: center;\r\n\r\n  height: ${props => props.size}px;\r\n  padding: 0 ${props => props.size / 4}px;\r\n  margin: 2px ${props => props.size / 8}px;\r\n\r\n  font-size: ${props => props.size / 2}px;\r\n  font-family: monospace;\r\n  color: #000000c4;\r\n\r\n  background: #ececec;\r\n  border-radius: 4px;\r\n  border: 1px solid #ffffff17;\r\n  box-shadow: inset 0 0 ${props => props.size / 4}px #0000000a;\r\n`;\r\n\r\nconst Key = ({ children, size = 16 }) => (\r\n  <Container size={size}>{children}</Container>\r\n);\r\n\r\nexport default Key;\r\n","import styled from 'styled-components';\r\n\r\nconst ContextMenuIconContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-right: 16px;\r\n`;\r\n\r\nexport default ContextMenuIconContainer;\r\n","import styled from 'styled-components';\r\n\r\nconst ContextMenuShortcutContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: flex-end;\r\n  margin-left: 8px;\r\n`;\r\n\r\nexport default ContextMenuShortcutContainer;\r\n","import React from 'react';\r\nimport { Menu, Item, Separator } from 'react-contexify';\r\n\r\nimport {\r\n  Duplicate,\r\n  Copy,\r\n  Delete,\r\n  Paste,\r\n  Redo,\r\n  Settings,\r\n  Undo,\r\n  Cut,\r\n  ZoomIn,\r\n  ZoomOut,\r\n} from '../Icons';\r\nimport Key from '../Key/Key';\r\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\r\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\r\n\r\nconst ComponentContextMenu = ({\r\n  duplicateSelected,\r\n  cutSelected,\r\n  copySelected,\r\n  pasteSelected,\r\n  deleteSelected,\r\n  undo,\r\n  redo,\r\n  zoomIn,\r\n  zoomOut,\r\n  configureComponent,\r\n}) => (\r\n  <Menu id=\"component\">\r\n    <Item onClick={duplicateSelected}>\r\n      <ContextMenuIconContainer>\r\n        <Duplicate />\r\n      </ContextMenuIconContainer>\r\n      Duplicate\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>D</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={cutSelected}>\r\n      <ContextMenuIconContainer>\r\n        <Cut />\r\n      </ContextMenuIconContainer>\r\n      Cut\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>X</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={copySelected}>\r\n      <ContextMenuIconContainer>\r\n        <Copy />\r\n      </ContextMenuIconContainer>\r\n      Copy\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>C</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={pasteSelected}>\r\n      <ContextMenuIconContainer>\r\n        <Paste />\r\n      </ContextMenuIconContainer>\r\n      Paste\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>V</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={deleteSelected}>\r\n      <ContextMenuIconContainer>\r\n        <Delete />\r\n      </ContextMenuIconContainer>\r\n      Delete\r\n      <ContextMenuShortcutContainer>\r\n        <Key>Delete</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={zoomIn}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomIn />\r\n      </ContextMenuIconContainer>\r\n      Zoom in\r\n    </Item>\r\n\r\n    <Item onClick={zoomOut}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomOut />\r\n      </ContextMenuIconContainer>\r\n      Zoom out\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={undo}>\r\n      <ContextMenuIconContainer>\r\n        <Undo />\r\n      </ContextMenuIconContainer>\r\n      Undo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={redo}>\r\n      <ContextMenuIconContainer>\r\n        <Redo />\r\n      </ContextMenuIconContainer>\r\n      Redo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>SHIFT</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item\r\n      onClick={({ props }) =>\r\n        configureComponent(props.component)\r\n      }\r\n    >\r\n      <ContextMenuIconContainer>\r\n        <Settings />\r\n      </ContextMenuIconContainer>\r\n      Edit configurations...\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>E</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n  </Menu>\r\n);\r\n\r\nexport default ComponentContextMenu;\r\n","import React from 'react';\r\nimport { Menu, Item, Separator } from 'react-contexify';\r\n\r\nimport { Redo, Undo, Paste, ZoomIn, ZoomOut } from '../Icons';\r\nimport Key from '../Key/Key';\r\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\r\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\r\n\r\nconst DiagramContextMenu = ({\r\n  pasteSelected,\r\n  undo,\r\n  redo,\r\n  zoomIn,\r\n  zoomOut,\r\n}) => (\r\n  <Menu id=\"diagram\">\r\n    <Item onClick={pasteSelected}>\r\n      <ContextMenuIconContainer>\r\n        <Paste />\r\n      </ContextMenuIconContainer>\r\n      Paste\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>V</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={zoomIn}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomIn />\r\n      </ContextMenuIconContainer>\r\n      Zoom in\r\n    </Item>\r\n    <Item onClick={zoomOut}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomOut />\r\n      </ContextMenuIconContainer>\r\n      Zoom out\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={undo}>\r\n      <ContextMenuIconContainer>\r\n        <Undo />\r\n      </ContextMenuIconContainer>\r\n      Undo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={redo}>\r\n      <ContextMenuIconContainer>\r\n        <Redo />\r\n      </ContextMenuIconContainer>\r\n      Redo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>SHIFT</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n  </Menu>\r\n);\r\n\r\nexport default DiagramContextMenu;\r\n","import React from 'react';\r\n\r\nimport ComponentContextMenu from './ComponentContextMenu';\r\nimport DiagramContextMenu from './DiagramContextMenu';\r\n\r\nimport 'react-contexify/dist/ReactContexify.min.css';\r\n\r\nconst ContextMenus = ({\r\n  duplicateSelected,\r\n  cutSelected,\r\n  copySelected,\r\n  pasteSelected,\r\n  deleteSelected,\r\n  undo,\r\n  redo,\r\n  zoomIn,\r\n  zoomOut,\r\n  configureComponent,\r\n}) => (\r\n  <>\r\n    <DiagramContextMenu\r\n      pasteSelected={pasteSelected}\r\n      undo={undo}\r\n      redo={redo}\r\n      zoomIn={zoomIn}\r\n      zoomOut={zoomOut}\r\n    />\r\n    <ComponentContextMenu\r\n      duplicateSelected={duplicateSelected}\r\n      cutSelected={cutSelected}\r\n      copySelected={copySelected}\r\n      pasteSelected={pasteSelected}\r\n      deleteSelected={deleteSelected}\r\n      undo={undo}\r\n      redo={redo}\r\n      zoomIn={zoomIn}\r\n      zoomOut={zoomOut}\r\n      configureComponent={configureComponent}\r\n    />\r\n  </>\r\n);\r\n\r\nexport default ContextMenus;\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport GitHubButton from 'react-github-button';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { version } from '../../../package.json';\r\nimport { Close } from '../Icons';\r\nimport Modal from '../Modal/Modal';\r\nimport {\r\n  Header,\r\n  Title,\r\n  Content,\r\n  IconButton,\r\n} from '../Modal/ModalContentLayout';\r\n\r\nconst Version = styled.span`\r\n  font-weight: bold;\r\n  font-size: 1.1em;\r\n  margin-top: -32px;\r\n`;\r\n\r\nconst Divider = styled.hr`\r\n  width: 80%;\r\n  margin: 24px;\r\n  border-color: white;\r\n`;\r\n\r\nconst closeOnEsc = ({ code }, handleClose) => {\r\n  if (code !== 'Escape') return;\r\n  handleClose();\r\n};\r\n\r\nconst HelpAbout = ({ isOpen, handleClose }) => {\r\n  const callback = useCallback(\r\n    event => closeOnEsc(event, handleClose),\r\n    [handleClose],\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', callback);\r\n    return () => window.removeEventListener('keydown', callback);\r\n  }, [callback]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <Modal>\r\n      <Header>\r\n        <Title>About</Title>\r\n        <IconButton\r\n          right\r\n          onClick={handleClose}\r\n          data-for=\"tooltip\"\r\n          data-tip=\"Close\"\r\n          data-place=\"left\"\r\n        >\r\n          <Close />\r\n        </IconButton>\r\n      </Header>\r\n\r\n      <Content\r\n        style={{\r\n          paddingTop: 0,\r\n          marginTop: 16,\r\n          overflowY: 'auto',\r\n          height: 'calc(100% - 70px)',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <img\r\n            src={`${process.env.PUBLIC_URL}/social.png`}\r\n            alt=\"logossim's logo\"\r\n            style={{ width: '75%' }}\r\n          />\r\n          <Version>Version {version}</Version>\r\n        </div>\r\n\r\n        <Divider />\r\n\r\n        <div style={{ margin: '0 32px' }}>\r\n          <p style={{ textAlign: 'center' }}>\r\n            If you want to know more about the project,{' '}\r\n            <a\r\n              href=\"https://github.com/renato-bohler/logossim\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              check us out on GitHub!\r\n            </a>\r\n          </p>\r\n          <GitHubButton\r\n            type=\"stargazers\"\r\n            namespace=\"renato-bohler\"\r\n            repo=\"logossim\"\r\n          />\r\n          <p style={{ textAlign: 'center' }}>\r\n            <strong>You can help us</strong> make logossim better! If\r\n            you know a little bit of web development, you can quite\r\n            easily develop new components to the application.\r\n          </p>\r\n        </div>\r\n\r\n        <Divider />\r\n\r\n        <div style={{ margin: '0 32px' }}>\r\n          <p style={{ textAlign: 'center' }}>\r\n            This is a project built by{' '}\r\n            <a\r\n              href=\"https://renato-bohler.github.io/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Renato Böhler\r\n            </a>{' '}\r\n            as an undegraduate thesis on Computer Engineering at{' '}\r\n            <a\r\n              href=\"http://www.utfpr.edu.br/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              UTFPR\r\n            </a>\r\n            .\r\n          </p>\r\n        </div>\r\n      </Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default HelpAbout;\r\n","import React, { useEffect, useCallback } from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { Close } from '../Icons';\r\nimport Key from '../Key/Key';\r\nimport Modal from '../Modal/Modal';\r\nimport {\r\n  Header,\r\n  Title,\r\n  Subtitle,\r\n  Content,\r\n  IconButton,\r\n} from '../Modal/ModalContentLayout';\r\n\r\nconst closeOnEsc = ({ code }, handleClose) => {\r\n  if (code !== 'Escape') return;\r\n  handleClose();\r\n};\r\n\r\nconst TableContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Table = styled.table`\r\n  flex: 1;\r\n  margin: 8px 0;\r\n`;\r\n\r\nconst TableColumn = styled.td`\r\n  padding: 8px;\r\n\r\n  border: 1px solid #5d2eb526;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst HelpKeyboardShortcuts = ({ isOpen, handleClose }) => {\r\n  const callback = useCallback(\r\n    event => closeOnEsc(event, handleClose),\r\n    [handleClose],\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', callback);\r\n    return () => window.removeEventListener('keydown', callback);\r\n  }, [callback]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <Modal>\r\n      <Header>\r\n        <Title>Keyboard shortcuts</Title>\r\n        <IconButton\r\n          right\r\n          onClick={handleClose}\r\n          data-for=\"tooltip\"\r\n          data-tip=\"Close\"\r\n          data-place=\"left\"\r\n        >\r\n          <Close />\r\n        </IconButton>\r\n      </Header>\r\n\r\n      <Content\r\n        style={{\r\n          paddingTop: 16,\r\n          marginTop: 16,\r\n          overflowY: 'auto',\r\n          height: 'calc(100% - 70px)',\r\n        }}\r\n      >\r\n        <span>\r\n          <strong>Note:</strong> some of the actions may have two\r\n          shortcuts.\r\n        </span>\r\n\r\n        <Subtitle style={{ marginTop: 32 }}>\r\n          Circuit management\r\n        </Subtitle>\r\n        <TableContainer>\r\n          <Table>\r\n            <tbody>\r\n              <tr>\r\n                <TableColumn>Save</TableColumn>\r\n                <TableColumn>\r\n                  <Key size={32}>CTRL</Key>\r\n                  <Key size={32}>S</Key>\r\n                </TableColumn>\r\n                <TableColumn />\r\n              </tr>\r\n              <tr>\r\n                <TableColumn>Load</TableColumn>\r\n                <TableColumn>\r\n                  <Key size={32}>CTRL</Key>\r\n                  <Key size={32}>L</Key>\r\n                </TableColumn>\r\n                <TableColumn>\r\n                  <Key size={32}>CTRL</Key>\r\n                  <Key size={32}>SHIFT</Key>\r\n                  <Key size={32}>S</Key>\r\n                </TableColumn>\r\n              </tr>\r\n              <tr>\r\n                <TableColumn>Undo</TableColumn>\r\n                <TableColumn>\r\n                  <Key size={32}>CTRL</Key>\r\n                  <Key size={32}>Z</Key>\r\n                </TableColumn>\r\n                <TableColumn />\r\n              </tr>\r\n              <tr>\r\n                <TableColumn>Redo</TableColumn>\r\n                <TableColumn>\r\n                  <Key size={32}>CTRL</Key>\r\n                  <Key size={32}>SHIFT</Key>\r\n                  <Key size={32}>Z</Key>\r\n                </TableColumn>\r\n                <TableColumn>\r\n                  <Key size={32}>CTRL</Key>\r\n                  <Key size={32}>Y</Key>\r\n                </TableColumn>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <Subtitle style={{ marginTop: 32 }}>\r\n          Component management\r\n        </Subtitle>\r\n        <TableContainer>\r\n          <Table>\r\n            <tbody>\r\n              <tr>\r\n                <TableColumn>Edit configurations</TableColumn>\r\n                <TableColumn>\r\n                  <Key size={32}>CTRL</Key>\r\n                  <Key size={32}>E</Key>\r\n                </TableColumn>\r\n              </tr>\r\n              <tr>\r\n                <TableColumn>Duplicate</TableColumn>\r\n                <TableColumn>\r\n                  <Key size={32}>CTRL</Key>\r\n                  <Key size={32}>D</Key>\r\n                </TableColumn>\r\n              </tr>\r\n              <tr>\r\n                <TableColumn>Delete</TableColumn>\r\n                <TableColumn>\r\n                  <Key size={32}>Delete</Key>\r\n                </TableColumn>\r\n              </tr>\r\n              <tr>\r\n                <TableColumn>Copy</TableColumn>\r\n                <TableColumn>\r\n                  <Key size={32}>CTRL</Key>\r\n                  <Key size={32}>C</Key>\r\n                </TableColumn>\r\n              </tr>\r\n              <tr>\r\n                <TableColumn>Paste</TableColumn>\r\n                <TableColumn>\r\n                  <Key size={32}>CTRL</Key>\r\n                  <Key size={32}>V</Key>\r\n                </TableColumn>\r\n              </tr>\r\n              <tr>\r\n                <TableColumn>Cut</TableColumn>\r\n                <TableColumn>\r\n                  <Key size={32}>CTRL</Key>\r\n                  <Key size={32}>X</Key>\r\n                </TableColumn>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <Subtitle style={{ marginTop: 32 }}>\r\n          Simulation control\r\n        </Subtitle>\r\n        <TableContainer>\r\n          <Table>\r\n            <tbody>\r\n              <tr>\r\n                <TableColumn>Play</TableColumn>\r\n                <TableColumn>\r\n                  <Key size={32}>SPACE</Key>\r\n                </TableColumn>\r\n                <TableColumn />\r\n              </tr>\r\n              <tr>\r\n                <TableColumn>Pause</TableColumn>\r\n                <TableColumn>\r\n                  <Key size={32}>SPACE</Key>\r\n                </TableColumn>\r\n                <TableColumn />\r\n              </tr>\r\n              <tr>\r\n                <TableColumn>Stop</TableColumn>\r\n                <TableColumn>\r\n                  <Key size={32}>CTRL</Key>\r\n                  <Key size={32}>SPACE</Key>\r\n                </TableColumn>\r\n                <TableColumn>\r\n                  <Key size={32}>ESC</Key>\r\n                </TableColumn>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default HelpKeyboardShortcuts;\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  z-index: 10;\r\n\r\n  font-size: 2em;\r\n  font-weight: bold;\r\n  font-family: monospace;\r\n\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  background: #ffffff80;\r\n  border: 1px solid #6441a5;\r\n  border-radius: 16px;\r\n\r\n  padding: 16px;\r\n`;\r\n\r\nconst LoadingExample = () => (\r\n  <Container>Loading example...</Container>\r\n);\r\n\r\nexport default LoadingExample;\r\n","import React from 'react';\r\n\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst BACKGROUND_COLOR = {\r\n  error: '#f44336',\r\n  warning: '#ff9800',\r\n  info: '#2196f3',\r\n  success: '#4caf50',\r\n};\r\n\r\nconst TRANSITION_DURATION = 500;\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: ${props => (props.open ? '5px' : '-200px')};\r\n  left: 50%;\r\n  transition: top ${TRANSITION_DURATION}ms;\r\n  transform: translateX(-50%);\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  border-radius: 10px;\r\n  min-width: 300px;\r\n  min-height: 50px;\r\n\r\n  cursor: pointer;\r\n\r\n  background: ${props => BACKGROUND_COLOR[props.type]};\r\n  color: white;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2),\r\n    0px 6px 10px 0px rgba(0, 0, 0, 0.14),\r\n    0px 1px 18px 0px rgba(0, 0, 0, 0.12);\r\n  z-index: 2;\r\n`;\r\n\r\nconst Message = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  width: 100%;\r\n  align-items: flex-start;\r\n  margin-top: 5px;\r\n  padding: 8px 16px;\r\n`;\r\n\r\nconst progress = keyframes`\r\n  0% {\r\n    width: 100%;\r\n  }\r\n  100% {\r\n    width: 0;\r\n  }\r\n`;\r\n\r\nconst ProgressBar = styled.div`\r\n  background: #ffffff80;\r\n  height: 5px;\r\n  border-radius: 5px;\r\n  align-self: flex-start;\r\n  width: 100%;\r\n\r\n  animation-name: ${progress};\r\n  animation-play-state: ${props =>\r\n    props.paused ? 'paused' : 'running'};\r\n  animation-duration: ${props =>\r\n    props.timeout - TRANSITION_DURATION / 2}ms;\r\n  animation-delay: ${TRANSITION_DURATION / 2}ms;\r\n  animation-timing-function: linear;\r\n`;\r\n\r\nconst Snackbar = ({ open, handleClose, message, type, timeout }) => {\r\n  return (\r\n    <Container\r\n      type={type}\r\n      timeout={timeout}\r\n      open={open}\r\n      onClick={handleClose}\r\n    >\r\n      <Message>\r\n        {message.split(`\\n`).map((string, index) => (\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          <div key={index}>{string}</div>\r\n        ))}\r\n      </Message>\r\n\r\n      {open && <ProgressBar timeout={timeout} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Snackbar;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { Edit, Chevrons } from '../Icons';\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n\r\n  z-index: 2;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  background: white;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  box-shadow: 0px -10px 20px 0px black;\r\n  padding: 12px;\r\n\r\n  transform: ${({ isHidden }) =>\r\n    isHidden ? 'translateY(-100%)' : 'none'};\r\n  transition: 0.5s ease-in-out;\r\n`;\r\n\r\nconst NameContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 4px;\r\n  border: 1px solid\r\n    ${({ isFocused }) => (isFocused ? '#e5e5e5' : 'transparent')};\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    border: 1px solid #e5e5e5;\r\n  }\r\n`;\r\n\r\nconst NameInput = styled.input`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  outline: none;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst IconButton = styled.button`\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ButtonsContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Button = styled.button.attrs(({ ...props }) => ({\r\n  ...props,\r\n  type: 'button',\r\n}))`\r\n  border: none;\r\n  border-radius: 5px;\r\n  background: ${props => {\r\n    switch (props.color) {\r\n      case 'green':\r\n        return '#07d26b';\r\n      case 'orange':\r\n        return 'orange';\r\n      default:\r\n        return 'gray';\r\n    }\r\n  }};\r\n\r\n  color: white;\r\n  font-size: 1.2em;\r\n\r\n  min-width: 110px;\r\n  padding: 5px 20px;\r\n  margin: 5px;\r\n\r\n  transition: 0.5s ease-in-out;\r\n\r\n  &:disabled {\r\n    opacity: 10%;\r\n    cursor: not-allowed;\r\n    background: gray;\r\n  }\r\n`;\r\n\r\nconst FileInput = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst HelpButton = styled.button.attrs(({ ...props }) => ({\r\n  ...props,\r\n  type: 'button',\r\n}))`\r\n  background: rgba(255, 255, 255, 0.6);\r\n  border-radius: 50%;\r\n  border: 1px solid #6441a5;\r\n\r\n  width: 34px;\r\n  height: 34px;\r\n\r\n  margin: 5px;\r\n\r\n  color: #6441a5;\r\n  font-weight: bold;\r\n  font-size: 1.3em;\r\n\r\n  &:focus,\r\n  &:hover {\r\n    background: #6441a5;\r\n    border: 1px solid rgba(255, 255, 255, 0.6);\r\n    color: rgba(255, 255, 255, 0.6);\r\n  }\r\n`;\r\n\r\nconst HelpButtonMenu = styled.div`\r\n  position: absolute;\r\n  top: 80px;\r\n  transform: translateX(calc(17px + -50%));\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  background: rgba(255, 255, 255, 0.6);\r\n  border: 1px solid #6441a5;\r\n  border-radius: 10px;\r\n  padding: 3px;\r\n\r\n  z-index: 3;\r\n`;\r\n\r\nconst HelpButtonMenuItem = styled.button`\r\n  font-size: 14px;\r\n  color: #222;\r\n  padding: 16px;\r\n  border: 0;\r\n  background: transparent;\r\n  border-bottom: ${props =>\r\n    props.last ? 'none' : '1px solid #6441a5'};\r\n\r\n  &:focus,\r\n  &:hover {\r\n    color: #6441a5;\r\n  }\r\n`;\r\n\r\nconst HideButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: absolute;\r\n  top: 80px;\r\n  right: 20px;\r\n  background: white;\r\n  border: 1px solid #e5e5e5;\r\n  border-radius: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  box-shadow: 0px 0px 12px 0px #6b6b6b;\r\n\r\n  svg {\r\n    transform: ${({ isHidden }) =>\r\n      isHidden ? 'rotate(180deg)' : 'none'};\r\n    transition: 0.5s ease-in-out;\r\n  }\r\n`;\r\n\r\nconst Titlebar = ({\r\n  circuitName,\r\n  isCircuitNameFocused,\r\n  handleChangeCircuitName,\r\n  handleFocusCircuitName,\r\n  handleBlurCircuitName,\r\n  handleClickSave,\r\n  handleFileLoad,\r\n  handleClickKeyboardShortcuts,\r\n  handleClickRedoTour,\r\n  handleClickAbout,\r\n  disabled,\r\n}) => {\r\n  const helpButtonRef = useRef();\r\n  const helpMenuRef = useRef();\r\n  const nameInputRef = useRef();\r\n  const fileInputRef = useRef();\r\n  const [isHelpMenuOpen, setHelpMenuOpen] = useState(false);\r\n  const [isHidden, setHidden] = useState(false);\r\n\r\n  const handleHideClick = () => setHidden(hidden => !hidden);\r\n  const handleNameConfirm = event => {\r\n    if (!nameInputRef.current) return;\r\n\r\n    const { key } = event;\r\n    if (key === 'Enter' || key === 'Escape')\r\n      nameInputRef.current.blur();\r\n  };\r\n  const handleNameEditClick = () => {\r\n    if (!nameInputRef.current) return;\r\n    nameInputRef.current.focus();\r\n  };\r\n  const handleToggleHelpMenu = () => setHelpMenuOpen(!isHelpMenuOpen);\r\n  const handleClickLoad = () => {\r\n    if (!fileInputRef.current) return;\r\n    fileInputRef.current.click();\r\n  };\r\n  const handleClickAway = event => {\r\n    if (\r\n      helpMenuRef.current &&\r\n      !helpMenuRef.current.contains(event.target) &&\r\n      helpButtonRef.current &&\r\n      !helpButtonRef.current.contains(event.target)\r\n    ) {\r\n      handleToggleHelpMenu();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickAway);\r\n    return () =>\r\n      document.removeEventListener('mousedown', handleClickAway);\r\n  });\r\n\r\n  return (\r\n    <Container isHidden={isHidden}>\r\n      <NameContainer\r\n        isFocused={isCircuitNameFocused}\r\n        data-for=\"tooltip\"\r\n        data-tip=\"Rename your circuit...\"\r\n        data-place=\"right\"\r\n      >\r\n        <NameInput\r\n          ref={nameInputRef}\r\n          value={circuitName}\r\n          onChange={handleChangeCircuitName}\r\n          onFocus={handleFocusCircuitName}\r\n          onBlur={handleBlurCircuitName}\r\n          onKeyDown={handleNameConfirm}\r\n          maxLength={50}\r\n        />\r\n        <IconButton onClick={handleNameEditClick}>\r\n          <Edit />\r\n        </IconButton>\r\n      </NameContainer>\r\n\r\n      <ButtonsContainer>\r\n        <HelpButton\r\n          id=\"help-button\"\r\n          ref={helpButtonRef}\r\n          onClick={handleToggleHelpMenu}\r\n          data-for=\"tooltip\"\r\n          data-tip=\"Get help...\"\r\n          data-place=\"left\"\r\n        >\r\n          <span>?</span>\r\n        </HelpButton>\r\n        {isHelpMenuOpen && (\r\n          <HelpButtonMenu ref={helpMenuRef}>\r\n            <HelpButtonMenuItem\r\n              onClick={() => {\r\n                handleClickKeyboardShortcuts();\r\n                handleToggleHelpMenu();\r\n              }}\r\n            >\r\n              Keyboard shortcuts\r\n            </HelpButtonMenuItem>\r\n            <HelpButtonMenuItem\r\n              onClick={() => {\r\n                setHidden(false);\r\n                handleClickRedoTour();\r\n                handleToggleHelpMenu();\r\n              }}\r\n            >\r\n              Redo the tour\r\n            </HelpButtonMenuItem>\r\n            <HelpButtonMenuItem\r\n              onClick={() => {\r\n                handleClickAbout();\r\n                handleToggleHelpMenu();\r\n              }}\r\n              last\r\n            >\r\n              About\r\n            </HelpButtonMenuItem>\r\n          </HelpButtonMenu>\r\n        )}\r\n\r\n        <div id=\"save-load-buttons\">\r\n          <Button\r\n            color=\"green\"\r\n            onClick={handleClickSave}\r\n            disabled={disabled}\r\n            data-for=\"tooltip\"\r\n            data-tip=\"Save circuit to file\"\r\n            data-place=\"left\"\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button\r\n            color=\"orange\"\r\n            disabled={disabled}\r\n            onClick={handleClickLoad}\r\n            data-for=\"tooltip\"\r\n            data-tip=\"Load circuit from file...\"\r\n            data-place=\"left\"\r\n          >\r\n            Load\r\n          </Button>\r\n          <FileInput\r\n            id=\"file-input\"\r\n            ref={fileInputRef}\r\n            type=\"file\"\r\n            accept=\".lgsim\"\r\n            onChange={handleFileLoad}\r\n          />\r\n        </div>\r\n      </ButtonsContainer>\r\n\r\n      <HideButton\r\n        isHidden={isHidden}\r\n        onClick={handleHideClick}\r\n        data-for=\"tooltip\"\r\n        data-tip={isHidden ? 'Show titlebar' : 'Hide titlebar'}\r\n        data-place=\"left\"\r\n      >\r\n        <Chevrons />\r\n      </HideButton>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Titlebar;\r\n","export const DIMENSIONS = { width: 180, height: 135 };\r\n\r\n/**\r\n * Example circuit used to make the tour\r\n */\r\nexport default {\r\n  id: 'tour-circuit',\r\n  name: \"Logossim's tour circuit\",\r\n  createdAt: '2020-05-21T20:18:00.000Z',\r\n  updatedAt: '2020-09-08T11:47:00.000Z',\r\n  circuit: {\r\n    id: 'tour-circuit',\r\n    locked: false,\r\n    offsetX: 0,\r\n    offsetY: 0,\r\n    zoom: 100,\r\n    gridSize: 15,\r\n    layers: [\r\n      {\r\n        id: '4d94cbed-1005-4dc6-b0e3-44d71dc14380',\r\n        type: 'diagram-links',\r\n        isSvg: true,\r\n        transformed: true,\r\n        models: {\r\n          'clock-out-link': {\r\n            id: 'clock-out-link',\r\n            type: 'link',\r\n            selected: false,\r\n            source: 'clock',\r\n            sourcePort: 'clock-port',\r\n            target: 'and',\r\n            targetPort: 'and-port-in0',\r\n            points: [\r\n              {\r\n                id: 'bb7c0935-a272-45ea-b47a-f9b79fa7fac3',\r\n                type: 'point',\r\n                x: 30,\r\n                y: 15,\r\n              },\r\n              {\r\n                id: '2f339615-1c6c-450c-9862-06742ed3893f',\r\n                type: 'point',\r\n                x: 60,\r\n                y: 15,\r\n              },\r\n            ],\r\n            labels: [],\r\n            bifurcations: [],\r\n            bifurcationSource: null,\r\n            bifurcationTarget: null,\r\n            value: null,\r\n            bits: 1,\r\n          },\r\n          'and-out-link': {\r\n            id: 'and-out-link',\r\n            type: 'link',\r\n            selected: false,\r\n            source: 'and',\r\n            sourcePort: 'and-port-out',\r\n            target: null,\r\n            targetPort: null,\r\n            points: [\r\n              {\r\n                id: 'e4916002-7182-4866-9df7-46473e7de8bc',\r\n                type: 'point',\r\n                x: 150,\r\n                y: 45,\r\n              },\r\n              {\r\n                id: 'd677077d-9750-4831-be02-566294c988b1',\r\n                type: 'point',\r\n                x: 180,\r\n                y: 45,\r\n              },\r\n            ],\r\n            labels: [],\r\n            bifurcations: [],\r\n            bifurcationSource: null,\r\n            bifurcationTarget: null,\r\n            value: null,\r\n            bits: 1,\r\n          },\r\n          'button-out-link': {\r\n            id: 'button-out-link',\r\n            type: 'link',\r\n            selected: false,\r\n            source: 'button',\r\n            sourcePort: 'c241c69b-8e1a-45be-9982-4c96a537584f',\r\n            target: 'and',\r\n            targetPort: 'and-port-in1',\r\n            points: [\r\n              {\r\n                id: 'fbd656c6-6a36-4903-94b8-c715db34052d',\r\n                type: 'point',\r\n                x: 30,\r\n                y: 75,\r\n              },\r\n              {\r\n                id: 'f70cce22-3d5d-4257-9916-b602da9a901b',\r\n                type: 'point',\r\n                x: 60,\r\n                y: 75,\r\n              },\r\n            ],\r\n            labels: [],\r\n            bifurcations: ['not-in-link'],\r\n            bifurcationSource: null,\r\n            bifurcationTarget: null,\r\n            value: null,\r\n            bits: 1,\r\n          },\r\n          'not-out-link': {\r\n            id: 'not-out-link',\r\n            type: 'link',\r\n            selected: false,\r\n            source: 'not',\r\n            sourcePort: 'not-port-out',\r\n            target: null,\r\n            targetPort: null,\r\n            points: [\r\n              {\r\n                id: 'ba84ed0f-78ed-43c2-93d8-cf907b91b5fd',\r\n                type: 'point',\r\n                x: 120,\r\n                y: 120,\r\n              },\r\n              {\r\n                id: '78a6e161-97c3-4a31-a46c-244469ac75ff',\r\n                type: 'point',\r\n                x: 180,\r\n                y: 120,\r\n              },\r\n            ],\r\n            labels: [],\r\n            bifurcations: [],\r\n            bifurcationSource: null,\r\n            bifurcationTarget: null,\r\n            value: null,\r\n            bits: 1,\r\n          },\r\n          'not-in-link': {\r\n            id: 'not-in-link',\r\n            type: 'link',\r\n            selected: false,\r\n            source: null,\r\n            sourcePort: null,\r\n            target: 'not',\r\n            targetPort: '589ba5d7-8c75-4c82-9068-a67c9b023f77',\r\n            points: [\r\n              {\r\n                id: 'fada8e3b-4b46-4a24-a7ec-e3ca3bab77ab',\r\n                type: 'point',\r\n                x: 45,\r\n                y: 75,\r\n              },\r\n              {\r\n                id: 'f31e71e6-5d72-4f17-9af1-c23bfd257980',\r\n                type: 'point',\r\n                x: 45,\r\n                y: 120,\r\n              },\r\n              {\r\n                id: '2e747ee3-1c90-4e95-a40b-f221eb0710b3',\r\n                type: 'point',\r\n                x: 75,\r\n                y: 120,\r\n              },\r\n            ],\r\n            labels: [],\r\n            bifurcations: [],\r\n            bifurcationSource: 'button-out-link',\r\n            bifurcationTarget: null,\r\n            value: null,\r\n            bits: 1,\r\n          },\r\n        },\r\n      },\r\n      {\r\n        id: '9d30c1dd-e474-45b1-ad88-6b7739678ef3',\r\n        type: 'diagram-nodes',\r\n        isSvg: false,\r\n        transformed: true,\r\n        models: {\r\n          clock: {\r\n            id: 'clock',\r\n            type: 'Clock',\r\n            selected: false,\r\n            x: 0,\r\n            y: 0,\r\n            ports: [\r\n              {\r\n                id: 'clock-port',\r\n                type: 'Port',\r\n                selected: false,\r\n                x: 25,\r\n                y: 10,\r\n                name: 'out',\r\n                parentNode: 'clock',\r\n                links: ['clock-out-link'],\r\n                input: false,\r\n                value: null,\r\n                bits: 1,\r\n              },\r\n            ],\r\n            configurations: {\r\n              FREQUENCY_HZ: 0.5,\r\n              HIGH_DURATION: 1,\r\n              LOW_DURATION: 1,\r\n            },\r\n          },\r\n          and: {\r\n            id: 'and',\r\n            type: 'And',\r\n            selected: false,\r\n            x: 60,\r\n            y: 0,\r\n            ports: [\r\n              {\r\n                id: 'and-port-in0',\r\n                type: 'Port',\r\n                selected: false,\r\n                x: 55,\r\n                y: 10,\r\n                name: 'in0',\r\n                parentNode: 'and',\r\n                links: ['clock-out-link'],\r\n                input: true,\r\n                value: null,\r\n                bits: 1,\r\n              },\r\n              {\r\n                id: 'and-port-in1',\r\n                type: 'Port',\r\n                selected: false,\r\n                x: 55,\r\n                y: 70,\r\n                name: 'in1',\r\n                parentNode: 'and',\r\n                links: ['button-out-link'],\r\n                input: true,\r\n                value: null,\r\n                bits: 1,\r\n              },\r\n              {\r\n                id: 'and-port-out',\r\n                type: 'Port',\r\n                selected: false,\r\n                x: 145,\r\n                y: 40,\r\n                name: 'out',\r\n                parentNode: 'and',\r\n                links: ['and-out-link'],\r\n                input: false,\r\n                value: null,\r\n                bits: 1,\r\n              },\r\n            ],\r\n            configurations: { DATA_BITS: '1', INPUT_PORTS_NUMBER: 2 },\r\n          },\r\n          button: {\r\n            id: 'button',\r\n            type: 'Button',\r\n            selected: false,\r\n            x: 0,\r\n            y: 60,\r\n            ports: [\r\n              {\r\n                id: 'c241c69b-8e1a-45be-9982-4c96a537584f',\r\n                type: 'Port',\r\n                selected: false,\r\n                x: 25,\r\n                y: 70,\r\n                name: 'out',\r\n                parentNode: 'button',\r\n                links: ['button-out-link'],\r\n                input: false,\r\n                value: null,\r\n                bits: 1,\r\n              },\r\n            ],\r\n            configurations: {},\r\n          },\r\n          not: {\r\n            id: 'not',\r\n            type: 'Not',\r\n            selected: false,\r\n            x: 75,\r\n            y: 105,\r\n            ports: [\r\n              {\r\n                id: '589ba5d7-8c75-4c82-9068-a67c9b023f77',\r\n                type: 'Port',\r\n                selected: false,\r\n                x: 70,\r\n                y: 115,\r\n                name: 'in',\r\n                parentNode: 'not',\r\n                links: ['not-in-link'],\r\n                input: true,\r\n                value: null,\r\n                bits: 1,\r\n              },\r\n              {\r\n                id: 'not-port-out',\r\n                type: 'Port',\r\n                selected: false,\r\n                x: 115,\r\n                y: 115,\r\n                name: 'out',\r\n                parentNode: 'not',\r\n                links: ['not-out-link'],\r\n                input: false,\r\n                value: null,\r\n                bits: 1,\r\n              },\r\n            ],\r\n            configurations: {\r\n              DATA_BITS: '1',\r\n            },\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n","import React, { Component } from 'react';\r\nimport GitHubButton from 'react-github-button';\r\nimport Joyride, { ACTIONS, EVENTS } from 'react-joyride';\r\n\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nimport Key from '../Key/Key';\r\nimport bifurcation from './images/bifurcation.gif';\r\nimport contextMenu from './images/context-menu.gif';\r\nimport simulation from './images/simulation.gif';\r\nimport wire from './images/wire.gif';\r\nimport { DIMENSIONS } from './tourCircuit';\r\n\r\nconst pulse = keyframes`\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n\r\n  55% {\r\n    background-color: rgba(42, 8, 69, 0.5);\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\n\r\nconst Pulse = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  animation: ${pulse} 1s ease-in-out infinite;\r\n  background-color: ${props => props.color};\r\n  border: 1px solid rgba(42, 8, 69, 0.7);\r\n  border-radius: 50%;\r\n\r\n  height: ${props => props.size}px;\r\n  width: ${props => props.size}px;\r\n`;\r\n\r\nconst Beacon = React.forwardRef((props, ref) => (\r\n  <Pulse\r\n    size={30}\r\n    color=\"rgba(100, 65, 165, 0.3)\"\r\n    ref={ref}\r\n    {...props}\r\n  >\r\n    <Pulse size={20} color=\"rgba(100, 65, 165, 0.5)\" />\r\n  </Pulse>\r\n));\r\n\r\nconst imageStyle = {\r\n  alignSelf: 'center',\r\n  borderRadius: 25,\r\n  boxShadow: 'rgba(171, 171, 171, 0.38) 0px 13px 20px 0px',\r\n  marginBottom: 16,\r\n};\r\n\r\nexport default class Tour extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentStep: 0,\r\n      steps: [\r\n        {\r\n          title: 'Welcome!',\r\n          content: (\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/social.png`}\r\n                alt=\"logossim's logo\"\r\n                style={{\r\n                  width: 300,\r\n                  height: 158,\r\n                  alignSelf: 'center',\r\n                }}\r\n              />\r\n              <p>\r\n                This is <strong>logossim</strong>: an open source\r\n                digital logic simulator, built for the web and to be\r\n                extensible.\r\n              </p>\r\n              <p>Would you like to take a quick tour?</p>\r\n            </div>\r\n          ),\r\n          target: 'body',\r\n          placement: 'center',\r\n          showProgress: false,\r\n          disableOverlayClose: false,\r\n          locale: {\r\n            skip: 'No, thanks',\r\n            next: 'Yes, please!',\r\n          },\r\n        },\r\n        {\r\n          target: '#tour-circuit-area-wrapper',\r\n          title: 'This is the circuit workstation',\r\n          content: (\r\n            <p>\r\n              Here&apos;s where you are going to draw your circuits\r\n            </p>\r\n          ),\r\n        },\r\n        {\r\n          target: '#component-select-button',\r\n          title: 'Adding components',\r\n          content: (\r\n            <span>\r\n              <p>And you&apos;ll start by adding some components.</p>\r\n              <p>\r\n                You can do it by clicking on this button, then\r\n                you&apos;ll see all available components, so you can\r\n                create awesome circuits...\r\n              </p>\r\n              <p>\r\n                <strong>Hint:</strong> use the\r\n                <Key size={24}>CTRL</Key>\r\n                <Key size={24}>A</Key> shortcut.\r\n              </p>\r\n            </span>\r\n          ),\r\n          placement: 'top',\r\n        },\r\n        {\r\n          target: '#tour-circuit-wrapper',\r\n          title: 'Adding components',\r\n          content: <p>... like this one, for example!</p>,\r\n          spotlightPadding: 30,\r\n        },\r\n        {\r\n          target: '#tour-circuit-wrapper',\r\n          title: 'Managing components',\r\n          content: (\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n              <p>\r\n                Notice that you can right click anywhere on the canvas\r\n                to access some handy commands, like duplicate, undo\r\n                &amp; redo and component configuration editing.\r\n              </p>\r\n              <img\r\n                src={contextMenu}\r\n                alt=\"Context menu example video\"\r\n                style={{\r\n                  ...imageStyle,\r\n                  width: 268,\r\n                  height: 132,\r\n                }}\r\n              />\r\n            </div>\r\n          ),\r\n          spotlightPadding: 30,\r\n        },\r\n        {\r\n          target: '[data-linkid=\"clock-out-link\"]',\r\n          title: 'Wiring components',\r\n          content: (\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n              <p>\r\n                To wire components together, you can drag a\r\n                component&apos;s port onto another port.\r\n              </p>\r\n              <img\r\n                src={wire}\r\n                alt=\"Wiring components example video\"\r\n                style={{\r\n                  ...imageStyle,\r\n                  width: 268,\r\n                  height: 178,\r\n                }}\r\n              />\r\n              <p>\r\n                <strong>Oh! Important note:</strong> you can select a\r\n                wire by clicking it, and delete it using the Delete\r\n                key.\r\n              </p>\r\n            </div>\r\n          ),\r\n          placement: 'top',\r\n          spotlightPadding: 45,\r\n        },\r\n        {\r\n          target: '[data-linkid=\"not-in-link\"]',\r\n          title: 'Wiring components',\r\n          content: (\r\n            <span\r\n              style={{ display: 'flex', flexDirection: 'column' }}\r\n            >\r\n              <p>\r\n                You can also drag a new wire from an existing wire.\r\n              </p>\r\n              <img\r\n                src={bifurcation}\r\n                alt=\"Bifurcating wires example video\"\r\n                style={{\r\n                  ...imageStyle,\r\n                  width: 268,\r\n                  height: 160,\r\n                }}\r\n              />\r\n              <p>\r\n                <strong>Another important note:</strong> you can leave\r\n                the wire with a loose end and connect it afterwards.\r\n              </p>\r\n            </span>\r\n          ),\r\n          placement: 'top',\r\n          spotlightPadding: 45,\r\n        },\r\n        {\r\n          target: '#simulation-control-buttons',\r\n          title: 'Simulation control',\r\n          content: (\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n              <p>\r\n                After wiring it all together, you just need to run the\r\n                simulation to test your ideas!\r\n              </p>\r\n              <img\r\n                src={simulation}\r\n                alt=\"Simulation execution example video\"\r\n                style={{\r\n                  ...imageStyle,\r\n                  width: 254,\r\n                  height: 194,\r\n                }}\r\n              />\r\n              <p>Useful shortcuts:</p>\r\n              <ul style={{ margin: 0 }}>\r\n                <li>\r\n                  <strong>Play/pause:</strong>\r\n                  <Key size={24}>SPACE</Key>\r\n                </li>\r\n                <li>\r\n                  <strong>Stop:</strong>\r\n                  <Key size={24}>CTRL</Key>\r\n                  <Key size={24}>SPACE</Key>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          ),\r\n          placement: 'top',\r\n        },\r\n        {\r\n          target: '#help-button',\r\n          title: 'Still need help?',\r\n          content: (\r\n            <span>\r\n              <p>\r\n                In case you need any assistance in the future, come\r\n                back to this help button. Here you&apos;ll find:\r\n              </p>\r\n              <ol style={{ lineHeight: '200%' }}>\r\n                <li>All keyboard shortcuts</li>\r\n                <li>More about the project</li>\r\n                <li>\r\n                  And this tour, if you feel like doing it another\r\n                  time\r\n                </li>\r\n              </ol>\r\n            </span>\r\n          ),\r\n        },\r\n        {\r\n          target: '#save-load-buttons',\r\n          title: 'By the way...',\r\n          content: (\r\n            <span>\r\n              <p>\r\n                After you&apos;ve done your amazing circuit,\r\n                don&apos;t forget that you can save it and reload it\r\n                later!\r\n              </p>\r\n              <p>Useful shortcuts:</p>\r\n              <ul style={{ margin: 0 }}>\r\n                <li>\r\n                  <strong>Save:</strong>\r\n                  <Key size={24}>CTRL</Key>\r\n                  <Key size={24}>S</Key>\r\n                </li>\r\n                <li>\r\n                  <strong>Load:</strong>\r\n                  <Key size={24}>CTRL</Key>\r\n                  <Key size={24}>L</Key>\r\n                </li>\r\n              </ul>\r\n            </span>\r\n          ),\r\n        },\r\n        {\r\n          target: 'body',\r\n          title: \"And that's all folks!\",\r\n          content: (\r\n            <div>\r\n              <p>\r\n                If you want to know more about the project,{' '}\r\n                <a\r\n                  href=\"https://github.com/renato-bohler/logossim\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  check us out on GitHub!\r\n                </a>\r\n              </p>\r\n              <GitHubButton\r\n                type=\"stargazers\"\r\n                namespace=\"renato-bohler\"\r\n                repo=\"logossim\"\r\n              />\r\n              <p>\r\n                <strong>You can help us</strong> make logossim better!\r\n                If you know a little bit of web development, you can\r\n                quite easily develop new components to the\r\n                application.\r\n              </p>\r\n            </div>\r\n          ),\r\n          placement: 'center',\r\n          showProgress: false,\r\n          showSkipButton: false,\r\n          disableOverlayClose: false,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.recenterTourCircuit);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.recenterTourCircuit);\r\n  }\r\n\r\n  recenterTourCircuit = () => {\r\n    const { currentStep } = this.state;\r\n    const { run } = this.props;\r\n\r\n    if (!run) return;\r\n    if (currentStep < 3) return;\r\n\r\n    const { recenterCircuit } = this.props;\r\n    recenterCircuit();\r\n  };\r\n\r\n  callback = ({ type, action, index }) => {\r\n    const { setTourRunning, loadCircuit, clearCircuit } = this.props;\r\n\r\n    // Next step\r\n    if (type === EVENTS.STEP_AFTER) {\r\n      if (index === 2 && action === ACTIONS.NEXT) loadCircuit();\r\n      if (index === 3 && action === ACTIONS.PREV) clearCircuit();\r\n\r\n      this.setState({\r\n        currentStep: index + (action === ACTIONS.NEXT ? 1 : -1),\r\n      });\r\n    }\r\n\r\n    // Dismiss (skipping, closing or ending tour)\r\n    if (type === EVENTS.TOUR_END || action === ACTIONS.CLOSE) {\r\n      clearCircuit();\r\n      localStorage.setItem('tour-done', true);\r\n      setTourRunning(false);\r\n      this.setState({ currentStep: 0 });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { steps, currentStep } = this.state;\r\n    const { run } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Joyride\r\n          run={run}\r\n          steps={steps}\r\n          stepIndex={currentStep}\r\n          continuous\r\n          scrollToFirstStep\r\n          showProgress\r\n          showSkipButton\r\n          disableOverlayClose\r\n          styles={{\r\n            tooltip: {\r\n              borderRadius: 10,\r\n            },\r\n            tooltipContent: {\r\n              fontSize: 14,\r\n              textAlign: 'left',\r\n            },\r\n            buttonBack: {\r\n              color: 'black',\r\n              fontSize: 12,\r\n            },\r\n            buttonNext: {\r\n              background: '#6441a5',\r\n              fontSize: 12,\r\n              borderRadius: 5,\r\n            },\r\n            buttonSkip: {\r\n              color: '#6441a5',\r\n              fontSize: 12,\r\n              border: '1px solid #6441a5',\r\n              borderRadius: 5,\r\n            },\r\n          }}\r\n          locale={{\r\n            back: 'Back',\r\n            close: 'Close',\r\n            last: 'Got it!',\r\n            next: 'Next',\r\n            open: 'Open',\r\n            skip: 'Skip',\r\n          }}\r\n          beaconComponent={Beacon}\r\n          callback={this.callback}\r\n        />\r\n        <div\r\n          style={{\r\n            display: run ? 'block' : 'none',\r\n            position: 'absolute',\r\n            width: window.innerWidth * 0.75,\r\n            height: window.innerHeight * 0.5,\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n          }}\r\n          id=\"tour-circuit-area-wrapper\"\r\n        />\r\n        <div\r\n          style={{\r\n            display: run ? 'block' : 'none',\r\n            position: 'absolute',\r\n            width: DIMENSIONS.width,\r\n            height: DIMENSIONS.height,\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n          }}\r\n          id=\"tour-circuit-wrapper\"\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Tooltip from 'react-tooltip';\r\n\r\nimport components, { groupedComponents } from '@logossim/components';\r\nimport {\r\n  SimulationEngine,\r\n  DiagramEngine,\r\n  Diagram,\r\n} from '@logossim/core';\r\n\r\nimport FileSaver from 'file-saver';\r\n\r\nimport {\r\n  Titlebar,\r\n  SimulationControlButtons,\r\n  ComponentSelectButton,\r\n  ComponentSelect,\r\n  ComponentEdit,\r\n  ContextMenus,\r\n  HelpKeyboardShortcuts,\r\n  LoadingExample,\r\n  HelpAbout,\r\n  Snackbar,\r\n  Tour,\r\n} from './ui-components';\r\nimport tourCircuit, {\r\n  DIMENSIONS,\r\n} from './ui-components/Tour/tourCircuit';\r\n\r\nimport './App.css';\r\n\r\nconst DEFAULT_CIRCUIT_NAME = 'Untitled circuit';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isComponentSelectOpen: false,\r\n      isComponentEditOpen: false,\r\n      isHelpKeyboardOpen: false,\r\n      isHelpAboutOpen: false,\r\n      componentEdit: null,\r\n      isTourAvailable: false,\r\n      isTourRunning: !JSON.parse(localStorage.getItem('tour-done')),\r\n      circuitName: DEFAULT_CIRCUIT_NAME,\r\n      circuitCreatedAt: null,\r\n      isCircuitNameFocused: false,\r\n      isLoadingExample: false,\r\n      snackbar: {\r\n        open: false,\r\n        message: '',\r\n        type: 'success',\r\n        timeout: 0,\r\n        timeoutID: null,\r\n      },\r\n    };\r\n\r\n    this.diagram = new DiagramEngine(\r\n      components,\r\n      this.areShortcutsAllowed,\r\n      this.showSnackbar,\r\n    );\r\n    this.simulation = new SimulationEngine(components);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const example = urlParams.get('example');\r\n\r\n    if (example === null) {\r\n      window.addEventListener('load', this.loadHandler);\r\n    } else {\r\n      this.loadExample(example);\r\n    }\r\n\r\n    window.addEventListener('keydown', this.shortcutHandler);\r\n    window.addEventListener('beforeunload', this.unloadHandler);\r\n\r\n    this.autoSaveInterval = setInterval(this.autoSave, 5000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.shortcutHandler);\r\n    window.addEventListener('load', this.loadHandler);\r\n    window.removeEventListener('beforeunload', this.unloadHandler);\r\n\r\n    clearInterval(this.autoSaveInterval);\r\n  }\r\n\r\n  areShortcutsAllowed = () => {\r\n    const {\r\n      isComponentSelectOpen,\r\n      isComponentEditOpen,\r\n      isHelpKeyboardOpen,\r\n      isHelpAboutOpen,\r\n      isCircuitNameFocused,\r\n      isTourRunning,\r\n    } = this.state;\r\n\r\n    return !(\r\n      isComponentSelectOpen ||\r\n      isComponentEditOpen ||\r\n      isHelpKeyboardOpen ||\r\n      isHelpAboutOpen ||\r\n      isCircuitNameFocused ||\r\n      isTourRunning\r\n    );\r\n  };\r\n\r\n  shortcutHandler = event => {\r\n    const { ctrlKey, shiftKey, code } = event;\r\n\r\n    if (!this.areShortcutsAllowed()) return;\r\n\r\n    // Add component\r\n    if (ctrlKey && code === 'KeyA') {\r\n      event.preventDefault();\r\n      if (!this.simulation.isStopped()) return;\r\n\r\n      this.showAddComponent();\r\n    }\r\n\r\n    // Component configuration\r\n    if (ctrlKey && code === 'KeyE') {\r\n      event.preventDefault();\r\n      if (!this.simulation.isStopped()) return;\r\n\r\n      const selectedNodes = this.diagram.getSelectedNodes();\r\n      if (selectedNodes.length !== 1) return;\r\n      const node = selectedNodes[0];\r\n      this.showEditComponent(node);\r\n    }\r\n\r\n    // Play/pause toggle simulation\r\n    if (!ctrlKey && code === 'Space') {\r\n      event.preventDefault();\r\n      if (this.simulation.isRunning()) this.handleClickPause();\r\n      else this.handleClickStart();\r\n    }\r\n\r\n    // Stop simulation\r\n    if ((ctrlKey && code === 'Space') || code === 'Escape') {\r\n      event.preventDefault();\r\n\r\n      if (!this.simulation.isStopped()) this.handleClickStop();\r\n    }\r\n\r\n    // Save circuit\r\n    if (ctrlKey && !shiftKey && code === 'KeyS') {\r\n      event.preventDefault();\r\n      this.handleClickSave();\r\n    }\r\n\r\n    // Load circuit\r\n    if (\r\n      (ctrlKey && code === 'KeyL') ||\r\n      (ctrlKey && shiftKey && code === 'KeyS')\r\n    ) {\r\n      event.preventDefault();\r\n      this.handleClickLoad();\r\n    }\r\n  };\r\n\r\n  isCircuitEmpty = circuit => {\r\n    if (!circuit) return true;\r\n\r\n    return Object.keys(circuit.layers[1].models).length === 0;\r\n  };\r\n\r\n  loadFile = file => {\r\n    this.setState({\r\n      circuitName: file.name,\r\n      circuitCreatedAt: file.createdAt,\r\n    });\r\n    this.diagram.load(file.circuit);\r\n  };\r\n\r\n  loadExample = async name => {\r\n    this.setState({ isLoadingExample: true });\r\n    const response = await window.fetch(`./examples/${name}.lgsim`);\r\n    const circuit = await response.json();\r\n    this.loadFile(circuit);\r\n    this.setState({ isLoadingExample: false });\r\n  };\r\n\r\n  loadHandler = () => {\r\n    const lastSaved = JSON.parse(\r\n      localStorage.getItem('circuit-autosave'),\r\n    );\r\n\r\n    if (this.isCircuitEmpty(lastSaved?.circuit)) {\r\n      this.setState({ isTourAvailable: true });\r\n      return;\r\n    }\r\n\r\n    // eslint-disable-next-line no-alert\r\n    const reload = window.confirm('Reload last unsaved circuit?');\r\n    if (reload) {\r\n      this.loadFile(lastSaved);\r\n    } else {\r\n      this.setState({ isTourAvailable: true });\r\n      localStorage.removeItem('circuit-autosave');\r\n    }\r\n  };\r\n\r\n  shouldWarnUnload = (currentCircuit, lastSavedCircuit) => {\r\n    if (this.isCircuitEmpty(currentCircuit)) return false;\r\n\r\n    return (\r\n      JSON.stringify(lastSavedCircuit.layers) !==\r\n      JSON.stringify(currentCircuit.layers)\r\n    );\r\n  };\r\n\r\n  unloadHandler = event => {\r\n    const lastSaved = JSON.parse(\r\n      localStorage.getItem('last-saved-circuit'),\r\n    );\r\n    const file = this.generateFile();\r\n\r\n    if (this.shouldWarnUnload(file.circuit, lastSaved.circuit)) {\r\n      if (this.simulation.isStopped()) {\r\n        localStorage.setItem(\r\n          'circuit-autosave',\r\n          JSON.stringify(file),\r\n        );\r\n      }\r\n      // eslint-disable-next-line no-param-reassign\r\n      event.returnValue =\r\n        'You have unsaved changes. Sure you want to leave?';\r\n    }\r\n  };\r\n\r\n  generateFile = () => {\r\n    const { circuitName, circuitCreatedAt } = this.state;\r\n    const circuit = this.diagram.serialize();\r\n\r\n    return {\r\n      id: circuit.id,\r\n      name: circuitName,\r\n      createdAt: circuitCreatedAt || new Date(),\r\n      updatedAt: new Date(),\r\n      circuit,\r\n    };\r\n  };\r\n\r\n  autoSave = () => {\r\n    const file = this.generateFile();\r\n\r\n    if (file.circuit.id === 'tour-circuit') return;\r\n    if (this.isCircuitEmpty(file.circuit)) return;\r\n    if (!this.simulation.isStopped()) return;\r\n\r\n    localStorage.setItem('circuit-autosave', JSON.stringify(file));\r\n  };\r\n\r\n  synchronizeSimulation = () => {\r\n    const diff = this.simulation.getDiff();\r\n\r\n    // Handles components diff\r\n    Object.entries(diff.components).forEach(([id, componentDiff]) =>\r\n      this.diagram.synchronizeComponent(id, componentDiff),\r\n    );\r\n\r\n    // Handles link value diff\r\n    Object.entries(diff.links).forEach(([id, value]) =>\r\n      this.diagram.synchronizeLink(id, value),\r\n    );\r\n\r\n    this.simulation.clearDiff();\r\n    this.diagram.repaint();\r\n  };\r\n\r\n  renderSimulation = () => {\r\n    if (!this.simulation.isRunning()) return;\r\n\r\n    this.synchronizeSimulation();\r\n\r\n    requestAnimationFrame(this.renderSimulation);\r\n  };\r\n\r\n  handleCircuitNameChange = event => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    this.setState({ circuitName: event.target.value });\r\n  };\r\n\r\n  handleCircuitNameFocus = event => {\r\n    this.setState({ isCircuitNameFocused: true });\r\n    if (event.target.value === DEFAULT_CIRCUIT_NAME)\r\n      event.target.select();\r\n  };\r\n\r\n  handleCircuitNameBlur = () =>\r\n    this.setState({ isCircuitNameFocused: false });\r\n\r\n  handleClickSave = () => {\r\n    const { circuitCreatedAt } = this.state;\r\n    if (!circuitCreatedAt)\r\n      this.setState({ circuitCreatedAt: new Date() });\r\n\r\n    const file = JSON.stringify(this.generateFile(), null, 2);\r\n    const blob = new Blob([file], {\r\n      type: 'application/json',\r\n    });\r\n\r\n    const { circuitName } = this.state;\r\n    const filename = circuitName.replace(/[/|\\\\:*?\"<>]/g, '');\r\n    localStorage.setItem('last-saved-circuit', file);\r\n\r\n    FileSaver.saveAs(blob, `${filename}.lgsim`);\r\n  };\r\n\r\n  handleClickLoad = () =>\r\n    document.getElementById('file-input').click();\r\n\r\n  handleFileLoad = event => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n\r\n    if (files.length !== 1) return;\r\n\r\n    const handleError = () =>\r\n      this.showSnackbar(\r\n        `Error loading circuit file:\\n${files[0].name}`,\r\n      );\r\n\r\n    const fr = new FileReader();\r\n    fr.onerror = handleError;\r\n    fr.onload = e => {\r\n      try {\r\n        const file = JSON.parse(e.target.result);\r\n        this.loadFile(file);\r\n      } catch (exception) {\r\n        handleError();\r\n      }\r\n    };\r\n    fr.readAsText(files.item(0));\r\n  };\r\n\r\n  handleClickStart = () => {\r\n    const serialized = JSON.stringify(this.diagram.serialize());\r\n    localStorage.setItem('circuit-autosave', serialized);\r\n\r\n    this.diagram.clearSelection();\r\n    this.diagram.setLocked(true);\r\n\r\n    this.simulation.start(this.diagram.getModel());\r\n    this.renderSimulation();\r\n    this.forceUpdate();\r\n  };\r\n\r\n  handleClickPause = () => {\r\n    this.simulation.pause();\r\n    this.forceUpdate();\r\n  };\r\n\r\n  handleClickStop = async () => {\r\n    await this.simulation.stop();\r\n    this.diagram.clearAllValues();\r\n    this.diagram.setLocked(false);\r\n    this.forceUpdate();\r\n    this.simulation.clearDiff();\r\n  };\r\n\r\n  showAddComponent = () =>\r\n    this.setState({\r\n      isComponentSelectOpen: true,\r\n    });\r\n\r\n  hideAddComponent = () =>\r\n    this.setState({\r\n      isComponentSelectOpen: false,\r\n    });\r\n\r\n  showEditComponent = componentEdit => {\r\n    this.diagram.clearSelection();\r\n\r\n    this.setState({\r\n      isComponentEditOpen: true,\r\n      componentEdit,\r\n    });\r\n  };\r\n\r\n  hideEditComponent = () =>\r\n    this.setState({\r\n      isComponentEditOpen: false,\r\n      componentEdit: null,\r\n    });\r\n\r\n  setTourRunning = isTourRunning => this.setState({ isTourRunning });\r\n\r\n  showHelpTour = () => this.setTourRunning(true);\r\n\r\n  showHelpKeyboard = () =>\r\n    this.setState({ isHelpKeyboardOpen: true });\r\n\r\n  hideHelpKeyboard = () =>\r\n    this.setState({ isHelpKeyboardOpen: false });\r\n\r\n  showHelpAbout = () => this.setState({ isHelpAboutOpen: true });\r\n\r\n  hideHelpAbout = () => this.setState({ isHelpAboutOpen: false });\r\n\r\n  showSnackbar = async (message, type = 'error') => {\r\n    const { snackbar } = this.state;\r\n    const timeout = 3000 + message.split(' ').length * 50;\r\n\r\n    if (snackbar.open) {\r\n      clearTimeout(snackbar.timeoutID);\r\n      this.hideSnackbar();\r\n      await new Promise(res => setTimeout(res, 500));\r\n    }\r\n\r\n    this.setState({\r\n      snackbar: {\r\n        open: true,\r\n        message,\r\n        type,\r\n        timeout,\r\n        timeoutID: setTimeout(this.hideSnackbar, timeout),\r\n      },\r\n    });\r\n  };\r\n\r\n  hideSnackbar = () => {\r\n    const { snackbar } = this.state;\r\n    clearTimeout(snackbar.timeoutID);\r\n\r\n    this.setState(state => ({\r\n      snackbar: {\r\n        ...state.snackbar,\r\n        open: false,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleLoadTourCircuit = () => {\r\n    this.circuitBeforeTour = this.generateFile();\r\n    this.loadFile(tourCircuit);\r\n    this.handleCenterTourCircuitOffset();\r\n  };\r\n\r\n  handleUnloadTourCircuit = () => {\r\n    if (!this.circuitBeforeTour) return;\r\n\r\n    this.loadFile(this.circuitBeforeTour);\r\n    this.circuitBeforeTour = null;\r\n  };\r\n\r\n  handleCenterTourCircuitOffset = () => {\r\n    this.diagram\r\n      .getModel()\r\n      .setOffset(\r\n        (window.innerWidth - DIMENSIONS.width) / 2,\r\n        (window.innerHeight - DIMENSIONS.height) / 2,\r\n      );\r\n    this.diagram.realignGrid();\r\n    this.diagram.repaint();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isComponentSelectOpen,\r\n      isComponentEditOpen,\r\n      isHelpKeyboardOpen,\r\n      isHelpAboutOpen,\r\n      componentEdit,\r\n      isTourAvailable,\r\n      isTourRunning,\r\n      circuitName,\r\n      isCircuitNameFocused,\r\n      isLoadingExample,\r\n      snackbar,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Titlebar\r\n          circuitName={circuitName}\r\n          isCircuitNameFocused={isCircuitNameFocused}\r\n          handleChangeCircuitName={this.handleCircuitNameChange}\r\n          handleFocusCircuitName={this.handleCircuitNameFocus}\r\n          handleBlurCircuitName={this.handleCircuitNameBlur}\r\n          handleClickSave={this.handleClickSave}\r\n          handleFileLoad={this.handleFileLoad}\r\n          handleClickKeyboardShortcuts={this.showHelpKeyboard}\r\n          handleClickRedoTour={this.showHelpTour}\r\n          handleClickAbout={this.showHelpAbout}\r\n          disabled={!this.simulation.isStopped()}\r\n        />\r\n        <SimulationControlButtons\r\n          state={this.simulation.getState()}\r\n          handleClickStart={this.handleClickStart}\r\n          handleClickPause={this.handleClickPause}\r\n          handleClickStop={this.handleClickStop}\r\n        />\r\n        <ComponentSelectButton\r\n          handleClick={this.showAddComponent}\r\n          disabled={!this.simulation.isStopped()}\r\n        />\r\n\r\n        <ComponentSelect\r\n          isOpen={isComponentSelectOpen}\r\n          groups={groupedComponents}\r\n          handleClose={this.hideAddComponent}\r\n          handleComponentDrop={this.diagram.handleComponentDrop}\r\n        />\r\n        <ComponentEdit\r\n          isOpen={isComponentEditOpen}\r\n          components={components}\r\n          component={componentEdit}\r\n          handleClose={this.hideEditComponent}\r\n          handleComponentEdit={this.diagram.handleComponentEdit}\r\n        />\r\n\r\n        <HelpKeyboardShortcuts\r\n          isOpen={isHelpKeyboardOpen}\r\n          handleClose={this.hideHelpKeyboard}\r\n        />\r\n        <HelpAbout\r\n          isOpen={isHelpAboutOpen}\r\n          handleClose={this.hideHelpAbout}\r\n        />\r\n        {isTourAvailable && (\r\n          <Tour\r\n            run={isTourRunning}\r\n            setTourRunning={this.setTourRunning}\r\n            loadCircuit={this.handleLoadTourCircuit}\r\n            clearCircuit={this.handleUnloadTourCircuit}\r\n            recenterCircuit={this.handleCenterTourCircuitOffset}\r\n          />\r\n        )}\r\n\r\n        {isLoadingExample && <LoadingExample />}\r\n        <Diagram engine={this.diagram} />\r\n\r\n        <ContextMenus\r\n          duplicateSelected={this.diagram.duplicateSelected}\r\n          cutSelected={this.diagram.cutSelected}\r\n          copySelected={this.diagram.copySelected}\r\n          pasteSelected={this.diagram.pasteSelected}\r\n          deleteSelected={this.diagram.deleteSelected}\r\n          undo={this.diagram.undo}\r\n          redo={this.diagram.redo}\r\n          zoomIn={this.diagram.zoomIn}\r\n          zoomOut={this.diagram.zoomOut}\r\n          configureComponent={this.showEditComponent}\r\n        />\r\n\r\n        <Tooltip id=\"tooltip\" globalEventOff=\"click\" />\r\n        <Snackbar\r\n          open={snackbar.open}\r\n          type={snackbar.type}\r\n          message={snackbar.message}\r\n          timeout={snackbar.timeout}\r\n          handleClose={this.hideSnackbar}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (\r\n    process.env.NODE_ENV === 'production' &&\r\n    'serviceWorker' in navigator\r\n  ) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href,\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\r\n        'Error during service worker registration:',\r\n        error,\r\n      );\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null &&\r\n          contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/* eslint-disable no-extend-native */\r\nArray.prototype.asArray = function arrayAsArray() {\r\n  return this;\r\n};\r\n\r\nArray.prototype.asNumber = function arrayAsNumber() {\r\n  if (this.some(bit => bit === 'e')) return 'e';\r\n  if (this.some(bit => bit === 'x')) return 'x';\r\n\r\n  if (this.some(bit => bit !== 0 && bit !== 1))\r\n    throw new Error(\r\n      '[logossim] Array cannot be converted to number because it contains invalid values',\r\n    );\r\n\r\n  return this.slice()\r\n    .reverse()\r\n    .reduce((acc, curr, index) => acc + curr * 2 ** index, 0);\r\n};\r\n\r\nArray.prototype.transpose = function transpose() {\r\n  return this[0].map((x1, i) => this.map(x2 => x2[i]));\r\n};\r\n\r\nNumber.prototype.asNumber = function numberAsNumber() {\r\n  return Number(this);\r\n};\r\n\r\nNumber.prototype.asArray = function numberAsArray(dataBits) {\r\n  if (!dataBits)\r\n    throw new Error(\r\n      '[logossim] To transform a number to array, you need to pass as argument the length of the array',\r\n    );\r\n\r\n  const result = [...this.toString(2)].map(Number);\r\n\r\n  return Array(dataBits)\r\n    .fill(0)\r\n    .concat(result)\r\n    .slice(result.length);\r\n};\r\n\r\nString.prototype.asArray = function stringAsArray(dataBits) {\r\n  if (!dataBits)\r\n    throw new Error(\r\n      '[logossim] To transform a number to array, you need to pass as argument the length of the array',\r\n    );\r\n\r\n  return [...this.padStart(dataBits, 0)].map(char => {\r\n    if (char === '0') return 0;\r\n    if (char === '1') return 1;\r\n    return char;\r\n  });\r\n};\r\n\r\nString.prototype.parseBinary = function parseBinary(\r\n  dataBits,\r\n  arrayLength,\r\n  fillWith = 0,\r\n) {\r\n  if (!dataBits)\r\n    throw new Error(\r\n      '[logossim] To parse a binary, you need to pass the value length in bits as first argument.',\r\n    );\r\n\r\n  if (!arrayLength)\r\n    throw new Error(\r\n      '[logossim] To parse a binary, you need to pass the result array length as second argument.',\r\n    );\r\n\r\n  const sanitize = /[^01]/g;\r\n  const chunk = new RegExp(`.{1,${dataBits}}`, 'g');\r\n\r\n  const content = (\r\n    this.replace(sanitize, '').match(chunk) || []\r\n  ).map(value => parseInt(value, 2));\r\n\r\n  return Array(arrayLength)\r\n    .fill(fillWith)\r\n    .map((original, i) => {\r\n      const value = content[i];\r\n      if (!value) return original;\r\n      return value;\r\n    });\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport '@logossim/core/common/prototype';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}